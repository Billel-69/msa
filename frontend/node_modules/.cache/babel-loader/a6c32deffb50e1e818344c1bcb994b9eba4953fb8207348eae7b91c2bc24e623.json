{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\msa\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initializeAuth = () => {\n      try {\n        const storedToken = localStorage.getItem('token');\n        const storedUser = localStorage.getItem('user');\n        console.log('AuthContext - Token stocké:', !!storedToken);\n        console.log('AuthContext - User stocké:', !!storedUser);\n        if (storedToken && storedUser) {\n          const parsedUser = JSON.parse(storedUser);\n          console.log('AuthContext - Utilisateur restauré:', parsedUser.username);\n          setToken(storedToken);\n          setUser(parsedUser);\n        } else {\n          console.log('AuthContext - Aucune donnée d\\'auth stockée');\n        }\n      } catch (error) {\n        console.error('AuthContext - Erreur lors de la restauration:', error);\n        // Nettoyer les données corrompues\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setToken(null);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = (newToken, newUser) => {\n    console.log('AuthContext - Login appelé avec:', {\n      token: !!newToken,\n      user: newUser === null || newUser === void 0 ? void 0 : newUser.username\n    });\n    try {\n      // Vérifier que les données sont valides\n      if (!newToken || !newUser) {\n        throw new Error('Token ou utilisateur manquant');\n      }\n\n      // Sauvegarder dans localStorage\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(newUser));\n\n      // Mettre à jour le state\n      setToken(newToken);\n      setUser(newUser);\n      console.log('AuthContext - Login réussi pour:', newUser.username);\n    } catch (error) {\n      console.error('AuthContext - Erreur lors du login:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    console.log('AuthContext - Logout appelé');\n    try {\n      // Nettoyer localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n\n      // Nettoyer le state\n      setToken(null);\n      setUser(null);\n      console.log('AuthContext - Logout terminé');\n    } catch (error) {\n      console.error('AuthContext - Erreur lors du logout:', error);\n    }\n  };\n  const value = {\n    user,\n    token,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!(token && user)\n  };\n\n  // Log pour debug\n  console.log('AuthContext - État actuel:', {\n    hasUser: !!user,\n    hasToken: !!token,\n    loading,\n    isAuthenticated: value.isAuthenticated\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"uAkFQMmIUxfxJcQTEb8tCM/KFt4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","loading","setLoading","initializeAuth","storedToken","localStorage","getItem","storedUser","console","log","parsedUser","JSON","parse","username","error","removeItem","login","newToken","newUser","Error","setItem","stringify","logout","value","isAuthenticated","hasUser","hasToken","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/msa/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const initializeAuth = () => {\r\n            try {\r\n                const storedToken = localStorage.getItem('token');\r\n                const storedUser = localStorage.getItem('user');\r\n\r\n                console.log('AuthContext - Token stocké:', !!storedToken);\r\n                console.log('AuthContext - User stocké:', !!storedUser);\r\n\r\n                if (storedToken && storedUser) {\r\n                    const parsedUser = JSON.parse(storedUser);\r\n                    console.log('AuthContext - Utilisateur restauré:', parsedUser.username);\r\n\r\n                    setToken(storedToken);\r\n                    setUser(parsedUser);\r\n                } else {\r\n                    console.log('AuthContext - Aucune donnée d\\'auth stockée');\r\n                }\r\n            } catch (error) {\r\n                console.error('AuthContext - Erreur lors de la restauration:', error);\r\n                // Nettoyer les données corrompues\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem('user');\r\n                setToken(null);\r\n                setUser(null);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        initializeAuth();\r\n    }, []);\r\n\r\n    const login = (newToken, newUser) => {\r\n        console.log('AuthContext - Login appelé avec:', {\r\n            token: !!newToken,\r\n            user: newUser?.username\r\n        });\r\n\r\n        try {\r\n            // Vérifier que les données sont valides\r\n            if (!newToken || !newUser) {\r\n                throw new Error('Token ou utilisateur manquant');\r\n            }\r\n\r\n            // Sauvegarder dans localStorage\r\n            localStorage.setItem('token', newToken);\r\n            localStorage.setItem('user', JSON.stringify(newUser));\r\n\r\n            // Mettre à jour le state\r\n            setToken(newToken);\r\n            setUser(newUser);\r\n\r\n            console.log('AuthContext - Login réussi pour:', newUser.username);\r\n        } catch (error) {\r\n            console.error('AuthContext - Erreur lors du login:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        console.log('AuthContext - Logout appelé');\r\n\r\n        try {\r\n            // Nettoyer localStorage\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n\r\n            // Nettoyer le state\r\n            setToken(null);\r\n            setUser(null);\r\n\r\n            console.log('AuthContext - Logout terminé');\r\n        } catch (error) {\r\n            console.error('AuthContext - Erreur lors du logout:', error);\r\n        }\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        token,\r\n        login,\r\n        logout,\r\n        loading,\r\n        isAuthenticated: !!(token && user)\r\n    };\r\n\r\n    // Log pour debug\r\n    console.log('AuthContext - État actuel:', {\r\n        hasUser: !!user,\r\n        hasToken: !!token,\r\n        loading,\r\n        isAuthenticated: value.isAuthenticated\r\n    });\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}