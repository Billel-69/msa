{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\msa\\\\frontend\\\\src\\\\components\\\\QuizGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './QuizGame.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuizGame = () => {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const [currentQuiz, setCurrentQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  useEffect(() => {\n    const fetchQuizzes = async () => {\n      try {\n        const res = await axios.get('/api/quizzes');\n        setQuizzes(res.data);\n        setCurrentQuiz(res.data[0]); // Start with the first quiz\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchQuizzes();\n  }, []);\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestionIndex + 1;\n    if (nextQuestion < currentQuiz.questions.length) {\n      setCurrentQuestionIndex(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  if (!currentQuiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-game\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"You scored \", score, \" out of \", currentQuiz.questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", currentQuestionIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), \"/\", currentQuiz.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: currentQuiz.questions[currentQuestionIndex].questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: currentQuiz.questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerOptionClick(option === currentQuiz.questions[currentQuestionIndex].correctAnswer),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(QuizGame, \"XQ5tb8v5j//P6OomDw5qJIX54Z0=\");\n_c = QuizGame;\nexport default QuizGame;\nvar _c;\n$RefreshReg$(_c, \"QuizGame\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizGame","_s","quizzes","setQuizzes","currentQuiz","setCurrentQuiz","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showScore","setShowScore","fetchQuizzes","res","get","data","err","console","error","handleAnswerOptionClick","isCorrect","nextQuestion","questions","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","questionText","options","map","option","index","onClick","correctAnswer","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/msa/frontend/src/components/QuizGame.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './QuizGame.css';\r\n\r\nconst QuizGame = () => {\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    const [currentQuiz, setCurrentQuiz] = useState(null);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchQuizzes = async () => {\r\n            try {\r\n                const res = await axios.get('/api/quizzes');\r\n                setQuizzes(res.data);\r\n                setCurrentQuiz(res.data[0]); // Start with the first quiz\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n        fetchQuizzes();\r\n    }, []);\r\n\r\n    const handleAnswerOptionClick = (isCorrect) => {\r\n        if (isCorrect) {\r\n            setScore(score + 1);\r\n        }\r\n\r\n        const nextQuestion = currentQuestionIndex + 1;\r\n        if (nextQuestion < currentQuiz.questions.length) {\r\n            setCurrentQuestionIndex(nextQuestion);\r\n        } else {\r\n            setShowScore(true);\r\n        }\r\n    };\r\n\r\n    if (!currentQuiz) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className='quiz-game'>\r\n            {showScore ? (\r\n                <div className='score-section'>\r\n                    You scored {score} out of {currentQuiz.questions.length}\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className='question-section'>\r\n                        <div className='question-count'>\r\n                            <span>Question {currentQuestionIndex + 1}</span>/{currentQuiz.questions.length}\r\n                        </div>\r\n                        <div className='question-text'>{currentQuiz.questions[currentQuestionIndex].questionText}</div>\r\n                    </div>\r\n                    <div className='answer-section'>\r\n                        {currentQuiz.questions[currentQuestionIndex].options.map((option, index) => (\r\n                            <button key={index} onClick={() => handleAnswerOptionClick(option === currentQuiz.questions[currentQuestionIndex].correctAnswer)}>\r\n                                {option}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuizGame;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACZ,MAAMkB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,cAAc,CAAC;QAC3CX,UAAU,CAACU,GAAG,CAACE,IAAI,CAAC;QACpBV,cAAc,CAACQ,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACtB;IACJ,CAAC;IACDJ,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,uBAAuB,GAAIC,SAAS,IAAK;IAC3C,IAAIA,SAAS,EAAE;MACXX,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACvB;IAEA,MAAMa,YAAY,GAAGf,oBAAoB,GAAG,CAAC;IAC7C,IAAIe,YAAY,GAAGjB,WAAW,CAACkB,SAAS,CAACC,MAAM,EAAE;MAC7ChB,uBAAuB,CAACc,YAAY,CAAC;IACzC,CAAC,MAAM;MACHV,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,IAAI,CAACP,WAAW,EAAE;IACd,oBAAOP,OAAA;MAAA2B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACI/B,OAAA;IAAKgC,SAAS,EAAC,WAAW;IAAAL,QAAA,EACrBd,SAAS,gBACNb,OAAA;MAAKgC,SAAS,EAAC,eAAe;MAAAL,QAAA,GAAC,aAChB,EAAChB,KAAK,EAAC,UAAQ,EAACJ,WAAW,CAACkB,SAAS,CAACC,MAAM;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,gBAEN/B,OAAA,CAAAE,SAAA;MAAAyB,QAAA,gBACI3B,OAAA;QAAKgC,SAAS,EAAC,kBAAkB;QAAAL,QAAA,gBAC7B3B,OAAA;UAAKgC,SAAS,EAAC,gBAAgB;UAAAL,QAAA,gBAC3B3B,OAAA;YAAA2B,QAAA,GAAM,WAAS,EAAClB,oBAAoB,GAAG,CAAC;UAAA;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,KAAC,EAACxB,WAAW,CAACkB,SAAS,CAACC,MAAM;QAAA;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC,eACN/B,OAAA;UAAKgC,SAAS,EAAC,eAAe;UAAAL,QAAA,EAAEpB,WAAW,CAACkB,SAAS,CAAChB,oBAAoB,CAAC,CAACwB;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9F,CAAC,eACN/B,OAAA;QAAKgC,SAAS,EAAC,gBAAgB;QAAAL,QAAA,EAC1BpB,WAAW,CAACkB,SAAS,CAAChB,oBAAoB,CAAC,CAACyB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACnErC,OAAA;UAAoBsC,OAAO,EAAEA,CAAA,KAAMhB,uBAAuB,CAACc,MAAM,KAAK7B,WAAW,CAACkB,SAAS,CAAChB,oBAAoB,CAAC,CAAC8B,aAAa,CAAE;UAAAZ,QAAA,EAC5HS;QAAM,GADEC,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA,eACR;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC3B,EAAA,CA9DID,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAgEd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}