{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\msa\\\\frontend\\\\src\\\\components\\\\games\\\\QuizGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './QuizGame.css';\nimport { useAuth } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuizGame = () => {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const [currentQuiz, setCurrentQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const {\n    token\n  } = useAuth(); // Get token from auth context\n\n  useEffect(() => {\n    const fetchQuizzes = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/quizzes', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Quizzes loaded:\", response.data);\n        setQuizzes(response.data);\n        if (response.data.length > 0) {\n          setCurrentQuiz(response.data[0]); // Start with the first quiz\n        }\n      } catch (error) {\n        console.error('Error fetching quizzes:', error);\n      }\n    };\n    if (token) {\n      fetchQuizzes();\n    }\n  }, [token]);\n  const handleAnswerOptionClick = selectedIndex => {\n    if (currentQuiz && currentQuiz.questions && selectedIndex === currentQuiz.questions[currentQuestionIndex].correctOption) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestionIndex + 1;\n    if (currentQuiz && currentQuiz.questions && nextQuestion < currentQuiz.questions.length) {\n      setCurrentQuestionIndex(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  if (!currentQuiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quiz-title\",\n      children: currentQuiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-subject\",\n      children: [\"Subject: \", currentQuiz.subject]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You scored \", score, \" out of \", currentQuiz.questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"restart-button\",\n        onClick: () => {\n          setCurrentQuestionIndex(0);\n          setScore(0);\n          setShowScore(false);\n        },\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", currentQuestionIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), \"/\", currentQuiz.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: currentQuiz.questions[currentQuestionIndex].questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: currentQuiz.questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerOptionClick(index),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(QuizGame, \"lkOXKQ8jGIZqz5/lNVTM/awFuog=\", false, function () {\n  return [useAuth];\n});\n_c = QuizGame;\nexport default QuizGame;\nvar _c;\n$RefreshReg$(_c, \"QuizGame\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizGame","_s","quizzes","setQuizzes","currentQuiz","setCurrentQuiz","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showScore","setShowScore","token","fetchQuizzes","response","get","headers","Authorization","console","log","data","length","error","handleAnswerOptionClick","selectedIndex","questions","correctOption","nextQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","subject","onClick","questionText","options","map","option","index","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/msa/frontend/src/components/games/QuizGame.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './QuizGame.css';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst QuizGame = () => {\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    const [currentQuiz, setCurrentQuiz] = useState(null);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const { token } = useAuth(); // Get token from auth context\r\n\r\n    useEffect(() => {\r\n        const fetchQuizzes = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/quizzes', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n                console.log(\"Quizzes loaded:\", response.data);\r\n                setQuizzes(response.data);\r\n                if (response.data.length > 0) {\r\n                    setCurrentQuiz(response.data[0]); // Start with the first quiz\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching quizzes:', error);\r\n            }\r\n        };\r\n        \r\n        if (token) {\r\n            fetchQuizzes();\r\n        }\r\n    }, [token]);\r\n\r\n    const handleAnswerOptionClick = (selectedIndex) => {\r\n        if (currentQuiz && currentQuiz.questions && \r\n            selectedIndex === currentQuiz.questions[currentQuestionIndex].correctOption) {\r\n            setScore(score + 1);\r\n        }\r\n\r\n        const nextQuestion = currentQuestionIndex + 1;\r\n        if (currentQuiz && currentQuiz.questions && nextQuestion < currentQuiz.questions.length) {\r\n            setCurrentQuestionIndex(nextQuestion);\r\n        } else {\r\n            setShowScore(true);\r\n        }\r\n    };\r\n\r\n    if (!currentQuiz) {\r\n        return <div className=\"quiz-container\">Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"quiz-container\">\r\n            <h2 className=\"quiz-title\">{currentQuiz.title}</h2>\r\n            <div className=\"quiz-subject\">Subject: {currentQuiz.subject}</div>\r\n            \r\n            {showScore ? (\r\n                <div className=\"score-section\">\r\n                    <h3>Quiz Completed!</h3>\r\n                    <p>You scored {score} out of {currentQuiz.questions.length}</p>\r\n                    <button className=\"restart-button\" onClick={() => {\r\n                        setCurrentQuestionIndex(0);\r\n                        setScore(0);\r\n                        setShowScore(false);\r\n                    }}>\r\n                        Try Again\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className=\"question-section\">\r\n                        <div className=\"question-count\">\r\n                            <span>Question {currentQuestionIndex + 1}</span>/{currentQuiz.questions.length}\r\n                        </div>\r\n                        <div className=\"question-text\">{currentQuiz.questions[currentQuestionIndex].questionText}</div>\r\n                    </div>\r\n                    <div className=\"answer-section\">\r\n                        {currentQuiz.questions[currentQuestionIndex].options.map((option, index) => (\r\n                            <button key={index} onClick={() => handleAnswerOptionClick(index)}>\r\n                                {option}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuizGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}