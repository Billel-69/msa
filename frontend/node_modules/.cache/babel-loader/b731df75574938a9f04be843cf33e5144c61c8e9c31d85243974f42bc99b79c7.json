{"ast":null,"code":"/**\r\n * @file axiosInstance.js\r\n * @description Fichier de configuration pour une instance Axios centralis√©e.\r\n * Ce module cr√©e une instance d'Axios avec une URL de base pr√©configur√©e\r\n * et un intercepteur de requ√™te pour ajouter automatiquement le token d'authentification JWT.\r\n * Cela simplifie les appels API √† travers l'application.\r\n */\n\n// =================================================================================\n// IMPORTATIONS\n// =================================================================================\nimport axios from 'axios';\n\n// Base URL for API\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// =================================================================================\n// CONFIGURATION DE L'INSTANCE AXIOS\n// =================================================================================\n\n// Cr√©e une instance d'Axios avec des param√®tres par d√©faut.\nconst axiosInstance = axios.create({\n  // L'URL de base de l'API backend. Toutes les requ√™tes relatives utiliseront cette URL.\n  baseURL: API_BASE_URL\n});\n\n// =================================================================================\n// INTERCEPTEUR DE REQU√äTE\n// =================================================================================\n\n/**\r\n * Intercepteur de requ√™te Axios.\r\n * Ce middleware s'ex√©cute avant chaque requ√™te envoy√©e depuis l'application.\r\n * Son r√¥le est de r√©cup√©rer le token JWT depuis le localStorage et de l'injecter\r\n * dans l'en-t√™te 'Authorization' de la requ√™te si le token existe.\r\n */\naxiosInstance.interceptors.request.use(config => {\n  var _config$method;\n  // R√©cup√®re le token stock√© dans le localStorage.\n  const token = localStorage.getItem('token');\n\n  // Si un token est trouv√©, l'ajoute √† l'en-t√™te d'autorisation.\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  console.log(`üåê API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  // Retourne l'objet de configuration de la requ√™te modifi√© (ou non).\n  return config;\n}, error => {\n  // G√®re les erreurs qui pourraient survenir lors de la configuration de la requ√™te.\n  // Cette fonction est rarement d√©clench√©e mais est une bonne pratique √† conserver.\n  console.error('‚ùå Request interceptor error:', error);\n  return Promise.reject(error);\n});\n\n// =================================================================================\n// INTERCEPTEUR DE R√âPONSE\n// =================================================================================\naxiosInstance.interceptors.response.use(response => {\n  console.log(`‚úÖ API Response: ${response.status} ${response.config.url}`);\n  return response;\n}, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  console.error(`‚ùå API Error: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) || 'Network'} ${originalRequest === null || originalRequest === void 0 ? void 0 : originalRequest.url}`);\n\n  // Gestion des erreurs d'authentification\n\n  return Promise.reject(error);\n});\n\n// =================================================================================\n// EXPORTATION\n// =================================================================================\nexport default axiosInstance;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","axiosInstance","create","baseURL","interceptors","request","use","config","_config$method","token","localStorage","getItem","headers","Authorization","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","originalRequest"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/msa/frontend/src/utils/axiosInstance.js"],"sourcesContent":["/**\r\n * @file axiosInstance.js\r\n * @description Fichier de configuration pour une instance Axios centralis√©e.\r\n * Ce module cr√©e une instance d'Axios avec une URL de base pr√©configur√©e\r\n * et un intercepteur de requ√™te pour ajouter automatiquement le token d'authentification JWT.\r\n * Cela simplifie les appels API √† travers l'application.\r\n */\r\n\r\n// =================================================================================\r\n// IMPORTATIONS\r\n// =================================================================================\r\nimport axios from 'axios';\r\n\r\n// Base URL for API\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n// =================================================================================\r\n// CONFIGURATION DE L'INSTANCE AXIOS\r\n// =================================================================================\r\n\r\n// Cr√©e une instance d'Axios avec des param√®tres par d√©faut.\r\nconst axiosInstance = axios.create({\r\n    // L'URL de base de l'API backend. Toutes les requ√™tes relatives utiliseront cette URL.\r\n    baseURL: API_BASE_URL,\r\n});\r\n\r\n// =================================================================================\r\n// INTERCEPTEUR DE REQU√äTE\r\n// =================================================================================\r\n\r\n/**\r\n * Intercepteur de requ√™te Axios.\r\n * Ce middleware s'ex√©cute avant chaque requ√™te envoy√©e depuis l'application.\r\n * Son r√¥le est de r√©cup√©rer le token JWT depuis le localStorage et de l'injecter\r\n * dans l'en-t√™te 'Authorization' de la requ√™te si le token existe.\r\n */\r\naxiosInstance.interceptors.request.use(\r\n    (config) => {\r\n        // R√©cup√®re le token stock√© dans le localStorage.\r\n        const token = localStorage.getItem('token');\r\n\r\n        // Si un token est trouv√©, l'ajoute √† l'en-t√™te d'autorisation.\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n\r\n        console.log(`üåê API Request: ${config.method?.toUpperCase()} ${config.url}`);\r\n        // Retourne l'objet de configuration de la requ√™te modifi√© (ou non).\r\n        return config;\r\n    },\r\n    (error) => {\r\n        // G√®re les erreurs qui pourraient survenir lors de la configuration de la requ√™te.\r\n        // Cette fonction est rarement d√©clench√©e mais est une bonne pratique √† conserver.\r\n        console.error('‚ùå Request interceptor error:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// =================================================================================\r\n// INTERCEPTEUR DE R√âPONSE\r\n// =================================================================================\r\naxiosInstance.interceptors.response.use(\r\n    (response) => {\r\n        console.log(`‚úÖ API Response: ${response.status} ${response.config.url}`);\r\n        return response;\r\n    },\r\n    async (error) => {\r\n        const originalRequest = error.config;\r\n\r\n        console.error(`‚ùå API Error: ${error.response?.status || 'Network'} ${originalRequest?.url}`);\r\n\r\n        // Gestion des erreurs d'authentification\r\n\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// =================================================================================\r\n// EXPORTATION\r\n// =================================================================================\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAE7E;AACA;AACA;;AAEA;AACA,MAAMC,aAAa,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC/B;EACAC,OAAO,EAAEN;AACb,CAAC,CAAC;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAI,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACR;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAIF,KAAK,EAAE;IACPF,MAAM,CAACK,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EACpD;EAEAK,OAAO,CAACC,GAAG,CAAC,oBAAAP,cAAA,GAAmBD,MAAM,CAACS,MAAM,cAAAR,cAAA,uBAAbA,cAAA,CAAeS,WAAW,CAAC,CAAC,IAAIV,MAAM,CAACW,GAAG,EAAE,CAAC;EAC5E;EACA,OAAOX,MAAM;AACjB,CAAC,EACAY,KAAK,IAAK;EACP;EACA;EACAL,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACpD,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACA;AACA;AACAlB,aAAa,CAACG,YAAY,CAACkB,QAAQ,CAAChB,GAAG,CAClCgB,QAAQ,IAAK;EACVR,OAAO,CAACC,GAAG,CAAC,mBAAmBO,QAAQ,CAACC,MAAM,IAAID,QAAQ,CAACf,MAAM,CAACW,GAAG,EAAE,CAAC;EACxE,OAAOI,QAAQ;AACnB,CAAC,EACD,MAAOH,KAAK,IAAK;EAAA,IAAAK,eAAA;EACb,MAAMC,eAAe,GAAGN,KAAK,CAACZ,MAAM;EAEpCO,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAAK,eAAA,GAAAL,KAAK,CAACG,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBD,MAAM,KAAI,SAAS,IAAIE,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEP,GAAG,EAAE,CAAC;;EAE5F;;EAEA,OAAOE,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACA;AACA;AACA,eAAelB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}