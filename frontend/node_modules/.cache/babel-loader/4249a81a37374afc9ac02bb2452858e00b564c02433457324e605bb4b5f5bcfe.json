{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\msa\\\\frontend\\\\src\\\\pages\\\\Notifications.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/Notifications.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Notifications() {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchNotifications = async () => {\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n    try {\n      const res = await axios.get('http://localhost:5000/api/notifications', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(res.data);\n    } catch (err) {\n      console.error('Error fetching notifications:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchNotifications();\n  }, [token]);\n  const markAsRead = async id => {\n    if (!token) return;\n    try {\n      await axios.put(`http://localhost:5000/api/notifications/read/${id}`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(notifications.map(n => n.id === id ? {\n        ...n,\n        is_read: 1\n      } : n));\n    } catch (err) {\n      console.error('Error marking notification as read:', err);\n    }\n  };\n  const markAllAsRead = async () => {\n    if (!token) return;\n    try {\n      await axios.put('http://localhost:5000/api/notifications/read-all', {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(notifications.map(n => ({\n        ...n,\n        is_read: 1\n      })));\n    } catch (err) {\n      console.error('Error marking all notifications as read:', err);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement des notifications...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mes Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), notifications.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mark-all-btn\",\n        onClick: markAllAsRead,\n        children: \"Tout marquer comme lu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"notifications-list\",\n        children: notifications.map(n => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `notification-item ${n.is_read === 0 ? 'unread' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: n.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: n.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: new Date(n.created_at).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), n.is_read === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"read-btn\",\n            onClick: () => markAsRead(n.id),\n            children: \"Marquer comme lu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this)]\n        }, n.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucune notification.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Notifications, \"Q9NZTUSAmZh0eFxE8cb0KhlF0R8=\", false, function () {\n  return [useAuth];\n});\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","_s","token","notifications","setNotifications","loading","setLoading","fetchNotifications","res","get","headers","Authorization","data","err","console","error","markAsRead","id","put","map","n","is_read","markAllAsRead","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","onClick","title","content","Date","created_at","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/msa/frontend/src/pages/Notifications.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport '../styles/Notifications.css';\r\n\r\nfunction Notifications() {\r\n  const { token } = useAuth();\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchNotifications = async () => {\r\n    if (!token) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/notifications', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setNotifications(res.data);\r\n    } catch (err) {\r\n      console.error('Error fetching notifications:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n  }, [token]);\r\n\r\n  const markAsRead = async (id) => {\r\n    if (!token) return;\r\n    \r\n    try {\r\n      await axios.put(`http://localhost:5000/api/notifications/read/${id}`, {}, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setNotifications(notifications.map(n => n.id === id ? { ...n, is_read: 1 } : n));\r\n    } catch (err) {\r\n      console.error('Error marking notification as read:', err);\r\n    }\r\n  };\r\n\r\n  const markAllAsRead = async () => {\r\n    if (!token) return;\r\n    \r\n    try {\r\n      await axios.put('http://localhost:5000/api/notifications/read-all', {}, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setNotifications(notifications.map(n => ({ ...n, is_read: 1 })));  \r\n    } catch (err) {\r\n      console.error('Error marking all notifications as read:', err);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Chargement des notifications...</p>;\r\n\r\n  return (\r\n    <div className=\"notifications-page\">\r\n      <h2>Mes Notifications</h2>\r\n      {notifications.length > 0 ? (\r\n        <>  \r\n          <button className=\"mark-all-btn\" onClick={markAllAsRead}>\r\n            Tout marquer comme lu\r\n          </button>\r\n          <ul className=\"notifications-list\">\r\n            {notifications.map(n => (\r\n              <li key={n.id} className={`notification-item ${n.is_read === 0 ? 'unread' : ''}`}>\r\n                <div>\r\n                  <strong>{n.title}</strong>\r\n                  <p>{n.content}</p>\r\n                  <small>{new Date(n.created_at).toLocaleString()}</small>\r\n                </div>\r\n                {n.is_read === 0 && (\r\n                  <button className=\"read-btn\" onClick={() => markAsRead(n.id)}>\r\n                    Marquer comme lu\r\n                  </button>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <p>Aucune notification.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}