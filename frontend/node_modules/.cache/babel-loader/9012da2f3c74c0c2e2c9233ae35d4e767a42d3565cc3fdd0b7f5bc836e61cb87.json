{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\msa\\\\frontend\\\\src\\\\pages\\\\Messages.jsx\",\n  _s = $RefreshSig$();\n// Copier le contenu du composant Messages.jsx précédemment créé\n// Ce fichier va dans src/pages/Messages.jsx\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nimport { FaArrowLeft, FaPaperPlane, FaSearch, FaUserPlus, FaEllipsisV, FaTrash, FaCircle } from 'react-icons/fa';\nimport './Messages.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Messages() {\n  _s();\n  var _currentConversation$;\n  const {\n    conversationId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    token,\n    user\n  } = useAuth();\n\n  // États principaux\n  const [conversations, setConversations] = useState([]);\n  const [currentConversation, setCurrentConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [sending, setSending] = useState(false);\n\n  // États pour la recherche et création de conversations\n  const [showSearch, setShowSearch] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchLoading, setSearchLoading] = useState(false);\n\n  // Refs\n  const messagesEndRef = useRef(null);\n  const messageInputRef = useRef(null);\n  useEffect(() => {\n    if (!token || !user) {\n      navigate('/connexion');\n      return;\n    }\n    fetchConversations();\n    if (conversationId) {\n      fetchConversationDetails();\n      fetchMessages();\n    }\n  }, [conversationId, token, user, navigate]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Auto-refresh messages toutes les 3 secondes si dans une conversation\n  useEffect(() => {\n    if (!conversationId) return;\n    const interval = setInterval(() => {\n      fetchMessages(true); // true = silent refresh\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [conversationId]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const fetchConversations = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/messages/conversations', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setConversations(response.data);\n    } catch (error) {\n      console.error('Erreur lors du chargement des conversations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchConversationDetails = async () => {\n    try {\n      if (!conversationId) return;\n      const response = await axios.get(`http://localhost:5000/api/messages/conversation/${conversationId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCurrentConversation(response.data);\n    } catch (error) {\n      console.error('Erreur lors du chargement des détails:', error);\n    }\n  };\n  const fetchMessages = async (silent = false) => {\n    if (!conversationId) return;\n    try {\n      const response = await axios.get(`http://localhost:5000/api/messages/conversation/${conversationId}/messages`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessages(response.data);\n\n      // Marquer comme lu\n      await axios.put(`http://localhost:5000/api/messages/conversation/${conversationId}/read`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!silent) {\n        fetchConversations(); // Refresh conversation list to update unread counts\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des messages:', error);\n    }\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || sending) return;\n    setSending(true);\n    try {\n      const response = await axios.post(`http://localhost:5000/api/messages/conversation/${conversationId}/send`, {\n        content: newMessage.trim()\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessages(prev => [...prev, response.data]);\n      setNewMessage('');\n      fetchConversations(); // Update conversation list\n\n      // Focus back to input\n      setTimeout(() => {\n        var _messageInputRef$curr;\n        (_messageInputRef$curr = messageInputRef.current) === null || _messageInputRef$curr === void 0 ? void 0 : _messageInputRef$curr.focus();\n      }, 100);\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi:', error);\n      alert('Erreur lors de l\\'envoi du message');\n    } finally {\n      setSending(false);\n    }\n  };\n  const searchUsers = async query => {\n    if (!query || query.length < 2) {\n      setSearchResults([]);\n      return;\n    }\n    setSearchLoading(true);\n    try {\n      const response = await axios.get(`http://localhost:5000/api/messages/search-users?q=${encodeURIComponent(query)}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSearchResults(response.data);\n    } catch (error) {\n      console.error('Erreur lors de la recherche:', error);\n      setSearchResults([]);\n    } finally {\n      setSearchLoading(false);\n    }\n  };\n  const startConversation = async otherUserId => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/messages/conversation/with/${otherUserId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setShowSearch(false);\n      setSearchQuery('');\n      setSearchResults([]);\n      navigate(`/messages/${response.data.conversationId}`);\n      fetchConversations();\n    } catch (error) {\n      console.error('Erreur lors de la création de conversation:', error);\n      alert('Erreur lors de la création de la conversation');\n    }\n  };\n  const deleteMessage = async messageId => {\n    if (!window.confirm('Êtes-vous sûr de vouloir supprimer ce message ?')) return;\n    try {\n      await axios.delete(`http://localhost:5000/api/messages/message/${messageId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessages(prev => prev.filter(msg => msg.id !== messageId));\n    } catch (error) {\n      console.error('Erreur lors de la suppression:', error);\n      alert('Erreur lors de la suppression du message');\n    }\n  };\n  const formatMessageTime = dateString => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInHours = Math.abs(now - date) / 36e5;\n    if (diffInHours < 24) {\n      return date.toLocaleTimeString('fr-FR', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else {\n      return date.toLocaleDateString('fr-FR', {\n        day: '2-digit',\n        month: '2-digit'\n      });\n    }\n  };\n  const handleSearchInput = e => {\n    const query = e.target.value;\n    setSearchQuery(query);\n    searchUsers(query);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-page loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Chargement des messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversations-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-message-btn\",\n          onClick: () => setShowSearch(!showSearch),\n          title: \"Nouvelle conversation\",\n          children: /*#__PURE__*/_jsxDEV(FaUserPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), showSearch && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n            className: \"search-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Rechercher un utilisateur...\",\n            value: searchQuery,\n            onChange: handleSearchInput,\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this), searchLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Recherche...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 29\n        }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: searchResults.map(user => {\n            var _user$name;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-result-item\",\n              onClick: () => startConversation(user.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-avatar\",\n                children: user.profile_picture ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://localhost:5000/uploads/${user.profile_picture}`,\n                  alt: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: (_user$name = user.name) === null || _user$name === void 0 ? void 0 : _user$name.charAt(0).toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"@\", user.username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 41\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 29\n        }, this), searchQuery.length >= 2 && !searchLoading && searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-search-results\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aucun utilisateur trouv\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-list\",\n        children: conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-conversations\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aucune conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Recherchez un utilisateur pour commencer \\xE0 discuter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }, this) : conversations.map(conv => {\n          var _conv$other_user_name;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `conversation-item ${conversationId === conv.conversation_id.toString() ? 'active' : ''}`,\n            onClick: () => navigate(`/messages/${conv.conversation_id}`),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-avatar\",\n              children: [conv.other_user_picture ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/uploads/${conv.other_user_picture}`,\n                alt: conv.other_user_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: (_conv$other_user_name = conv.other_user_name) === null || _conv$other_user_name === void 0 ? void 0 : _conv$other_user_name.charAt(0).toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 41\n              }, this), conv.unread_count > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"unread-indicator\",\n                children: /*#__PURE__*/_jsxDEV(FaCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: conv.other_user_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: formatMessageTime(conv.last_message_time)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-preview\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: conv.unread_count > 0 ? 'unread' : '',\n                  children: conv.last_message || 'Aucun message'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 41\n                }, this), conv.unread_count > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-count\",\n                  children: conv.unread_count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 33\n            }, this)]\n          }, conv.conversation_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-main\",\n      children: !conversationId ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-conversation-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"S\\xE9lectionnez une conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choisissez une conversation dans la liste ou cr\\xE9ez-en une nouvelle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-btn\",\n            onClick: () => navigate('/messages'),\n            children: /*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 29\n          }, this), currentConversation && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-avatar\",\n              children: currentConversation.other_user_picture ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/uploads/${currentConversation.other_user_picture}`,\n                alt: currentConversation.other_user_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: (_currentConversation$ = currentConversation.other_user_name) === null || _currentConversation$ === void 0 ? void 0 : _currentConversation$.charAt(0).toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: currentConversation.other_user_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"@\", currentConversation.other_user_username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"options-btn\",\n            children: /*#__PURE__*/_jsxDEV(FaEllipsisV, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-messages\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Aucun message dans cette conversation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Envoyez votre premier message !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 33\n          }, this) : messages.map(message => {\n            var _message$sender_name;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.sender_id === user.id ? 'own' : 'other'}`,\n              children: [message.sender_id !== user.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-avatar\",\n                children: message.sender_picture ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://localhost:5000/uploads/${message.sender_picture}`,\n                  alt: message.sender_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: (_message$sender_name = message.sender_name) === null || _message$sender_name === void 0 ? void 0 : _message$sender_name.charAt(0).toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-bubble\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: message.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 49\n                  }, this), message.sender_id === user.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-message-btn\",\n                    onClick: () => deleteMessage(message.id),\n                    title: \"Supprimer le message\",\n                    children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-time\",\n                  children: formatMessageTime(message.created_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 41\n              }, this)]\n            }, message.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 37\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"message-input-container\",\n          onSubmit: sendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: messageInputRef,\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Tapez votre message...\",\n            className: \"message-input\",\n            maxLength: 1000,\n            disabled: sending\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-btn\",\n            disabled: !newMessage.trim() || sending,\n            children: sending ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner-small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 9\n  }, this);\n}\n_s(Messages, \"L4MADAgP59J7j4hXI/c1ccrjcWM=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","axios","useAuth","FaArrowLeft","FaPaperPlane","FaSearch","FaUserPlus","FaEllipsisV","FaTrash","FaCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","Messages","_s","_currentConversation$","conversationId","navigate","token","user","conversations","setConversations","currentConversation","setCurrentConversation","messages","setMessages","newMessage","setNewMessage","loading","setLoading","sending","setSending","showSearch","setShowSearch","searchQuery","setSearchQuery","searchResults","setSearchResults","searchLoading","setSearchLoading","messagesEndRef","messageInputRef","fetchConversations","fetchConversationDetails","fetchMessages","scrollToBottom","interval","setInterval","clearInterval","_messagesEndRef$curre","current","scrollIntoView","behavior","response","get","headers","Authorization","data","error","console","silent","put","sendMessage","e","preventDefault","trim","post","content","prev","setTimeout","_messageInputRef$curr","focus","alert","searchUsers","query","length","encodeURIComponent","startConversation","otherUserId","deleteMessage","messageId","window","confirm","delete","filter","msg","id","formatMessageTime","dateString","date","Date","now","diffInHours","Math","abs","toLocaleTimeString","hour","minute","toLocaleDateString","day","month","handleSearchInput","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","type","placeholder","onChange","map","_user$name","profile_picture","src","alt","name","charAt","toUpperCase","username","conv","_conv$other_user_name","conversation_id","toString","other_user_picture","other_user_name","unread_count","last_message_time","last_message","other_user_username","message","_message$sender_name","sender_id","sender_picture","sender_name","created_at","ref","onSubmit","maxLength","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/msa/frontend/src/pages/Messages.jsx"],"sourcesContent":["// Copier le contenu du composant Messages.jsx précédemment créé\r\n// Ce fichier va dans src/pages/Messages.jsx\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport {\r\n    FaArrowLeft,\r\n    FaPaperPlane,\r\n    FaSearch,\r\n    FaUserPlus,\r\n    FaEllipsisV,\r\n    FaTrash,\r\n    FaCircle\r\n} from 'react-icons/fa';\r\nimport './Messages.css';\r\n\r\nfunction Messages() {\r\n    const { conversationId } = useParams();\r\n    const navigate = useNavigate();\r\n    const { token, user } = useAuth();\r\n\r\n    // États principaux\r\n    const [conversations, setConversations] = useState([]);\r\n    const [currentConversation, setCurrentConversation] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [sending, setSending] = useState(false);\r\n\r\n    // États pour la recherche et création de conversations\r\n    const [showSearch, setShowSearch] = useState(false);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [searchLoading, setSearchLoading] = useState(false);\r\n\r\n    // Refs\r\n    const messagesEndRef = useRef(null);\r\n    const messageInputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!token || !user) {\r\n            navigate('/connexion');\r\n            return;\r\n        }\r\n\r\n        fetchConversations();\r\n\r\n        if (conversationId) {\r\n            fetchConversationDetails();\r\n            fetchMessages();\r\n        }\r\n    }, [conversationId, token, user, navigate]);\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    // Auto-refresh messages toutes les 3 secondes si dans une conversation\r\n    useEffect(() => {\r\n        if (!conversationId) return;\r\n\r\n        const interval = setInterval(() => {\r\n            fetchMessages(true); // true = silent refresh\r\n        }, 3000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [conversationId]);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    const fetchConversations = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/messages/conversations', {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            setConversations(response.data);\r\n        } catch (error) {\r\n            console.error('Erreur lors du chargement des conversations:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchConversationDetails = async () => {\r\n        try {\r\n            if (!conversationId) return;\r\n\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/messages/conversation/${conversationId}`,\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }\r\n            );\r\n            setCurrentConversation(response.data);\r\n        } catch (error) {\r\n            console.error('Erreur lors du chargement des détails:', error);\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async (silent = false) => {\r\n        if (!conversationId) return;\r\n\r\n        try {\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/messages/conversation/${conversationId}/messages`,\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }\r\n            );\r\n            setMessages(response.data);\r\n\r\n            // Marquer comme lu\r\n            await axios.put(\r\n                `http://localhost:5000/api/messages/conversation/${conversationId}/read`,\r\n                {},\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }\r\n            );\r\n\r\n            if (!silent) {\r\n                fetchConversations(); // Refresh conversation list to update unread counts\r\n            }\r\n        } catch (error) {\r\n            console.error('Erreur lors du chargement des messages:', error);\r\n        }\r\n    };\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!newMessage.trim() || sending) return;\r\n\r\n        setSending(true);\r\n        try {\r\n            const response = await axios.post(\r\n                `http://localhost:5000/api/messages/conversation/${conversationId}/send`,\r\n                { content: newMessage.trim() },\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }\r\n            );\r\n\r\n            setMessages(prev => [...prev, response.data]);\r\n            setNewMessage('');\r\n            fetchConversations(); // Update conversation list\r\n\r\n            // Focus back to input\r\n            setTimeout(() => {\r\n                messageInputRef.current?.focus();\r\n            }, 100);\r\n\r\n        } catch (error) {\r\n            console.error('Erreur lors de l\\'envoi:', error);\r\n            alert('Erreur lors de l\\'envoi du message');\r\n        } finally {\r\n            setSending(false);\r\n        }\r\n    };\r\n\r\n    const searchUsers = async (query) => {\r\n        if (!query || query.length < 2) {\r\n            setSearchResults([]);\r\n            return;\r\n        }\r\n\r\n        setSearchLoading(true);\r\n        try {\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/messages/search-users?q=${encodeURIComponent(query)}`,\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }\r\n            );\r\n            setSearchResults(response.data);\r\n        } catch (error) {\r\n            console.error('Erreur lors de la recherche:', error);\r\n            setSearchResults([]);\r\n        } finally {\r\n            setSearchLoading(false);\r\n        }\r\n    };\r\n\r\n    const startConversation = async (otherUserId) => {\r\n        try {\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/messages/conversation/with/${otherUserId}`,\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }\r\n            );\r\n\r\n            setShowSearch(false);\r\n            setSearchQuery('');\r\n            setSearchResults([]);\r\n            navigate(`/messages/${response.data.conversationId}`);\r\n            fetchConversations();\r\n        } catch (error) {\r\n            console.error('Erreur lors de la création de conversation:', error);\r\n            alert('Erreur lors de la création de la conversation');\r\n        }\r\n    };\r\n\r\n    const deleteMessage = async (messageId) => {\r\n        if (!window.confirm('Êtes-vous sûr de vouloir supprimer ce message ?')) return;\r\n\r\n        try {\r\n            await axios.delete(`http://localhost:5000/api/messages/message/${messageId}`, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n\r\n            setMessages(prev => prev.filter(msg => msg.id !== messageId));\r\n        } catch (error) {\r\n            console.error('Erreur lors de la suppression:', error);\r\n            alert('Erreur lors de la suppression du message');\r\n        }\r\n    };\r\n\r\n    const formatMessageTime = (dateString) => {\r\n        const date = new Date(dateString);\r\n        const now = new Date();\r\n        const diffInHours = Math.abs(now - date) / 36e5;\r\n\r\n        if (diffInHours < 24) {\r\n            return date.toLocaleTimeString('fr-FR', {\r\n                hour: '2-digit',\r\n                minute: '2-digit'\r\n            });\r\n        } else {\r\n            return date.toLocaleDateString('fr-FR', {\r\n                day: '2-digit',\r\n                month: '2-digit'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSearchInput = (e) => {\r\n        const query = e.target.value;\r\n        setSearchQuery(query);\r\n        searchUsers(query);\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"messages-page loading\">\r\n                <div className=\"loading-spinner\">\r\n                    <div className=\"spinner\"></div>\r\n                    <p>Chargement des messages...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"messages-page\">\r\n            {/* Sidebar avec liste des conversations */}\r\n            <div className=\"conversations-sidebar\">\r\n                <div className=\"sidebar-header\">\r\n                    <h2>Messages</h2>\r\n                    <button\r\n                        className=\"new-message-btn\"\r\n                        onClick={() => setShowSearch(!showSearch)}\r\n                        title=\"Nouvelle conversation\"\r\n                    >\r\n                        <FaUserPlus />\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Zone de recherche pour nouvelle conversation */}\r\n                {showSearch && (\r\n                    <div className=\"search-section\">\r\n                        <div className=\"search-input-container\">\r\n                            <FaSearch className=\"search-icon\" />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Rechercher un utilisateur...\"\r\n                                value={searchQuery}\r\n                                onChange={handleSearchInput}\r\n                                className=\"search-input\"\r\n                            />\r\n                        </div>\r\n\r\n                        {searchLoading && (\r\n                            <div className=\"search-loading\">\r\n                                <div className=\"spinner-small\"></div>\r\n                                <span>Recherche...</span>\r\n                            </div>\r\n                        )}\r\n\r\n                        {searchResults.length > 0 && (\r\n                            <div className=\"search-results\">\r\n                                {searchResults.map(user => (\r\n                                    <div\r\n                                        key={user.id}\r\n                                        className=\"search-result-item\"\r\n                                        onClick={() => startConversation(user.id)}\r\n                                    >\r\n                                        <div className=\"user-avatar\">\r\n                                            {user.profile_picture ? (\r\n                                                <img\r\n                                                    src={`http://localhost:5000/uploads/${user.profile_picture}`}\r\n                                                    alt={user.name}\r\n                                                />\r\n                                            ) : (\r\n                                                <span>{user.name?.charAt(0).toUpperCase()}</span>\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"user-info\">\r\n                                            <h4>{user.name}</h4>\r\n                                            <p>@{user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n\r\n                        {searchQuery.length >= 2 && !searchLoading && searchResults.length === 0 && (\r\n                            <div className=\"no-search-results\">\r\n                                <p>Aucun utilisateur trouvé</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Liste des conversations */}\r\n                <div className=\"conversations-list\">\r\n                    {conversations.length === 0 ? (\r\n                        <div className=\"no-conversations\">\r\n                            <p>Aucune conversation</p>\r\n                            <span>Recherchez un utilisateur pour commencer à discuter</span>\r\n                        </div>\r\n                    ) : (\r\n                        conversations.map(conv => (\r\n                            <div\r\n                                key={conv.conversation_id}\r\n                                className={`conversation-item ${conversationId === conv.conversation_id.toString() ? 'active' : ''}`}\r\n                                onClick={() => navigate(`/messages/${conv.conversation_id}`)}\r\n                            >\r\n                                <div className=\"conversation-avatar\">\r\n                                    {conv.other_user_picture ? (\r\n                                        <img\r\n                                            src={`http://localhost:5000/uploads/${conv.other_user_picture}`}\r\n                                            alt={conv.other_user_name}\r\n                                        />\r\n                                    ) : (\r\n                                        <span>{conv.other_user_name?.charAt(0).toUpperCase()}</span>\r\n                                    )}\r\n                                    {conv.unread_count > 0 && (\r\n                                        <div className=\"unread-indicator\">\r\n                                            <FaCircle />\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"conversation-content\">\r\n                                    <div className=\"conversation-header\">\r\n                                        <h4>{conv.other_user_name}</h4>\r\n                                        <span className=\"time\">\r\n                                            {formatMessageTime(conv.last_message_time)}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"conversation-preview\">\r\n                                        <p className={conv.unread_count > 0 ? 'unread' : ''}>\r\n                                            {conv.last_message || 'Aucun message'}\r\n                                        </p>\r\n                                        {conv.unread_count > 0 && (\r\n                                            <span className=\"unread-count\">{conv.unread_count}</span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Zone principale des messages */}\r\n            <div className=\"messages-main\">\r\n                {!conversationId ? (\r\n                    <div className=\"no-conversation-selected\">\r\n                        <div className=\"welcome-message\">\r\n                            <h3>Sélectionnez une conversation</h3>\r\n                            <p>Choisissez une conversation dans la liste ou créez-en une nouvelle</p>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        {/* Header de la conversation */}\r\n                        <div className=\"conversation-header\">\r\n                            <button\r\n                                className=\"back-btn\"\r\n                                onClick={() => navigate('/messages')}\r\n                            >\r\n                                <FaArrowLeft />\r\n                            </button>\r\n\r\n                            {currentConversation && (\r\n                                <div className=\"conversation-info\">\r\n                                    <div className=\"user-avatar\">\r\n                                        {currentConversation.other_user_picture ? (\r\n                                            <img\r\n                                                src={`http://localhost:5000/uploads/${currentConversation.other_user_picture}`}\r\n                                                alt={currentConversation.other_user_name}\r\n                                            />\r\n                                        ) : (\r\n                                            <span>{currentConversation.other_user_name?.charAt(0).toUpperCase()}</span>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"user-details\">\r\n                                        <h3>{currentConversation.other_user_name}</h3>\r\n                                        <p>@{currentConversation.other_user_username}</p>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            <button className=\"options-btn\">\r\n                                <FaEllipsisV />\r\n                            </button>\r\n                        </div>\r\n\r\n                        {/* Zone des messages */}\r\n                        <div className=\"messages-container\">\r\n                            {messages.length === 0 ? (\r\n                                <div className=\"no-messages\">\r\n                                    <p>Aucun message dans cette conversation</p>\r\n                                    <span>Envoyez votre premier message !</span>\r\n                                </div>\r\n                            ) : (\r\n                                messages.map(message => (\r\n                                    <div\r\n                                        key={message.id}\r\n                                        className={`message ${message.sender_id === user.id ? 'own' : 'other'}`}\r\n                                    >\r\n                                        {message.sender_id !== user.id && (\r\n                                            <div className=\"message-avatar\">\r\n                                                {message.sender_picture ? (\r\n                                                    <img\r\n                                                        src={`http://localhost:5000/uploads/${message.sender_picture}`}\r\n                                                        alt={message.sender_name}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <span>{message.sender_name?.charAt(0).toUpperCase()}</span>\r\n                                                )}\r\n                                            </div>\r\n                                        )}\r\n\r\n                                        <div className=\"message-content\">\r\n                                            <div className=\"message-bubble\">\r\n                                                <p>{message.content}</p>\r\n                                                {message.sender_id === user.id && (\r\n                                                    <button\r\n                                                        className=\"delete-message-btn\"\r\n                                                        onClick={() => deleteMessage(message.id)}\r\n                                                        title=\"Supprimer le message\"\r\n                                                    >\r\n                                                        <FaTrash />\r\n                                                    </button>\r\n                                                )}\r\n                                            </div>\r\n                                            <span className=\"message-time\">\r\n                                                {formatMessageTime(message.created_at)}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            )}\r\n                            <div ref={messagesEndRef} />\r\n                        </div>\r\n\r\n                        {/* Zone d'envoi de message */}\r\n                        <form className=\"message-input-container\" onSubmit={sendMessage}>\r\n                            <input\r\n                                ref={messageInputRef}\r\n                                type=\"text\"\r\n                                value={newMessage}\r\n                                onChange={(e) => setNewMessage(e.target.value)}\r\n                                placeholder=\"Tapez votre message...\"\r\n                                className=\"message-input\"\r\n                                maxLength={1000}\r\n                                disabled={sending}\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"send-btn\"\r\n                                disabled={!newMessage.trim() || sending}\r\n                            >\r\n                                {sending ? (\r\n                                    <div className=\"spinner-small\"></div>\r\n                                ) : (\r\n                                    <FaPaperPlane />\r\n                                )}\r\n                            </button>\r\n                        </form>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}