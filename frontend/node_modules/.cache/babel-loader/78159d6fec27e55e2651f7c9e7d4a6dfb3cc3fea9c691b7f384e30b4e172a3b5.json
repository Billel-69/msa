{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\msa\\\\frontend\\\\src\\\\components\\\\games\\\\FlashCards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaArrowLeft, FaRedo, FaStar, FaTrophy, FaCog, FaPlay, FaBolt, FaFire, FaCrown } from 'react-icons/fa';\nimport axiosInstance from '../../utils/axiosInstance';\nimport { useAuth } from '../../context/AuthContext';\nimport './FlashCards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlashCards = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user,\n    token\n  } = useAuth();\n  // État du jeu\n  const [gameState, setGameState] = useState('configuration'); // 'configuration', 'chargement', 'en_jeu', 'termine'\n  const [errorMessage, setErrorMessage] = useState(''); // Pour afficher les erreurs\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [score, setScore] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [wrongAnswers, setWrongAnswers] = useState(0);\n  const [cards, setCards] = useState([]);\n  const [sessionId, setSessionId] = useState(null);\n  // const [gameId, setGameId] = useState(null); // Kept for future use\n  const [startTime, setStartTime] = useState(null);\n  const [cardStartTime, setCardStartTime] = useState(null);\n  const [streak, setStreak] = useState(0);\n  const [bestStreak, setBestStreak] = useState(0);\n  const [showCelebration, setShowCelebration] = useState(false);\n\n  // Paramètres du jeu\n  const [gameSettings, setGameSettings] = useState({\n    subject: 'mathematics',\n    difficulty: 'moyen',\n    cycle: 'cycle_4',\n    theme: 'default',\n    quantity: 8\n  });\n\n  // Matières disponibles et leurs libellés (clés en anglais pour la logique interne)\n  const subjects = {\n    mathematics: {\n      label: 'Mathématiques',\n      icon: '🔢'\n    },\n    french: {\n      label: 'Français',\n      icon: '📚'\n    },\n    history: {\n      label: 'Histoire',\n      icon: '🏛️'\n    },\n    sciences: {\n      label: 'Sciences',\n      icon: '🔬'\n    },\n    geography: {\n      label: 'Géographie',\n      icon: '🌍'\n    },\n    english: {\n      label: 'Anglais',\n      icon: '🇬🇧'\n    }\n  };\n  const difficulties = {\n    facile: {\n      label: 'Facile',\n      color: '#4CAF50'\n    },\n    moyen: {\n      label: 'Moyen',\n      color: '#FF9800'\n    },\n    difficile: {\n      label: 'Difficile',\n      color: '#F44336'\n    }\n  };\n  // Gère le début du minuteur pour chaque carte\n  useEffect(() => {\n    if (gameState === 'en_jeu' && currentCardIndex < cards.length) {\n      setCardStartTime(Date.now());\n    }\n  }, [currentCardIndex, gameState, cards.length]);\n\n  // Démarre une nouvelle partie\n  const startGame = async () => {\n    try {\n      console.log('Démarrage du jeu de Flash Cards...', {\n        user: user === null || user === void 0 ? void 0 : user.username,\n        hasToken: !!token\n      });\n      setGameState('chargement');\n      setErrorMessage(''); // Réinitialiser les erreurs\n      setStartTime(Date.now());\n      const response = await axiosInstance.post('/games/flash-cards/start', gameSettings);\n      console.log('Réponse du démarrage du jeu:', response.data);\n      if (response.data.success) {\n        setCards(response.data.cards);\n        setSessionId(response.data.sessionId);\n        // setGameId(response.data.gameId); // Conservé pour une utilisation future\n        setGameState('en_jeu');\n        setCardStartTime(Date.now());\n      } else {\n        throw new Error('Échec du démarrage de la partie');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Erreur lors du démarrage du jeu:', error);\n      const errorMsg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erreur lors du démarrage du jeu. Vérifiez que vous êtes bien connecté et réessayez.';\n      setErrorMessage(errorMsg);\n      setGameState('configuration');\n    }\n  };\n\n  // Soumet la réponse de l'utilisateur pour la carte actuelle\n  const submitAnswer = async isCorrect => {\n    try {\n      const responseTime = Date.now() - cardStartTime;\n      const currentCard = cards[currentCardIndex];\n      // Soumission de la réponse au backend\n      await axiosInstance.post('/games/flash-cards/answer', {\n        sessionId: sessionId,\n        cardId: currentCard.id,\n        questionId: currentCard.id,\n        isCorrect: isCorrect,\n        responseTime: responseTime,\n        difficulty: currentCard.difficulty\n      });\n\n      // Update local state with enhanced feedback\n      if (isCorrect) {\n        setCorrectAnswers(prev => prev + 1);\n        setScore(prev => prev + getDifficultyPoints(currentCard.difficulty, responseTime));\n        setStreak(prev => {\n          const newStreak = prev + 1;\n          if (newStreak > bestStreak) {\n            setBestStreak(newStreak);\n            if (newStreak >= 5) {\n              setShowCelebration(true);\n              setTimeout(() => setShowCelebration(false), 2000);\n            }\n          }\n          return newStreak;\n        });\n      } else {\n        setWrongAnswers(prev => prev + 1);\n        setStreak(0);\n      }\n\n      // Move to next card after a short delay\n      setTimeout(() => {\n        if (currentCardIndex < cards.length - 1) {\n          setCurrentCardIndex(prev => prev + 1);\n          setIsFlipped(false);\n        } else {\n          completeGame();\n        }\n      }, 1500);\n    } catch (error) {\n      console.error('Erreur lors de la soumission de la réponse:', error);\n    }\n  };\n\n  // Finalise la partie et envoie les résultats\n  const completeGame = async () => {\n    try {\n      const totalTime = Date.now() - startTime;\n      const averageResponseTime = totalTime / cards.length;\n      const response = await axiosInstance.post('/games/flash-cards/complete', {\n        sessionId: sessionId,\n        totalScore: score,\n        correctAnswers: correctAnswers,\n        wrongAnswers: wrongAnswers,\n        totalTime: totalTime,\n        averageResponseTime: averageResponseTime,\n        difficulty: gameSettings.difficulty\n      });\n      if (response.data.success) {\n        setGameState('termine');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la finalisation du jeu:', error);\n      setGameState('termine'); // Affiche les résultats même en cas d'erreur\n    }\n  };\n\n  // Gère la réponse de l'utilisateur (correcte ou incorrecte)\n  const handleAnswer = isCorrect => {\n    submitAnswer(isCorrect);\n  };\n\n  // Gère le retournement de la carte\n  const handleCardFlip = () => {\n    setIsFlipped(!isFlipped);\n  };\n  const handleCardKeyDown = event => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault(); // Empêche le comportement par défaut (ex: scroll)\n      handleCardFlip();\n    }\n  };\n  const getDifficultyPoints = (difficulty, responseTime = 5000) => {\n    const basePoints = {\n      facile: 10,\n      moyen: 20,\n      difficile: 30\n    };\n    const timeBonus = Math.max(0, 10 - Math.floor(responseTime / 1000));\n    return (basePoints[difficulty] || 10) + timeBonus;\n  };\n  const getSuccessRate = () => {\n    const total = correctAnswers + wrongAnswers;\n    return total > 0 ? Math.round(correctAnswers / total * 100) : 0;\n  };\n\n  // Redémarre le jeu\n  const restartGame = () => {\n    setCurrentCardIndex(0);\n    setIsFlipped(false);\n    setScore(0);\n    setCorrectAnswers(0);\n    setWrongAnswers(0);\n    setStreak(0);\n    setShowCelebration(false);\n    setGameState('configuration');\n    setCards([]);\n    setSessionId(null);\n  };\n\n  // Retourne un message de performance basé sur le taux de réussite\n  const getPerformanceMessage = () => {\n    const rate = getSuccessRate();\n    if (rate >= 95) return \"Parfait ! Tu es un vrai champion ! 🏆\";\n    if (rate >= 85) return \"Excellent travail ! Continue comme ça ! 🌟\";\n    if (rate >= 75) return \"Très bien ! Tu progresses ! 👏\";\n    if (rate >= 60) return \"Pas mal ! Il y a de l'amélioration ! 💪\";\n    return \"Continue à t'entraîner, tu vas y arriver ! 📚\";\n  };\n\n  // Retourne le niveau de performance basé sur le taux de réussite\n  const getPerformanceLevel = () => {\n    const rate = getSuccessRate();\n    if (rate >= 95) return '👑 Maître';\n    if (rate >= 85) return '🌟 Expert';\n    if (rate >= 75) return '⭐ Avancé';\n    if (rate >= 60) return '💪 Apprenti';\n    return '📚 Débutant';\n  };\n\n  // Écran de configuration du jeu\n  if (gameState === 'configuration') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flash-cards-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flash-cards-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => navigate(-1),\n          children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), \" Retour\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(FaBolt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), \" Flash Cards Magiques\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-display\",\n            children: [/*#__PURE__*/_jsxDEV(FaStar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), score, \" points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), streak > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `streak-display ${streak >= 3 ? 'fire' : ''}`,\n            children: [streak >= 3 ? /*#__PURE__*/_jsxDEV(FaFire, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(FaBolt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 61\n            }, this), streak, \" en s\\xE9rie!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FaCog, {\n            className: \"settings-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-setup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setup-card\",\n          children: [\"                        \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83C\\uDFAF Pr\\xEAt pour le D\\xE9fi Magique?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Configure ta session de Flash Cards et teste tes connaissances! \\u2728\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message-box\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\uD83D\\uDCDA Mati\\xE8re\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: gameSettings.subject,\n                onChange: e => setGameSettings(prev => ({\n                  ...prev,\n                  subject: e.target.value\n                })),\n                children: Object.entries(subjects).map(([key, subj]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: key,\n                  children: [subj.icon, \" \", subj.label]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\uD83C\\uDFAF Difficult\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: gameSettings.difficulty,\n                onChange: e => setGameSettings(prev => ({\n                  ...prev,\n                  difficulty: e.target.value\n                })),\n                children: Object.entries(difficulties).map(([key, diff]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: key,\n                  children: diff.label\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\uD83C\\uDFB2 Nombre de cartes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: gameSettings.quantity,\n                onChange: e => setGameSettings(prev => ({\n                  ...prev,\n                  quantity: parseInt(e.target.value)\n                })),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 5,\n                  children: \"5 cartes (Rapide)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 8,\n                  children: \"8 cartes (Normal)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 10,\n                  children: \"10 cartes (Complet)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 15,\n                  children: \"15 cartes (Expert)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"difficulty-preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"difficulty-indicator\",\n              style: {\n                backgroundColor: difficulties[gameSettings.difficulty].color\n              },\n              children: difficulties[gameSettings.difficulty].label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Sujet: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: subjects[gameSettings.subject].label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 40\n              }, this), \" \\u2022 Cartes: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: gameSettings.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), \"                        \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-game-button\",\n            onClick: startGame,\n            \"aria-label\": \"Lancer la session de Flash Cards\",\n            children: [/*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this), \"Lancer la Session Magique!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Écran de chargement\n  if (gameState === 'chargement') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flash-cards-container loading-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pr\\xE9paration des cartes...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Un peu de patience, l'aventure commence bient\\xF4t !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Écran de jeu principal\n  if (gameState === 'en_jeu' && cards.length > 0) {\n    var _difficulties$current, _difficulties$current2;\n    const currentCard = cards[currentCardIndex];\n    const progressPercentage = (currentCardIndex + 1) / cards.length * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flash-cards-container\",\n      children: [showCelebration && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"celebration-overlay\",\n        children: [\"                    \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"celebration-content\",\n          children: [/*#__PURE__*/_jsxDEV(FaCrown, {\n            className: \"celebration-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Incroyable !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"S\\xE9rie de \", bestStreak, \" bonnes r\\xE9ponses ! \\uD83D\\uDD25\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"celebration-sparkles\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2728\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83C\\uDF1F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2B50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2728\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83C\\uDF1F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 78\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }, this), \"                \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flash-cards-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => navigate(-1),\n          children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), \" Retour\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(FaBolt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this), \" Flash Cards Magiques\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-display\",\n            children: [/*#__PURE__*/_jsxDEV(FaStar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 29\n            }, this), score, \" points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this), streak > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `streak-display ${streak >= 3 ? 'fire' : ''}`,\n            children: [streak >= 3 ? /*#__PURE__*/_jsxDEV(FaFire, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(FaBolt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 61\n            }, this), \"S\\xE9rie de \", streak]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 29\n          }, this), bestStreak > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"best-streak-display\",\n            children: [/*#__PURE__*/_jsxDEV(FaCrown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 33\n            }, this), \"Meilleur: \", bestStreak]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 35\n      }, this), \"                \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${progressPercentage}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-text\",\n          children: [currentCardIndex + 1, \" / \", cards.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Bonnes r\\xE9ponses:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value correct\",\n            children: correctAnswers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Erreurs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value incorrect\",\n            children: wrongAnswers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flash-card ${isFlipped ? 'flipped' : ''}`,\n          onClick: handleCardFlip,\n          onKeyDown: handleCardKeyDown,\n          role: \"button\",\n          tabIndex: \"0\",\n          \"aria-label\": \"Cliquez ou appuyez sur Entr\\xE9e pour retourner la carte\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-front\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-category\",\n              children: currentCard.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: currentCard.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `difficulty-badge ${currentCard.difficulty}`,\n              children: ((_difficulties$current = difficulties[currentCard.difficulty]) === null || _difficulties$current === void 0 ? void 0 : _difficulties$current.label) || currentCard.difficulty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flip-hint\",\n              children: \"Clique pour voir la r\\xE9ponse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-back\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-category\",\n              children: currentCard.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"R\\xE9ponse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"answer\",\n                children: currentCard.answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 33\n              }, this), currentCard.explanation && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"explanation\",\n                children: currentCard.explanation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `difficulty-badge ${currentCard.difficulty}`,\n              children: ((_difficulties$current2 = difficulties[currentCard.difficulty]) === null || _difficulties$current2 === void 0 ? void 0 : _difficulties$current2.label) || currentCard.difficulty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this), isFlipped && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"answer-button wrong\",\n          onClick: () => handleAnswer(false),\n          \"aria-label\": \"Marquer la r\\xE9ponse comme fausse\",\n          children: \"\\u274C Faux\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"answer-button correct\",\n          onClick: () => handleAnswer(true),\n          \"aria-label\": \"Marquer la r\\xE9ponse comme correcte\",\n          children: \"\\u2705 Correct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Écran de fin de partie\n  if (gameState === 'termine') {\n    const successRate = getSuccessRate();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flash-cards-container\",\n      children: [\"                \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flash-cards-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => navigate(-1),\n          \"aria-label\": \"Retourner aux mini-jeux\",\n          children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 25\n          }, this), \" Retour\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Flash Cards Magiques - R\\xE9sultats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 68\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-card\",\n          children: [/*#__PURE__*/_jsxDEV(FaTrophy, {\n            className: \"trophy-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Partie termin\\xE9e !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 25\n          }, this), \"                        \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item premium\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Score Final:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value gold\",\n                children: [score, \" points\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Bonnes r\\xE9ponses:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value correct\",\n                children: correctAnswers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Mauvaises r\\xE9ponses:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value incorrect\",\n                children: wrongAnswers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Taux de r\\xE9ussite:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [getSuccessRate(), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item premium\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Meilleure s\\xE9rie:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value streak\",\n                children: [bestStreak, \" \\uD83D\\uDD25\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Niveau atteint:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value level\",\n                children: getPerformanceLevel()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 75\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"performance-message\",\n            children: getPerformanceMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button restart\",\n              onClick: restartGame,\n              children: [/*#__PURE__*/_jsxDEV(FaRedo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 33\n              }, this), \" Rejouer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button back-home\",\n              onClick: () => navigate('/mini-jeux'),\n              children: [/*#__PURE__*/_jsxDEV(FaTrophy, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 33\n              }, this), \" Voir d'autres jeux\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Fallback pour état de jeu inconnu\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flash-cards-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\xC9tat de jeu inconnu. Veuillez rafra\\xEEchir la page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restartGame,\n      children: \"R\\xE9initialiser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 528,\n    columnNumber: 9\n  }, this);\n};\n_s(FlashCards, \"GDL0bzVQchlnufWy4tn/nik6fpU=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = FlashCards;\nexport default FlashCards;\nvar _c;\n$RefreshReg$(_c, \"FlashCards\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","FaArrowLeft","FaRedo","FaStar","FaTrophy","FaCog","FaPlay","FaBolt","FaFire","FaCrown","axiosInstance","useAuth","jsxDEV","_jsxDEV","FlashCards","_s","navigate","user","token","gameState","setGameState","errorMessage","setErrorMessage","currentCardIndex","setCurrentCardIndex","isFlipped","setIsFlipped","score","setScore","correctAnswers","setCorrectAnswers","wrongAnswers","setWrongAnswers","cards","setCards","sessionId","setSessionId","startTime","setStartTime","cardStartTime","setCardStartTime","streak","setStreak","bestStreak","setBestStreak","showCelebration","setShowCelebration","gameSettings","setGameSettings","subject","difficulty","cycle","theme","quantity","subjects","mathematics","label","icon","french","history","sciences","geography","english","difficulties","facile","color","moyen","difficile","length","Date","now","startGame","console","log","username","hasToken","response","post","data","success","Error","error","_error$response","_error$response$data","errorMsg","message","submitAnswer","isCorrect","responseTime","currentCard","cardId","id","questionId","prev","getDifficultyPoints","newStreak","setTimeout","completeGame","totalTime","averageResponseTime","totalScore","handleAnswer","handleCardFlip","handleCardKeyDown","event","key","preventDefault","basePoints","timeBonus","Math","max","floor","getSuccessRate","total","round","restartGame","getPerformanceMessage","rate","getPerformanceLevel","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","Object","entries","map","subj","diff","parseInt","style","backgroundColor","_difficulties$current","_difficulties$current2","progressPercentage","width","onKeyDown","role","tabIndex","category","question","answer","explanation","successRate","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/msa/frontend/src/components/games/FlashCards.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FaArrowLeft, FaRedo, FaStar, FaTrophy, FaCog, FaPlay, FaBolt, FaFire, FaCrown } from 'react-icons/fa';\r\nimport axiosInstance from '../../utils/axiosInstance';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport './FlashCards.css';\r\n\r\nconst FlashCards = () => {\r\n    const navigate = useNavigate();\r\n    const { user, token } = useAuth();\r\n    // État du jeu\r\n    const [gameState, setGameState] = useState('configuration'); // 'configuration', 'chargement', 'en_jeu', 'termine'\r\n    const [errorMessage, setErrorMessage] = useState(''); // Pour afficher les erreurs\r\n    const [currentCardIndex, setCurrentCardIndex] = useState(0);\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n    const [score, setScore] = useState(0);\r\n    const [correctAnswers, setCorrectAnswers] = useState(0);\r\n    const [wrongAnswers, setWrongAnswers] = useState(0);\r\n    const [cards, setCards] = useState([]);    const [sessionId, setSessionId] = useState(null);\r\n    // const [gameId, setGameId] = useState(null); // Kept for future use\r\n    const [startTime, setStartTime] = useState(null);\r\n    const [cardStartTime, setCardStartTime] = useState(null);\r\n    const [streak, setStreak] = useState(0);\r\n    const [bestStreak, setBestStreak] = useState(0);\r\n    const [showCelebration, setShowCelebration] = useState(false);\r\n\r\n    // Paramètres du jeu\r\n    const [gameSettings, setGameSettings] = useState({\r\n        subject: 'mathematics',\r\n        difficulty: 'moyen',\r\n        cycle: 'cycle_4',\r\n        theme: 'default',\r\n        quantity: 8\r\n    });\r\n\r\n    // Matières disponibles et leurs libellés (clés en anglais pour la logique interne)\r\n    const subjects = {\r\n        mathematics: { label: 'Mathématiques', icon: '🔢' },\r\n        french: { label: 'Français', icon: '📚' },\r\n        history: { label: 'Histoire', icon: '🏛️' },\r\n        sciences: { label: 'Sciences', icon: '🔬' },\r\n        geography: { label: 'Géographie', icon: '🌍' },\r\n        english: { label: 'Anglais', icon: '🇬🇧' }\r\n    };\r\n\r\n    const difficulties = {\r\n        facile: { label: 'Facile', color: '#4CAF50' },\r\n        moyen: { label: 'Moyen', color: '#FF9800' },\r\n        difficile: { label: 'Difficile', color: '#F44336' }\r\n    };\r\n    // Gère le début du minuteur pour chaque carte\r\n    useEffect(() => {\r\n        if (gameState === 'en_jeu' && currentCardIndex < cards.length) {\r\n            setCardStartTime(Date.now());\r\n        }\r\n    }, [currentCardIndex, gameState, cards.length]);\r\n\r\n    // Démarre une nouvelle partie\r\n    const startGame = async () => {\r\n        try {\r\n            console.log('Démarrage du jeu de Flash Cards...', { user: user?.username, hasToken: !!token });\r\n            setGameState('chargement');\r\n            setErrorMessage(''); // Réinitialiser les erreurs\r\n            setStartTime(Date.now());\r\n\r\n            const response = await axiosInstance.post('/games/flash-cards/start', gameSettings);\r\n\r\n            console.log('Réponse du démarrage du jeu:', response.data);\r\n            if (response.data.success) {\r\n                setCards(response.data.cards);\r\n                setSessionId(response.data.sessionId);\r\n                // setGameId(response.data.gameId); // Conservé pour une utilisation future\r\n                setGameState('en_jeu');\r\n                setCardStartTime(Date.now());\r\n            } else {\r\n                throw new Error('Échec du démarrage de la partie');\r\n            }\r\n        } catch (error) {\r\n            console.error('Erreur lors du démarrage du jeu:', error);\r\n            const errorMsg = error.response?.data?.message || 'Erreur lors du démarrage du jeu. Vérifiez que vous êtes bien connecté et réessayez.';\r\n            setErrorMessage(errorMsg);\r\n            setGameState('configuration');\r\n        }\r\n    };\r\n\r\n    // Soumet la réponse de l'utilisateur pour la carte actuelle\r\n    const submitAnswer = async (isCorrect) => {\r\n        try {\r\n            const responseTime = Date.now() - cardStartTime;\r\n            const currentCard = cards[currentCardIndex];\r\n            // Soumission de la réponse au backend\r\n            await axiosInstance.post('/games/flash-cards/answer', {\r\n                sessionId: sessionId,\r\n                cardId: currentCard.id,\r\n                questionId: currentCard.id,\r\n                isCorrect: isCorrect,\r\n                responseTime: responseTime,\r\n                difficulty: currentCard.difficulty\r\n            });\r\n\r\n            // Update local state with enhanced feedback\r\n            if (isCorrect) {\r\n                setCorrectAnswers(prev => prev + 1);\r\n                setScore(prev => prev + getDifficultyPoints(currentCard.difficulty, responseTime));\r\n                setStreak(prev => {\r\n                    const newStreak = prev + 1;\r\n                    if (newStreak > bestStreak) {\r\n                        setBestStreak(newStreak);\r\n                        if (newStreak >= 5) {\r\n                            setShowCelebration(true);\r\n                            setTimeout(() => setShowCelebration(false), 2000);\r\n                        }\r\n                    }\r\n                    return newStreak;\r\n                });\r\n            } else {\r\n                setWrongAnswers(prev => prev + 1);\r\n                setStreak(0);\r\n            }\r\n\r\n            // Move to next card after a short delay\r\n            setTimeout(() => {\r\n                if (currentCardIndex < cards.length - 1) {\r\n                    setCurrentCardIndex(prev => prev + 1);\r\n                    setIsFlipped(false);\r\n                } else {\r\n                    completeGame();\r\n                }\r\n            }, 1500);\r\n\r\n        } catch (error) {\r\n            console.error('Erreur lors de la soumission de la réponse:', error);\r\n        }\r\n    };\r\n\r\n    // Finalise la partie et envoie les résultats\r\n    const completeGame = async () => {\r\n        try {\r\n            const totalTime = Date.now() - startTime;\r\n            const averageResponseTime = totalTime / cards.length;            const response = await axiosInstance.post('/games/flash-cards/complete', {\r\n                sessionId: sessionId,\r\n                totalScore: score,\r\n                correctAnswers: correctAnswers,\r\n                wrongAnswers: wrongAnswers,\r\n                totalTime: totalTime,\r\n                averageResponseTime: averageResponseTime,\r\n                difficulty: gameSettings.difficulty\r\n            });\r\n\r\n            if (response.data.success) {\r\n                setGameState('termine');\r\n            }\r\n        } catch (error) {\r\n            console.error('Erreur lors de la finalisation du jeu:', error);\r\n            setGameState('termine'); // Affiche les résultats même en cas d'erreur\r\n        }\r\n    };\r\n\r\n    // Gère la réponse de l'utilisateur (correcte ou incorrecte)\r\n    const handleAnswer = (isCorrect) => {\r\n        submitAnswer(isCorrect);\r\n    };\r\n\r\n    // Gère le retournement de la carte\r\n    const handleCardFlip = () => {\r\n        setIsFlipped(!isFlipped);\r\n    };\r\n\r\n    const handleCardKeyDown = (event) => {\r\n        if (event.key === 'Enter' || event.key === ' ') {\r\n            event.preventDefault(); // Empêche le comportement par défaut (ex: scroll)\r\n            handleCardFlip();\r\n        }\r\n    };\r\n\r\n    const getDifficultyPoints = (difficulty, responseTime = 5000) => {\r\n        const basePoints = { facile: 10, moyen: 20, difficile: 30 };\r\n        const timeBonus = Math.max(0, 10 - Math.floor(responseTime / 1000));\r\n        return (basePoints[difficulty] || 10) + timeBonus;\r\n    };\r\n\r\n    const getSuccessRate = () => {\r\n        const total = correctAnswers + wrongAnswers;\r\n        return total > 0 ? Math.round((correctAnswers / total) * 100) : 0;\r\n    };\r\n\r\n    // Redémarre le jeu\r\n    const restartGame = () => {\r\n        setCurrentCardIndex(0);\r\n        setIsFlipped(false);\r\n        setScore(0);\r\n        setCorrectAnswers(0);\r\n        setWrongAnswers(0);\r\n        setStreak(0);\r\n        setShowCelebration(false);\r\n        setGameState('configuration');\r\n        setCards([]);\r\n        setSessionId(null);\r\n    };\r\n\r\n    // Retourne un message de performance basé sur le taux de réussite\r\n    const getPerformanceMessage = () => {\r\n        const rate = getSuccessRate();\r\n        if (rate >= 95) return \"Parfait ! Tu es un vrai champion ! 🏆\";\r\n        if (rate >= 85) return \"Excellent travail ! Continue comme ça ! 🌟\";\r\n        if (rate >= 75) return \"Très bien ! Tu progresses ! 👏\";\r\n        if (rate >= 60) return \"Pas mal ! Il y a de l'amélioration ! 💪\";\r\n        return \"Continue à t'entraîner, tu vas y arriver ! 📚\";\r\n    };\r\n\r\n    // Retourne le niveau de performance basé sur le taux de réussite\r\n    const getPerformanceLevel = () => {\r\n        const rate = getSuccessRate();\r\n        if (rate >= 95) return '👑 Maître';\r\n        if (rate >= 85) return '🌟 Expert';\r\n        if (rate >= 75) return '⭐ Avancé';\r\n        if (rate >= 60) return '💪 Apprenti';\r\n        return '📚 Débutant';\r\n    };\r\n\r\n    // Écran de configuration du jeu\r\n    if (gameState === 'configuration') {\r\n        return (\r\n            <div className=\"flash-cards-container\">\r\n                <div className=\"flash-cards-header\">\r\n                    <button className=\"back-button\" onClick={() => navigate(-1)}>\r\n                        <FaArrowLeft /> Retour\r\n                    </button>\r\n                    <h1><FaBolt /> Flash Cards Magiques</h1>\r\n                    <div className=\"header-right\">\r\n                        <div className=\"score-display\">\r\n                            <FaStar />\r\n                            {score} points\r\n                        </div>\r\n                        {streak > 0 && (\r\n                            <div className={`streak-display ${streak >= 3 ? 'fire' : ''}`}>\r\n                                {streak >= 3 ? <FaFire /> : <FaBolt />}\r\n                                {streak} en série!\r\n                            </div>\r\n                        )}\r\n                        <FaCog className=\"settings-icon\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"game-setup\">\r\n                    <div className=\"setup-card\">                        <h2>🎯 Prêt pour le Défi Magique?</h2>\r\n                        <p>Configure ta session de Flash Cards et teste tes connaissances! ✨</p>\r\n\r\n                        {errorMessage && (\r\n                            <div className=\"error-message-box\">\r\n                                <p>{errorMessage}</p>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"settings-grid\">\r\n                            <div className=\"setting-group\">\r\n                                <label>📚 Matière</label>\r\n                                <select \r\n                                    value={gameSettings.subject}\r\n                                    onChange={(e) => setGameSettings(prev => ({...prev, subject: e.target.value}))}\r\n                                >\r\n                                    {Object.entries(subjects).map(([key, subj]) => (\r\n                                        <option key={key} value={key}>\r\n                                            {subj.icon} {subj.label}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"setting-group\">\r\n                                <label>🎯 Difficulté</label>\r\n                                <select \r\n                                    value={gameSettings.difficulty}\r\n                                    onChange={(e) => setGameSettings(prev => ({...prev, difficulty: e.target.value}))}\r\n                                >\r\n                                    {Object.entries(difficulties).map(([key, diff]) => (\r\n                                        <option key={key} value={key}>\r\n                                            {diff.label}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"setting-group\">\r\n                                <label>🎲 Nombre de cartes</label>\r\n                                <select \r\n                                    value={gameSettings.quantity}\r\n                                    onChange={(e) => setGameSettings(prev => ({...prev, quantity: parseInt(e.target.value)}))}\r\n                                >\r\n                                    <option value={5}>5 cartes (Rapide)</option>\r\n                                    <option value={8}>8 cartes (Normal)</option>\r\n                                    <option value={10}>10 cartes (Complet)</option>\r\n                                    <option value={15}>15 cartes (Expert)</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"difficulty-preview\">\r\n                            <div \r\n                                className=\"difficulty-indicator\"\r\n                                style={{ backgroundColor: difficulties[gameSettings.difficulty].color }}\r\n                            >\r\n                                {difficulties[gameSettings.difficulty].label}\r\n                            </div>\r\n                            <p>\r\n                                Sujet: <strong>{subjects[gameSettings.subject].label}</strong> • \r\n                                Cartes: <strong>{gameSettings.quantity}</strong>\r\n                            </p>\r\n                        </div>                        <button \r\n                            className=\"start-game-button\" \r\n                            onClick={startGame}\r\n                            aria-label=\"Lancer la session de Flash Cards\"\r\n                        >\r\n                            <FaPlay />\r\n                            Lancer la Session Magique!\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Écran de chargement\r\n    if (gameState === 'chargement') {\r\n        return (\r\n            <div className=\"flash-cards-container loading-screen\">\r\n                <div className=\"loading-spinner\"></div>\r\n                <h2>Préparation des cartes...</h2>\r\n                <p>Un peu de patience, l'aventure commence bientôt !</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Écran de jeu principal\r\n    if (gameState === 'en_jeu' && cards.length > 0) {\r\n        const currentCard = cards[currentCardIndex];\r\n        const progressPercentage = ((currentCardIndex + 1) / cards.length) * 100;\r\n\r\n        return (\r\n            <div className=\"flash-cards-container\">\r\n                {/* Celebration overlay */}\r\n                {showCelebration && (\r\n                    <div className=\"celebration-overlay\">                    <div className=\"celebration-content\">\r\n                            <FaCrown className=\"celebration-icon\" />\r\n                            <h2>Incroyable !</h2>\r\n                            <p>Série de {bestStreak} bonnes réponses ! 🔥</p>\r\n                            <div className=\"celebration-sparkles\">\r\n                                <span>✨</span>\r\n                                <span>🌟</span>\r\n                                <span>⭐</span>\r\n                                <span>✨</span>\r\n                                <span>🌟</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}                <div className=\"flash-cards-header\">\r\n                    <button className=\"back-button\" onClick={() => navigate(-1)}>\r\n                        <FaArrowLeft /> Retour\r\n                    </button>\r\n                    <h1><FaBolt /> Flash Cards Magiques</h1>\r\n                    <div className=\"header-right\">\r\n                        <div className=\"score-display\">\r\n                            <FaStar />\r\n                            {score} points\r\n                        </div>\r\n                        {streak > 0 && (\r\n                            <div className={`streak-display ${streak >= 3 ? 'fire' : ''}`}>\r\n                                {streak >= 3 ? <FaFire /> : <FaBolt />}\r\n                                Série de {streak}\r\n                            </div>\r\n                        )}\r\n                        {bestStreak > 0 && (\r\n                            <div className=\"best-streak-display\">\r\n                                <FaCrown />\r\n                                Meilleur: {bestStreak}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>                <div className=\"game-progress\">\r\n                    <div className=\"progress-bar\">\r\n                        <div \r\n                            className=\"progress-fill\" \r\n                            style={{ width: `${progressPercentage}%` }}\r\n                        ></div>\r\n                    </div>\r\n                    <span className=\"progress-text\">\r\n                        {currentCardIndex + 1} / {cards.length}\r\n                    </span>\r\n                </div>\r\n                \r\n                {/* Game stats display right after progress and before card */}\r\n                <div className=\"game-stats\">\r\n                    <div className=\"stat\">\r\n                        <span className=\"stat-label\">Bonnes réponses:</span>\r\n                        <span className=\"stat-value correct\">{correctAnswers}</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                        <span className=\"stat-label\">Erreurs:</span>\r\n                        <span className=\"stat-value incorrect\">{wrongAnswers}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card-container\">\r\n                    <div \r\n                        className={`flash-card ${isFlipped ? 'flipped' : ''}`} \r\n                        onClick={handleCardFlip}\r\n                        onKeyDown={handleCardKeyDown}\r\n                        role=\"button\"\r\n                        tabIndex=\"0\"\r\n                        aria-label=\"Cliquez ou appuyez sur Entrée pour retourner la carte\"\r\n                    >\r\n                        <div className=\"card-front\">\r\n                            <div className=\"card-category\">{currentCard.category}</div>\r\n                            <div className=\"card-content\">\r\n                                <h3>Question</h3>\r\n                                <p>{currentCard.question}</p>\r\n                            </div>\r\n                            <div className={`difficulty-badge ${currentCard.difficulty}`}>\r\n                                {difficulties[currentCard.difficulty]?.label || currentCard.difficulty}\r\n                            </div>\r\n                            <div className=\"flip-hint\">Clique pour voir la réponse</div>\r\n                        </div>\r\n                        <div className=\"card-back\">\r\n                            <div className=\"card-category\">{currentCard.category}</div>\r\n                            <div className=\"card-content\">\r\n                                <h3>Réponse</h3>\r\n                                <p className=\"answer\">{currentCard.answer}</p>\r\n                                {currentCard.explanation && (\r\n                                    <p className=\"explanation\">{currentCard.explanation}</p>\r\n                                )}\r\n                            </div>\r\n                            <div className={`difficulty-badge ${currentCard.difficulty}`}>\r\n                                {difficulties[currentCard.difficulty]?.label || currentCard.difficulty}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {isFlipped && (\r\n                    <div className=\"answer-buttons\">\r\n                        <button \r\n                            className=\"answer-button wrong\" \r\n                            onClick={() => handleAnswer(false)}\r\n                            aria-label=\"Marquer la réponse comme fausse\"\r\n                        >\r\n                            ❌ Faux\r\n                        </button>\r\n                        <button \r\n                            className=\"answer-button correct\" \r\n                            onClick={() => handleAnswer(true)}\r\n                            aria-label=\"Marquer la réponse comme correcte\"\r\n                        >\r\n                            ✅ Correct\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Écran de fin de partie\r\n    if (gameState === 'termine') {\r\n        const successRate = getSuccessRate();\r\n        return (\r\n            <div className=\"flash-cards-container\">                <div className=\"flash-cards-header\">\r\n                    <button \r\n                        className=\"back-button\" \r\n                        onClick={() => navigate(-1)}\r\n                        aria-label=\"Retourner aux mini-jeux\"\r\n                    >\r\n                        <FaArrowLeft /> Retour\r\n                    </button>\r\n                    <h1>Flash Cards Magiques - Résultats</h1>\r\n                </div>\r\n\r\n                <div className=\"results-container\">\r\n                    <div className=\"results-card\">\r\n                        <FaTrophy className=\"trophy-icon\" />\r\n                        <h2>Partie terminée !</h2>                        <div className=\"results-stats\">\r\n                            <div className=\"stat-item premium\">\r\n                                <span className=\"stat-label\">Score Final:</span>\r\n                                <span className=\"stat-value gold\">{score} points</span>\r\n                            </div>\r\n                            <div className=\"stat-item\">\r\n                                <span className=\"stat-label\">Bonnes réponses:</span>\r\n                                <span className=\"stat-value correct\">{correctAnswers}</span>\r\n                            </div>\r\n                            <div className=\"stat-item\">\r\n                                <span className=\"stat-label\">Mauvaises réponses:</span>\r\n                                <span className=\"stat-value incorrect\">{wrongAnswers}</span>\r\n                            </div>\r\n                            <div className=\"stat-item\">\r\n                                <span className=\"stat-label\">Taux de réussite:</span>\r\n                                <span className=\"stat-value\">{getSuccessRate()}%</span>\r\n                            </div>\r\n                            <div className=\"stat-item premium\">\r\n                                <span className=\"stat-label\">Meilleure série:</span>\r\n                                <span className=\"stat-value streak\">{bestStreak} 🔥</span>\r\n                            </div>\r\n                            <div className=\"stat-item\">\r\n                                <span className=\"stat-label\">Niveau atteint:</span>\r\n                                <span className=\"stat-value level\">\r\n                                    {getPerformanceLevel()}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <p className=\"performance-message\">\r\n                            {getPerformanceMessage()}\r\n                        </p>\r\n\r\n                        <div className=\"results-actions\">\r\n                            <button className=\"action-button restart\" onClick={restartGame}>\r\n                                <FaRedo /> Rejouer\r\n                            </button>\r\n                            <button className=\"action-button back-home\" onClick={() => navigate('/mini-jeux')}>\r\n                                <FaTrophy /> Voir d'autres jeux\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Fallback pour état de jeu inconnu\r\n    return (\r\n        <div className=\"flash-cards-container\">\r\n            <p>État de jeu inconnu. Veuillez rafraîchir la page.</p>\r\n            <button onClick={restartGame}>Réinitialiser</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FlashCards;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}