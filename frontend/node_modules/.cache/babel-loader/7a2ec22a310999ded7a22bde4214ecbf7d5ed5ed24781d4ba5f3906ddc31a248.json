{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\msa\\\\frontend\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\n/**\r\n * @file Register.jsx\r\n * @description Composant React pour la page d'inscription.\r\n * Gère un processus d'inscription en plusieurs étapes, la validation des formulaires,\r\n * la création de compte, la connexion automatique et la redirection.\r\n */\n\n// =================================================================================\n// IMPORTATIONS\n// =================================================================================\nimport React, { useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { FaUser, FaChild, FaChalkboardTeacher, FaArrowLeft, FaCheck } from 'react-icons/fa';\nimport { MdEmail, MdLock, MdPerson, MdAlternateEmail } from 'react-icons/md';\nimport './Register.css';\n\n// =================================================================================\n// COMPOSANT PRINCIPAL : Register\n// =================================================================================\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  // ---------------------------------------------------------------------------------\n  // ÉTATS DU COMPOSANT\n  // ---------------------------------------------------------------------------------\n  const [step, setStep] = useState(1); // Étape actuelle du processus (1: choix du type, 2: formulaire)\n  const [accountType, setAccountType] = useState(''); // Type de compte sélectionné (parent, child, teacher)\n  const [formData, setFormData] = useState({\n    name: '',\n    // Nom complet de l'utilisateur\n    username: '',\n    // Nom d'utilisateur (pseudo)\n    email: '',\n    // Adresse email\n    password: '',\n    // Mot de passe\n    confirmPassword: '' // Confirmation du mot de passe\n  });\n  const [loading, setLoading] = useState(false); // Indicateur de chargement pour les opérations asynchrones\n  const [errors, setErrors] = useState({}); // Objet pour stocker les erreurs de validation du formulaire\n\n  // ---------------------------------------------------------------------------------\n  // HOOKS ET CONTEXTE\n  // ---------------------------------------------------------------------------------\n  const navigate = useNavigate(); // Hook pour la navigation programmatique\n  const {\n    login\n  } = useAuth(); // Fonction de connexion du contexte d'authentification\n\n  // ---------------------------------------------------------------------------------\n  // CONFIGURATION DES TYPES DE COMPTE\n  // ---------------------------------------------------------------------------------\n  const accountTypes = [{\n    type: 'parent',\n    title: 'Parent',\n    description: 'Superviser les progrès de vos enfants',\n    icon: /*#__PURE__*/_jsxDEV(FaUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this),\n    color: '#00e0ff'\n  }, {\n    type: 'child',\n    title: 'Enfant',\n    description: 'Apprendre en s\\'amusant',\n    icon: /*#__PURE__*/_jsxDEV(FaChild, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, this),\n    color: '#ff6b6b'\n  }, {\n    type: 'teacher',\n    title: 'Professeur',\n    description: 'Gérer vos classes et élèves',\n    icon: /*#__PURE__*/_jsxDEV(FaChalkboardTeacher, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this),\n    color: '#4ecdc4'\n  }];\n\n  // ---------------------------------------------------------------------------------\n  // FONCTIONS DE VALIDATION ET DE GESTION\n  // ---------------------------------------------------------------------------------\n  /**\r\n   * Valide les champs du formulaire d'inscription.\r\n   * @returns {boolean} - True si le formulaire est valide, sinon false.\r\n   */\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Validation des champs un par un\n    if (!formData.name.trim()) {\n      newErrors.name = 'Le nom complet est requis';\n    }\n    if (!formData.username.trim()) {\n      newErrors.username = 'Le nom d\\'utilisateur est requis';\n    } else if (formData.username.length < 3) {\n      newErrors.username = 'Le nom d\\'utilisateur doit contenir au moins 3 caractères';\n    }\n    if (!formData.email.trim()) {\n      newErrors.email = 'L\\'adresse email est requise';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Le format de l\\'email est invalide';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Le mot de passe est requis';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Le mot de passe doit contenir au moins 6 caractères';\n    }\n    if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Les mots de passe ne correspondent pas';\n    }\n    setErrors(newErrors); // Met à jour l'état des erreurs\n    return Object.keys(newErrors).length === 0; // Retourne true si aucune erreur\n  };\n\n  /**\r\n   * Met à jour l'état du formulaire lors de la saisie de l'utilisateur.\r\n   * @param {React.ChangeEvent<HTMLInputElement>} e - L'événement de changement.\r\n   */\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Efface l'erreur associée au champ en cours de modification\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  /**\r\n   * Gère la sélection du type de compte et passe à l'étape suivante.\r\n   * @param {string} type - Le type de compte sélectionné.\r\n   */\n  const handleAccountTypeSelect = type => {\n    setAccountType(type);\n    setStep(2);\n  };\n\n  // ---------------------------------------------------------------------------------\n  // GESTION DE LA SOUMISSION DU FORMULAIRE\n  // ---------------------------------------------------------------------------------\n  /**\r\n   * Gère la soumission du formulaire d'inscription.\r\n   * Valide les données, envoie les requêtes à l'API (inscription puis connexion),\r\n   * et gère la redirection de l'utilisateur.\r\n   * @param {React.FormEvent<HTMLFormElement>} e - L'événement de soumission.\r\n   */\n  const handleSubmit = async e => {\n    e.preventDefault(); // Empêche le rechargement de la page\n\n    if (!validateForm()) return; // Arrête si la validation échoue\n\n    setLoading(true); // Active l'indicateur de chargement\n\n    try {\n      // Étape 1: Inscription de l'utilisateur\n      console.log('Tentative d\\'inscription en cours...');\n      const registerResponse = await axiosInstance.post('/auth/register', {\n        name: formData.name,\n        username: formData.username,\n        email: formData.email,\n        password: formData.password,\n        accountType: accountType\n      });\n      console.log('Inscription réussie:', registerResponse.data);\n\n      // Étape 2: Connexion automatique après une inscription réussie\n      console.log('Connexion automatique en cours...');\n      const loginResponse = await axiosInstance.post('/auth/login', {\n        identifier: formData.email,\n        password: formData.password\n      });\n      console.log('Connexion réussie:', loginResponse.data);\n\n      // Étape 3: Sauvegarde des données d'authentification dans le contexte\n      login(loginResponse.data.token, loginResponse.data.user);\n\n      // Étape 4: Redirection en fonction du type de compte\n      switch (accountType) {\n        case 'parent':\n          console.log('Redirection vers la configuration du compte parent...');\n          navigate('/parent-setup');\n          break;\n        case 'child':\n          console.log('Redirection vers l\\'accueil pour l\\'enfant...');\n          navigate('/');\n          break;\n        case 'teacher':\n          console.log('Redirection vers l\\'accueil pour l\\'enseignant...');\n          navigate('/');\n          break;\n        default:\n          navigate('/');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Erreur lors du processus d\\'inscription/connexion:', err);\n\n      // Gestion et affichage des erreurs à l'utilisateur\n      let errorMessage = 'Une erreur est survenue lors de l\\'inscription.';\n      if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.error) {\n        errorMessage = err.response.data.error;\n      } else if (err.message) {\n        errorMessage = err.message;\n      }\n\n      // Affiche une alerte pour l'instant, pourrait être remplacé par un composant de notification\n      alert(errorMessage);\n    } finally {\n      setLoading(false); // Désactive l'indicateur de chargement\n    }\n  };\n\n  // ---------------------------------------------------------------------------------\n  // RENDU CONDITIONNEL DES ÉTAPES\n  // ---------------------------------------------------------------------------------\n  /**\r\n   * Affiche l'écran de sélection du type de compte.\r\n   */\n  const renderAccountTypeSelection = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account-type-selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cr\\xE9er votre compte\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Choisissez le type de compte qui vous correspond\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-types\",\n      children: accountTypes.map(({\n        type,\n        title,\n        description,\n        icon,\n        color\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-type-card\",\n        onClick: () => handleAccountTypeSelect(type),\n        style: {\n          '--accent-color': color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-type-icon\",\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-button\",\n          children: \"Choisir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n\n  /**\r\n   * Affiche le formulaire d'inscription une fois le type de compte choisi.\r\n   */\n  const renderRegistrationForm = () => {\n    const selectedAccountType = accountTypes.find(a => a.type === accountType);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => setStep(1),\n          type: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), \" Retour\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-type-badge\",\n          children: [selectedAccountType && selectedAccountType.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Compte \", selectedAccountType ? selectedAccountType.title : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Informations du compte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(MdPerson, {\n                className: \"input-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"Nom complet\",\n                value: formData.name,\n                onChange: handleChange,\n                className: errors.name ? 'error' : '',\n                disabled: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(MdAlternateEmail, {\n                className: \"input-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"username\",\n                placeholder: \"Pseudo (nom d'utilisateur)\",\n                value: formData.username,\n                onChange: handleChange,\n                className: errors.username ? 'error' : '',\n                disabled: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(MdEmail, {\n                className: \"input-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Adresse email\",\n                value: formData.email,\n                onChange: handleChange,\n                className: errors.email ? 'error' : '',\n                disabled: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(MdLock, {\n                className: \"input-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Mot de passe\",\n                value: formData.password,\n                onChange: handleChange,\n                className: errors.password ? 'error' : '',\n                disabled: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(MdLock, {\n                className: \"input-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"confirmPassword\",\n                placeholder: \"Confirmer le mot de passe\",\n                value: formData.confirmPassword,\n                onChange: handleChange,\n                className: errors.confirmPassword ? 'error' : '',\n                disabled: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 29\n            }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.confirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"terms-checkbox\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                required: true,\n                disabled: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\",\n                children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"J'accepte les \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/terms\",\n                  children: \"conditions d'utilisation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 37\n              }, this), \"Cr\\xE9ation en cours...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 33\n            }, this) : 'Créer mon compte'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Vous avez d\\xE9j\\xE0 un compte ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/connexion\",\n            children: \"Se connecter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this);\n  };\n\n  // ---------------------------------------------------------------------------------\n  // RENDU PRINCIPAL DU COMPOSANT\n  // ---------------------------------------------------------------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-container\",\n      children: step === 1 ? renderAccountTypeSelection() : renderRegistrationForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 390,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"PVutkQsy3lnKKnLCVBs5k3KOlbw=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axiosInstance","Link","useNavigate","useAuth","FaUser","FaChild","FaChalkboardTeacher","FaArrowLeft","FaCheck","MdEmail","MdLock","MdPerson","MdAlternateEmail","jsxDEV","_jsxDEV","Register","_s","step","setStep","accountType","setAccountType","formData","setFormData","name","username","email","password","confirmPassword","loading","setLoading","errors","setErrors","navigate","login","accountTypes","type","title","description","icon","fileName","_jsxFileName","lineNumber","columnNumber","color","validateForm","newErrors","trim","length","test","Object","keys","handleChange","e","value","target","prev","handleAccountTypeSelect","handleSubmit","preventDefault","console","log","registerResponse","post","data","loginResponse","identifier","token","user","err","_err$response","_err$response$data","error","errorMessage","response","message","alert","renderAccountTypeSelection","className","children","map","onClick","style","renderRegistrationForm","selectedAccountType","find","a","onSubmit","placeholder","onChange","disabled","required","to","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/msa/frontend/src/pages/Register.jsx"],"sourcesContent":["/**\r\n * @file Register.jsx\r\n * @description Composant React pour la page d'inscription.\r\n * Gère un processus d'inscription en plusieurs étapes, la validation des formulaires,\r\n * la création de compte, la connexion automatique et la redirection.\r\n */\r\n\r\n// =================================================================================\r\n// IMPORTATIONS\r\n// =================================================================================\r\nimport React, { useState } from 'react';\r\nimport axiosInstance from '../utils/axiosInstance';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { FaUser, FaChild, FaChalkboardTeacher, FaArrowLeft, FaCheck } from 'react-icons/fa';\r\nimport { MdEmail, MdLock, MdPerson, MdAlternateEmail } from 'react-icons/md';\r\nimport './Register.css';\r\n\r\n// =================================================================================\r\n// COMPOSANT PRINCIPAL : Register\r\n// =================================================================================\r\nfunction Register() {\r\n    // ---------------------------------------------------------------------------------\r\n    // ÉTATS DU COMPOSANT\r\n    // ---------------------------------------------------------------------------------\r\n    const [step, setStep] = useState(1); // Étape actuelle du processus (1: choix du type, 2: formulaire)\r\n    const [accountType, setAccountType] = useState(''); // Type de compte sélectionné (parent, child, teacher)\r\n    const [formData, setFormData] = useState({\r\n        name: '',         // Nom complet de l'utilisateur\r\n        username: '',   // Nom d'utilisateur (pseudo)\r\n        email: '',        // Adresse email\r\n        password: '',     // Mot de passe\r\n        confirmPassword: '' // Confirmation du mot de passe\r\n    });\r\n    const [loading, setLoading] = useState(false); // Indicateur de chargement pour les opérations asynchrones\r\n    const [errors, setErrors] = useState({}); // Objet pour stocker les erreurs de validation du formulaire\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // HOOKS ET CONTEXTE\r\n    // ---------------------------------------------------------------------------------\r\n    const navigate = useNavigate(); // Hook pour la navigation programmatique\r\n    const { login } = useAuth(); // Fonction de connexion du contexte d'authentification\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // CONFIGURATION DES TYPES DE COMPTE\r\n    // ---------------------------------------------------------------------------------\r\n    const accountTypes = [\r\n        {\r\n            type: 'parent',\r\n            title: 'Parent',\r\n            description: 'Superviser les progrès de vos enfants',\r\n            icon: <FaUser />,\r\n            color: '#00e0ff'\r\n        },\r\n        {\r\n            type: 'child',\r\n            title: 'Enfant',\r\n            description: 'Apprendre en s\\'amusant',\r\n            icon: <FaChild />,\r\n            color: '#ff6b6b'\r\n        },\r\n        {\r\n            type: 'teacher',\r\n            title: 'Professeur',\r\n            description: 'Gérer vos classes et élèves',\r\n            icon: <FaChalkboardTeacher />,\r\n            color: '#4ecdc4'\r\n        }\r\n    ];\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // FONCTIONS DE VALIDATION ET DE GESTION\r\n    // ---------------------------------------------------------------------------------\r\n    /**\r\n     * Valide les champs du formulaire d'inscription.\r\n     * @returns {boolean} - True si le formulaire est valide, sinon false.\r\n     */\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n\r\n        // Validation des champs un par un\r\n        if (!formData.name.trim()) {\r\n            newErrors.name = 'Le nom complet est requis';\r\n        }\r\n\r\n        if (!formData.username.trim()) {\r\n            newErrors.username = 'Le nom d\\'utilisateur est requis';\r\n        } else if (formData.username.length < 3) {\r\n            newErrors.username = 'Le nom d\\'utilisateur doit contenir au moins 3 caractères';\r\n        }\r\n\r\n        if (!formData.email.trim()) {\r\n            newErrors.email = 'L\\'adresse email est requise';\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n            newErrors.email = 'Le format de l\\'email est invalide';\r\n        }\r\n\r\n        if (!formData.password) {\r\n            newErrors.password = 'Le mot de passe est requis';\r\n        } else if (formData.password.length < 6) {\r\n            newErrors.password = 'Le mot de passe doit contenir au moins 6 caractères';\r\n        }\r\n\r\n        if (formData.password !== formData.confirmPassword) {\r\n            newErrors.confirmPassword = 'Les mots de passe ne correspondent pas';\r\n        }\r\n\r\n        setErrors(newErrors); // Met à jour l'état des erreurs\r\n        return Object.keys(newErrors).length === 0; // Retourne true si aucune erreur\r\n    };\r\n\r\n    /**\r\n     * Met à jour l'état du formulaire lors de la saisie de l'utilisateur.\r\n     * @param {React.ChangeEvent<HTMLInputElement>} e - L'événement de changement.\r\n     */\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n\r\n        // Efface l'erreur associée au champ en cours de modification\r\n        if (errors[name]) {\r\n            setErrors(prev => ({ ...prev, [name]: '' }));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gère la sélection du type de compte et passe à l'étape suivante.\r\n     * @param {string} type - Le type de compte sélectionné.\r\n     */\r\n    const handleAccountTypeSelect = (type) => {\r\n        setAccountType(type);\r\n        setStep(2);\r\n    };\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // GESTION DE LA SOUMISSION DU FORMULAIRE\r\n    // ---------------------------------------------------------------------------------\r\n    /**\r\n     * Gère la soumission du formulaire d'inscription.\r\n     * Valide les données, envoie les requêtes à l'API (inscription puis connexion),\r\n     * et gère la redirection de l'utilisateur.\r\n     * @param {React.FormEvent<HTMLFormElement>} e - L'événement de soumission.\r\n     */\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Empêche le rechargement de la page\r\n\r\n        if (!validateForm()) return; // Arrête si la validation échoue\r\n\r\n        setLoading(true); // Active l'indicateur de chargement\r\n\r\n        try {\r\n            // Étape 1: Inscription de l'utilisateur\r\n            console.log('Tentative d\\'inscription en cours...');\r\n            const registerResponse = await axiosInstance.post('/auth/register', {\r\n                name: formData.name,\r\n                username: formData.username,\r\n                email: formData.email,\r\n                password: formData.password,\r\n                accountType: accountType\r\n            });\r\n\r\n            console.log('Inscription réussie:', registerResponse.data);\r\n\r\n            // Étape 2: Connexion automatique après une inscription réussie\r\n            console.log('Connexion automatique en cours...');\r\n            const loginResponse = await axiosInstance.post('/auth/login', {\r\n                identifier: formData.email,\r\n                password: formData.password\r\n            });\r\n\r\n            console.log('Connexion réussie:', loginResponse.data);\r\n\r\n            // Étape 3: Sauvegarde des données d'authentification dans le contexte\r\n            login(loginResponse.data.token, loginResponse.data.user);\r\n\r\n            // Étape 4: Redirection en fonction du type de compte\r\n            switch (accountType) {\r\n                case 'parent':\r\n                    console.log('Redirection vers la configuration du compte parent...');\r\n                    navigate('/parent-setup');\r\n                    break;\r\n                case 'child':\r\n                    console.log('Redirection vers l\\'accueil pour l\\'enfant...');\r\n                    navigate('/');\r\n                    break;\r\n                case 'teacher':\r\n                    console.log('Redirection vers l\\'accueil pour l\\'enseignant...');\r\n                    navigate('/');\r\n                    break;\r\n                default:\r\n                    navigate('/');\r\n            }\r\n\r\n        } catch (err) {\r\n            console.error('Erreur lors du processus d\\'inscription/connexion:', err);\r\n\r\n            // Gestion et affichage des erreurs à l'utilisateur\r\n            let errorMessage = 'Une erreur est survenue lors de l\\'inscription.';\r\n\r\n            if (err.response?.data?.error) {\r\n                errorMessage = err.response.data.error;\r\n            } else if (err.message) {\r\n                errorMessage = err.message;\r\n            }\r\n\r\n            // Affiche une alerte pour l'instant, pourrait être remplacé par un composant de notification\r\n            alert(errorMessage);\r\n        } finally {\r\n            setLoading(false); // Désactive l'indicateur de chargement\r\n        }\r\n    };\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // RENDU CONDITIONNEL DES ÉTAPES\r\n    // ---------------------------------------------------------------------------------\r\n    /**\r\n     * Affiche l'écran de sélection du type de compte.\r\n     */\r\n    const renderAccountTypeSelection = () => (\r\n        <div className=\"account-type-selection\">\r\n            <div className=\"register-header\">\r\n                <h1>Créer votre compte</h1>\r\n                <p>Choisissez le type de compte qui vous correspond</p>\r\n            </div>\r\n\r\n            <div className=\"account-types\">\r\n                {accountTypes.map(({ type, title, description, icon, color }) => (\r\n                    <div\r\n                        key={type}\r\n                        className=\"account-type-card\"\r\n                        onClick={() => handleAccountTypeSelect(type)}\r\n                        style={{ '--accent-color': color }}\r\n                    >\r\n                        <div className=\"account-type-icon\">\r\n                            {icon}\r\n                        </div>\r\n                        <h3>{title}</h3>\r\n                        <p>{description}</p>\r\n                        <div className=\"select-button\">\r\n                            Choisir\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    /**\r\n     * Affiche le formulaire d'inscription une fois le type de compte choisi.\r\n     */\r\n    const renderRegistrationForm = () => {\r\n        const selectedAccountType = accountTypes.find(a => a.type === accountType);\r\n\r\n        return (\r\n            <div className=\"registration-form-container\">\r\n                <div className=\"form-header\">\r\n                    <button\r\n                        className=\"back-button\"\r\n                        onClick={() => setStep(1)}\r\n                        type=\"button\"\r\n                    >\r\n                        <FaArrowLeft /> Retour\r\n                    </button>\r\n\r\n                    <div className=\"account-type-badge\">\r\n                        {selectedAccountType && selectedAccountType.icon}\r\n                        <span>Compte {selectedAccountType ? selectedAccountType.title : ''}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"register-box\">\r\n                    <h2>Informations du compte</h2>\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-wrapper\">\r\n                                <MdPerson className=\"input-icon\" />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Nom complet\"\r\n                                    value={formData.name}\r\n                                    onChange={handleChange}\r\n                                    className={errors.name ? 'error' : ''}\r\n                                    disabled={loading}\r\n                                />\r\n                            </div>\r\n                            {errors.name && <span className=\"error-message\">{errors.name}</span>}\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-wrapper\">\r\n                                <MdAlternateEmail className=\"input-icon\" />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    placeholder=\"Pseudo (nom d'utilisateur)\"\r\n                                    value={formData.username}\r\n                                    onChange={handleChange}\r\n                                    className={errors.username ? 'error' : ''}\r\n                                    disabled={loading}\r\n                                />\r\n                            </div>\r\n                            {errors.username && <span className=\"error-message\">{errors.username}</span>}\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-wrapper\">\r\n                                <MdEmail className=\"input-icon\" />\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Adresse email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleChange}\r\n                                    className={errors.email ? 'error' : ''}\r\n                                    disabled={loading}\r\n                                />\r\n                            </div>\r\n                            {errors.email && <span className=\"error-message\">{errors.email}</span>}\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-wrapper\">\r\n                                <MdLock className=\"input-icon\" />\r\n                                <input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Mot de passe\"\r\n                                    value={formData.password}\r\n                                    onChange={handleChange}\r\n                                    className={errors.password ? 'error' : ''}\r\n                                    disabled={loading}\r\n                                />\r\n                            </div>\r\n                            {errors.password && <span className=\"error-message\">{errors.password}</span>}\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-wrapper\">\r\n                                <MdLock className=\"input-icon\" />\r\n                                <input\r\n                                    type=\"password\"\r\n                                    name=\"confirmPassword\"\r\n                                    placeholder=\"Confirmer le mot de passe\"\r\n                                    value={formData.confirmPassword}\r\n                                    onChange={handleChange}\r\n                                    className={errors.confirmPassword ? 'error' : ''}\r\n                                    disabled={loading}\r\n                                />\r\n                            </div>\r\n                            {errors.confirmPassword && <span className=\"error-message\">{errors.confirmPassword}</span>}\r\n                        </div>\r\n\r\n                        <div className=\"terms-checkbox\">\r\n                            <label>\r\n                                <input type=\"checkbox\" required disabled={loading} />\r\n                                <span className=\"checkmark\">\r\n                                    <FaCheck />\r\n                                </span>\r\n                                <span>J'accepte les <Link to=\"/terms\">conditions d'utilisation</Link></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"submit-button\" disabled={loading}>\r\n                            {loading ? (\r\n                                <div className=\"loading-spinner\">\r\n                                    <div className=\"spinner\"></div>\r\n                                    Création en cours...\r\n                                </div>\r\n                            ) : (\r\n                                'Créer mon compte'\r\n                            )}\r\n                        </button>\r\n                    </form>\r\n\r\n                    <div className=\"login-link\">\r\n                        <span>Vous avez déjà un compte ?</span>\r\n                        <Link to=\"/connexion\">Se connecter</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // RENDU PRINCIPAL DU COMPOSANT\r\n    // ---------------------------------------------------------------------------------\r\n    return (\r\n        <div className=\"register-page\">\r\n            <div className=\"register-container\">\r\n                {/* Affiche le composant correspondant à l'étape actuelle */}\r\n                {step === 1 ? renderAccountTypeSelection() : renderRegistrationForm()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}