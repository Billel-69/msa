{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\msa\\\\frontend\\\\src\\\\components\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nimport { FaPaperPlane, FaHeart, FaReply, FaTrash } from 'react-icons/fa';\nimport './Comments.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments({\n  postId,\n  isVisible,\n  onCommentCountChange\n}) {\n  _s();\n  var _user$name;\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [replyingTo, setReplyingTo] = useState(null);\n  const [replyText, setReplyText] = useState('');\n  const {\n    token,\n    user\n  } = useAuth();\n  useEffect(() => {\n    if (isVisible && postId) {\n      fetchComments();\n    }\n  }, [isVisible, postId]);\n  const fetchComments = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`http://localhost:5000/api/comments/${postId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setComments(response.data);\n\n      // Notifier le parent du nombre de commentaires\n      if (onCommentCountChange) {\n        onCommentCountChange(response.data.length);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des commentaires:', error);\n      setComments([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n    if (!token) {\n      alert('Vous devez être connecté pour commenter');\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const response = await axios.post('http://localhost:5000/api/comments', {\n        postId: postId,\n        content: newComment.trim()\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Ajouter le nouveau commentaire à la liste\n      const newCommentData = {\n        ...response.data,\n        user_name: user.name,\n        user_username: user.username\n      };\n      setComments(prev => [newCommentData, ...prev]);\n      setNewComment('');\n\n      // Notifier le parent du nouveau nombre\n      if (onCommentCountChange) {\n        onCommentCountChange(comments.length + 1);\n      }\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout du commentaire:', error);\n      alert('Erreur lors de l\\'ajout du commentaire');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const handleDeleteComment = async commentId => {\n    if (!window.confirm('Voulez-vous vraiment supprimer ce commentaire ?')) {\n      return;\n    }\n    try {\n      await axios.delete(`http://localhost:5000/api/comments/${commentId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Retirer le commentaire de la liste\n      setComments(prev => prev.filter(comment => comment.id !== commentId));\n\n      // Notifier le parent du nouveau nombre\n      if (onCommentCountChange) {\n        onCommentCountChange(comments.length - 1);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la suppression du commentaire:', error);\n      alert('Erreur lors de la suppression du commentaire');\n    }\n  };\n  const handleLikeComment = async commentId => {\n    try {\n      await axios.post(`http://localhost:5000/api/comments/${commentId}/like`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Mettre à jour le statut de like localement\n      setComments(prev => prev.map(comment => comment.id === commentId ? {\n        ...comment,\n        liked: !comment.liked,\n        like_count: comment.liked ? (comment.like_count || 0) - 1 : (comment.like_count || 0) + 1\n      } : comment));\n    } catch (error) {\n      console.error('Erreur lors du like du commentaire:', error);\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n    if (diffInMinutes < 1) return 'À l\\'instant';\n    if (diffInMinutes < 60) return `${diffInMinutes} min`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)} h`;\n    return date.toLocaleDateString('fr-FR');\n  };\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Commentaires (\", comments.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"comment-form\",\n      onSubmit: handleSubmitComment,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-avatar\",\n          children: (user === null || user === void 0 ? void 0 : (_user$name = user.name) === null || _user$name === void 0 ? void 0 : _user$name.charAt(0).toUpperCase()) || '?'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"\\xC9crivez votre commentaire...\",\n            rows: \"2\",\n            disabled: submitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"comment-submit\",\n            disabled: submitting || !newComment.trim(),\n            children: submitting ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner-small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-login-prompt\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connectez-vous pour laisser un commentaire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Chargement des commentaires...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this) : comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Aucun commentaire pour le moment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Soyez le premier \\xE0 commenter !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this) : comments.map(comment => {\n        var _comment$user_name, _user$name2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-avatar\",\n            children: ((_comment$user_name = comment.user_name) === null || _comment$user_name === void 0 ? void 0 : _comment$user_name.charAt(0).toUpperCase()) || '?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"comment-author\",\n                children: comment.user_name || 'Utilisateur'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"comment-username\",\n                children: [\"@\", comment.user_username || 'user']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"comment-date\",\n                children: formatDate(comment.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-text\",\n              children: comment.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `comment-action-btn ${comment.liked ? 'liked' : ''}`,\n                onClick: () => handleLikeComment(comment.id),\n                disabled: !token,\n                children: [/*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 41\n                }, this), comment.like_count > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: comment.like_count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"comment-action-btn\",\n                onClick: () => setReplyingTo(comment.id),\n                disabled: !token,\n                children: [/*#__PURE__*/_jsxDEV(FaReply, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 41\n                }, this), \"R\\xE9pondre\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 37\n              }, this), user && comment.user_id === user.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"comment-action-btn delete\",\n                onClick: () => handleDeleteComment(comment.id),\n                children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 33\n            }, this), replyingTo === comment.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reply-form\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-input-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-avatar small\",\n                  children: (user === null || user === void 0 ? void 0 : (_user$name2 = user.name) === null || _user$name2 === void 0 ? void 0 : _user$name2.charAt(0).toUpperCase()) || '?'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-input-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: replyText,\n                    onChange: e => setReplyText(e.target.value),\n                    placeholder: `Répondre à @${comment.user_username}...`,\n                    rows: \"2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"reply-actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => {\n                        setReplyingTo(null);\n                        setReplyText('');\n                      },\n                      className: \"cancel-reply\",\n                      children: \"Annuler\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"submit-reply\",\n                      disabled: !replyText.trim(),\n                      onClick: () => {\n                        // TODO: Implémenter la logique de réponse\n                        console.log('Réponse:', replyText);\n                        setReplyingTo(null);\n                        setReplyText('');\n                      },\n                      children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n}\n_s(Comments, \"gmMsbScddqEMeoP8mGJqNVzDT4A=\", false, function () {\n  return [useAuth];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","FaPaperPlane","FaHeart","FaReply","FaTrash","jsxDEV","_jsxDEV","Comments","postId","isVisible","onCommentCountChange","_s","_user$name","comments","setComments","newComment","setNewComment","loading","setLoading","submitting","setSubmitting","replyingTo","setReplyingTo","replyText","setReplyText","token","user","fetchComments","response","get","headers","Authorization","data","length","error","console","handleSubmitComment","e","preventDefault","trim","alert","post","content","newCommentData","user_name","name","user_username","username","prev","handleDeleteComment","commentId","window","confirm","delete","filter","comment","id","handleLikeComment","map","liked","like_count","formatDate","dateString","date","Date","now","diffInMinutes","Math","floor","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","charAt","toUpperCase","value","onChange","target","placeholder","rows","disabled","type","_comment$user_name","_user$name2","created_at","onClick","user_id","log","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/msa/frontend/src/components/Comments.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { FaPaperPlane, FaHeart, FaReply, FaTrash } from 'react-icons/fa';\r\nimport './Comments.css';\r\n\r\nfunction Comments({ postId, isVisible, onCommentCountChange }) {\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [replyingTo, setReplyingTo] = useState(null);\r\n    const [replyText, setReplyText] = useState('');\r\n\r\n    const { token, user } = useAuth();\r\n\r\n    useEffect(() => {\r\n        if (isVisible && postId) {\r\n            fetchComments();\r\n        }\r\n    }, [isVisible, postId]);\r\n\r\n    const fetchComments = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get(\r\n                `http://localhost:5000/api/comments/${postId}`,\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }\r\n            );\r\n\r\n            setComments(response.data);\r\n\r\n            // Notifier le parent du nombre de commentaires\r\n            if (onCommentCountChange) {\r\n                onCommentCountChange(response.data.length);\r\n            }\r\n        } catch (error) {\r\n            console.error('Erreur lors de la récupération des commentaires:', error);\r\n            setComments([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSubmitComment = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!newComment.trim()) return;\r\n        if (!token) {\r\n            alert('Vous devez être connecté pour commenter');\r\n            return;\r\n        }\r\n\r\n        setSubmitting(true);\r\n        try {\r\n            const response = await axios.post(\r\n                'http://localhost:5000/api/comments',\r\n                {\r\n                    postId: postId,\r\n                    content: newComment.trim()\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n\r\n            // Ajouter le nouveau commentaire à la liste\r\n            const newCommentData = {\r\n                ...response.data,\r\n                user_name: user.name,\r\n                user_username: user.username\r\n            };\r\n\r\n            setComments(prev => [newCommentData, ...prev]);\r\n            setNewComment('');\r\n\r\n            // Notifier le parent du nouveau nombre\r\n            if (onCommentCountChange) {\r\n                onCommentCountChange(comments.length + 1);\r\n            }\r\n        } catch (error) {\r\n            console.error('Erreur lors de l\\'ajout du commentaire:', error);\r\n            alert('Erreur lors de l\\'ajout du commentaire');\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const handleDeleteComment = async (commentId) => {\r\n        if (!window.confirm('Voulez-vous vraiment supprimer ce commentaire ?')) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await axios.delete(\r\n                `http://localhost:5000/api/comments/${commentId}`,\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }\r\n            );\r\n\r\n            // Retirer le commentaire de la liste\r\n            setComments(prev => prev.filter(comment => comment.id !== commentId));\r\n\r\n            // Notifier le parent du nouveau nombre\r\n            if (onCommentCountChange) {\r\n                onCommentCountChange(comments.length - 1);\r\n            }\r\n        } catch (error) {\r\n            console.error('Erreur lors de la suppression du commentaire:', error);\r\n            alert('Erreur lors de la suppression du commentaire');\r\n        }\r\n    };\r\n\r\n    const handleLikeComment = async (commentId) => {\r\n        try {\r\n            await axios.post(\r\n                `http://localhost:5000/api/comments/${commentId}/like`,\r\n                {},\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }\r\n            );\r\n\r\n            // Mettre à jour le statut de like localement\r\n            setComments(prev => prev.map(comment =>\r\n                comment.id === commentId\r\n                    ? {\r\n                        ...comment,\r\n                        liked: !comment.liked,\r\n                        like_count: comment.liked\r\n                            ? (comment.like_count || 0) - 1\r\n                            : (comment.like_count || 0) + 1\r\n                    }\r\n                    : comment\r\n            ));\r\n        } catch (error) {\r\n            console.error('Erreur lors du like du commentaire:', error);\r\n        }\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        const now = new Date();\r\n        const diffInMinutes = Math.floor((now - date) / (1000 * 60));\r\n\r\n        if (diffInMinutes < 1) return 'À l\\'instant';\r\n        if (diffInMinutes < 60) return `${diffInMinutes} min`;\r\n        if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)} h`;\r\n        return date.toLocaleDateString('fr-FR');\r\n    };\r\n\r\n    if (!isVisible) return null;\r\n\r\n    return (\r\n        <div className=\"comments-section\">\r\n            <div className=\"comments-header\">\r\n                <h4>Commentaires ({comments.length})</h4>\r\n            </div>\r\n\r\n            {/* Formulaire d'ajout de commentaire */}\r\n            {token ? (\r\n                <form className=\"comment-form\" onSubmit={handleSubmitComment}>\r\n                    <div className=\"comment-input-wrapper\">\r\n                        <div className=\"comment-avatar\">\r\n                            {user?.name?.charAt(0).toUpperCase() || '?'}\r\n                        </div>\r\n                        <div className=\"comment-input-container\">\r\n                            <textarea\r\n                                value={newComment}\r\n                                onChange={(e) => setNewComment(e.target.value)}\r\n                                placeholder=\"Écrivez votre commentaire...\"\r\n                                rows=\"2\"\r\n                                disabled={submitting}\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"comment-submit\"\r\n                                disabled={submitting || !newComment.trim()}\r\n                            >\r\n                                {submitting ? (\r\n                                    <div className=\"spinner-small\"></div>\r\n                                ) : (\r\n                                    <FaPaperPlane />\r\n                                )}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            ) : (\r\n                <div className=\"comment-login-prompt\">\r\n                    <p>Connectez-vous pour laisser un commentaire</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* Liste des commentaires */}\r\n            <div className=\"comments-list\">\r\n                {loading ? (\r\n                    <div className=\"comments-loading\">\r\n                        <div className=\"spinner\"></div>\r\n                        <p>Chargement des commentaires...</p>\r\n                    </div>\r\n                ) : comments.length === 0 ? (\r\n                    <div className=\"no-comments\">\r\n                        <p>Aucun commentaire pour le moment.</p>\r\n                        <p>Soyez le premier à commenter !</p>\r\n                    </div>\r\n                ) : (\r\n                    comments.map((comment) => (\r\n                        <div key={comment.id} className=\"comment-item\">\r\n                            <div className=\"comment-avatar\">\r\n                                {comment.user_name?.charAt(0).toUpperCase() || '?'}\r\n                            </div>\r\n\r\n                            <div className=\"comment-content\">\r\n                                <div className=\"comment-header\">\r\n                                    <span className=\"comment-author\">\r\n                                        {comment.user_name || 'Utilisateur'}\r\n                                    </span>\r\n                                    <span className=\"comment-username\">\r\n                                        @{comment.user_username || 'user'}\r\n                                    </span>\r\n                                    <span className=\"comment-date\">\r\n                                        {formatDate(comment.created_at)}\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div className=\"comment-text\">\r\n                                    {comment.content}\r\n                                </div>\r\n\r\n                                <div className=\"comment-actions\">\r\n                                    <button\r\n                                        className={`comment-action-btn ${comment.liked ? 'liked' : ''}`}\r\n                                        onClick={() => handleLikeComment(comment.id)}\r\n                                        disabled={!token}\r\n                                    >\r\n                                        <FaHeart />\r\n                                        {comment.like_count > 0 && (\r\n                                            <span>{comment.like_count}</span>\r\n                                        )}\r\n                                    </button>\r\n\r\n                                    <button\r\n                                        className=\"comment-action-btn\"\r\n                                        onClick={() => setReplyingTo(comment.id)}\r\n                                        disabled={!token}\r\n                                    >\r\n                                        <FaReply />\r\n                                        Répondre\r\n                                    </button>\r\n\r\n                                    {/* Bouton de suppression pour l'auteur du commentaire */}\r\n                                    {user && comment.user_id === user.id && (\r\n                                        <button\r\n                                            className=\"comment-action-btn delete\"\r\n                                            onClick={() => handleDeleteComment(comment.id)}\r\n                                        >\r\n                                            <FaTrash />\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Formulaire de réponse */}\r\n                                {replyingTo === comment.id && (\r\n                                    <div className=\"reply-form\">\r\n                                        <div className=\"comment-input-wrapper\">\r\n                                            <div className=\"comment-avatar small\">\r\n                                                {user?.name?.charAt(0).toUpperCase() || '?'}\r\n                                            </div>\r\n                                            <div className=\"comment-input-container\">\r\n                                                <textarea\r\n                                                    value={replyText}\r\n                                                    onChange={(e) => setReplyText(e.target.value)}\r\n                                                    placeholder={`Répondre à @${comment.user_username}...`}\r\n                                                    rows=\"2\"\r\n                                                />\r\n                                                <div className=\"reply-actions\">\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        onClick={() => {\r\n                                                            setReplyingTo(null);\r\n                                                            setReplyText('');\r\n                                                        }}\r\n                                                        className=\"cancel-reply\"\r\n                                                    >\r\n                                                        Annuler\r\n                                                    </button>\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        className=\"submit-reply\"\r\n                                                        disabled={!replyText.trim()}\r\n                                                        onClick={() => {\r\n                                                            // TODO: Implémenter la logique de réponse\r\n                                                            console.log('Réponse:', replyText);\r\n                                                            setReplyingTo(null);\r\n                                                            setReplyText('');\r\n                                                        }}\r\n                                                    >\r\n                                                        <FaPaperPlane />\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comments;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}