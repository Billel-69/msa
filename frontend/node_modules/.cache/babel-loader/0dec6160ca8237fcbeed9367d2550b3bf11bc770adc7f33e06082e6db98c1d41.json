{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\msa\\\\frontend\\\\src\\\\components\\\\AchievementDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/AchievementDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AchievementDisplay = ({\n  achievement,\n  userAchievement = null,\n  compact = false,\n  showAllAchievements = false,\n  token = null\n}) => {\n  _s();\n  const [achievements, setAchievements] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [filter, setFilter] = useState('all');\n  useEffect(() => {\n    if (showAllAchievements && token) {\n      fetchAchievements();\n    }\n  }, [showAllAchievements, token, filter]);\n  const fetchAchievements = async () => {\n    setLoading(true);\n    try {\n      let url = 'http://localhost:5000/api/gamification/achievements';\n      if (filter !== 'all') {\n        url += `?status=${filter}`;\n      }\n      const response = await fetch(url, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setAchievements(data.data || []);\n      }\n    } catch (error) {\n      console.error('Error fetching achievements:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getRarityColor = rarity => {\n    const colors = {\n      common: '#8B8680',\n      rare: '#2196F3',\n      epic: '#9C27B0',\n      legendary: '#FF9800'\n    };\n    return colors[rarity] || colors.common;\n  };\n  const getRarityName = rarity => {\n    const names = {\n      common: 'Common',\n      rare: 'Rare',\n      epic: 'Epic',\n      legendary: 'Legendary'\n    };\n    return names[rarity] || 'Common';\n  };\n  const formatProgress = (current, target) => {\n    if (target <= 1) return `${current >= target ? 'Complete' : 'Incomplete'}`;\n    return `${current}/${target}`;\n  };\n  const getProgressPercentage = (current, target) => {\n    return Math.min(current / target * 100, 100);\n  };\n  const isCompleted = userAch => {\n    return (userAch === null || userAch === void 0 ? void 0 : userAch.status) === 'completed' || (userAch === null || userAch === void 0 ? void 0 : userAch.completedAt);\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  // Single achievement display\n  if (!showAllAchievements && achievement) {\n    const completed = isCompleted(userAchievement);\n    const progress = (userAchievement === null || userAchievement === void 0 ? void 0 : userAchievement.progress) || {\n      current: 0,\n      target: 1\n    };\n    if (compact) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `achievement-compact ${completed ? 'completed' : 'incomplete'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievement-icon\",\n          children: achievement.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievement-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"achievement-name\",\n            children: achievement.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"achievement-description\",\n            children: achievement.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), !completed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${getProgressPercentage(progress.current, progress.target)}%`,\n                backgroundColor: getRarityColor(achievement.rarity)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievement-status\",\n          children: completed ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"completed-badge\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"progress-text\",\n            children: formatProgress(progress.current, progress.target)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `achievement-card ${completed ? 'completed' : 'incomplete'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"achievement-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievement-icon-large\",\n          children: achievement.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievement-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"achievement-title\",\n            children: achievement.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"achievement-desc\",\n            children: achievement.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"achievement-rarity\",\n            style: {\n              color: getRarityColor(achievement.rarity)\n            },\n            children: getRarityName(achievement.rarity)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"achievement-details\",\n        children: [achievement.longDescription && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"long-description\",\n          children: achievement.longDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievement-rewards\",\n          children: [achievement.xpReward > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reward-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reward-icon\",\n              children: \"\\u2B50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reward-text\",\n              children: [\"+\", achievement.xpReward, \" XP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), achievement.points > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reward-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reward-icon\",\n              children: \"\\uD83D\\uDC8E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reward-text\",\n              children: [\"+\", achievement.points, \" Points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), !completed ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievement-progress\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"progress-label\",\n              children: \"Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"progress-numbers\",\n              children: formatProgress(progress.current, progress.target)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${getProgressPercentage(progress.current, progress.target)}%`,\n                  backgroundColor: getRarityColor(achievement.rarity)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"progress-percentage\",\n              children: [Math.round(getProgressPercentage(progress.current, progress.target)), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievement-completed\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"completed-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"completed-icon\",\n              children: \"\\uD83C\\uDF89\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"completed-text\",\n              children: [\"Completed on \", userAchievement !== null && userAchievement !== void 0 && userAchievement.completedAt ? formatDate(userAchievement.completedAt) : 'Unknown']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n  // All achievements display\n  if (showAllAchievements) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"achievements-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"achievements-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDFC6 Your Achievements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievements-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'all' ? 'active' : ''}`,\n            onClick: () => setFilter('all'),\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'completed' ? 'active' : ''}`,\n            onClick: () => setFilter('completed'),\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'in_progress' ? 'active' : ''}`,\n            onClick: () => setFilter('in_progress'),\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'locked' ? 'active' : ''}`,\n            onClick: () => setFilter('locked'),\n            children: \"Locked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"achievements-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading achievements...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"achievements-grid\",\n        children: achievements.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-achievements\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No achievements found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start playing games to unlock achievements!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 29\n        }, this) : achievements.map((userAch, index) => {\n          var _userAch$achievement;\n          return /*#__PURE__*/_jsxDEV(AchievementDisplay, {\n            achievement: userAch.achievement,\n            userAchievement: userAch,\n            compact: false\n          }, ((_userAch$achievement = userAch.achievement) === null || _userAch$achievement === void 0 ? void 0 : _userAch$achievement.id) || index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this);\n  }\n  return null;\n};\n_s(AchievementDisplay, \"3FkhapNw+HpgcIsyE9kBRu+Yau0=\");\n_c = AchievementDisplay;\nexport default AchievementDisplay;\nvar _c;\n$RefreshReg$(_c, \"AchievementDisplay\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AchievementDisplay","achievement","userAchievement","compact","showAllAchievements","token","_s","achievements","setAchievements","loading","setLoading","filter","setFilter","fetchAchievements","url","response","fetch","headers","ok","data","json","error","console","getRarityColor","rarity","colors","common","rare","epic","legendary","getRarityName","names","formatProgress","current","target","getProgressPercentage","Math","min","isCompleted","userAch","status","completedAt","formatDate","dateString","Date","toLocaleDateString","completed","progress","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","name","description","style","width","backgroundColor","color","longDescription","xpReward","points","round","onClick","length","map","index","_userAch$achievement","id","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/msa/frontend/src/components/AchievementDisplay.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/AchievementDisplay.css';\r\n\r\nconst AchievementDisplay = ({ \r\n    achievement, \r\n    userAchievement = null, \r\n    compact = false, \r\n    showAllAchievements = false,\r\n    token = null \r\n}) => {\r\n    const [achievements, setAchievements] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [filter, setFilter] = useState('all');\r\n\r\n    useEffect(() => {\r\n        if (showAllAchievements && token) {\r\n            fetchAchievements();\r\n        }\r\n    }, [showAllAchievements, token, filter]);\r\n\r\n    const fetchAchievements = async () => {\r\n        setLoading(true);\r\n        try {\r\n            let url = 'http://localhost:5000/api/gamification/achievements';\r\n            if (filter !== 'all') {\r\n                url += `?status=${filter}`;\r\n            }\r\n\r\n            const response = await fetch(url, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setAchievements(data.data || []);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching achievements:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const getRarityColor = (rarity) => {\r\n        const colors = {\r\n            common: '#8B8680',\r\n            rare: '#2196F3',\r\n            epic: '#9C27B0',\r\n            legendary: '#FF9800'\r\n        };\r\n        return colors[rarity] || colors.common;\r\n    };\r\n\r\n    const getRarityName = (rarity) => {\r\n        const names = {\r\n            common: 'Common',\r\n            rare: 'Rare',\r\n            epic: 'Epic',\r\n            legendary: 'Legendary'\r\n        };\r\n        return names[rarity] || 'Common';\r\n    };\r\n\r\n    const formatProgress = (current, target) => {\r\n        if (target <= 1) return `${current >= target ? 'Complete' : 'Incomplete'}`;\r\n        return `${current}/${target}`;\r\n    };\r\n\r\n    const getProgressPercentage = (current, target) => {\r\n        return Math.min((current / target) * 100, 100);\r\n    };\r\n\r\n    const isCompleted = (userAch) => {\r\n        return userAch?.status === 'completed' || userAch?.completedAt;\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        return new Date(dateString).toLocaleDateString();\r\n    };\r\n\r\n    // Single achievement display\r\n    if (!showAllAchievements && achievement) {\r\n        const completed = isCompleted(userAchievement);\r\n        const progress = userAchievement?.progress || { current: 0, target: 1 };\r\n\r\n        if (compact) {\r\n            return (\r\n                <div className={`achievement-compact ${completed ? 'completed' : 'incomplete'}`}>\r\n                    <div className=\"achievement-icon\">{achievement.icon}</div>\r\n                    <div className=\"achievement-info\">\r\n                        <h4 className=\"achievement-name\">{achievement.name}</h4>\r\n                        <p className=\"achievement-description\">{achievement.description}</p>\r\n                        {!completed && (\r\n                            <div className=\"progress-bar\">\r\n                                <div \r\n                                    className=\"progress-fill\" \r\n                                    style={{ \r\n                                        width: `${getProgressPercentage(progress.current, progress.target)}%`,\r\n                                        backgroundColor: getRarityColor(achievement.rarity)\r\n                                    }}\r\n                                ></div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"achievement-status\">\r\n                        {completed ? (\r\n                            <span className=\"completed-badge\">✓</span>\r\n                        ) : (\r\n                            <span className=\"progress-text\">{formatProgress(progress.current, progress.target)}</span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className={`achievement-card ${completed ? 'completed' : 'incomplete'}`}>\r\n                <div className=\"achievement-header\">\r\n                    <div className=\"achievement-icon-large\">{achievement.icon}</div>\r\n                    <div className=\"achievement-meta\">\r\n                        <h3 className=\"achievement-title\">{achievement.name}</h3>\r\n                        <p className=\"achievement-desc\">{achievement.description}</p>\r\n                        <span \r\n                            className=\"achievement-rarity\"\r\n                            style={{ color: getRarityColor(achievement.rarity) }}\r\n                        >\r\n                            {getRarityName(achievement.rarity)}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"achievement-details\">\r\n                    {achievement.longDescription && (\r\n                        <p className=\"long-description\">{achievement.longDescription}</p>\r\n                    )}\r\n\r\n                    <div className=\"achievement-rewards\">\r\n                        {achievement.xpReward > 0 && (\r\n                            <div className=\"reward-item\">\r\n                                <span className=\"reward-icon\">⭐</span>\r\n                                <span className=\"reward-text\">+{achievement.xpReward} XP</span>\r\n                            </div>\r\n                        )}\r\n                        {achievement.points > 0 && (\r\n                            <div className=\"reward-item\">\r\n                                <span className=\"reward-icon\">💎</span>\r\n                                <span className=\"reward-text\">+{achievement.points} Points</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {!completed ? (\r\n                        <div className=\"achievement-progress\">\r\n                            <div className=\"progress-header\">\r\n                                <span className=\"progress-label\">Progress</span>\r\n                                <span className=\"progress-numbers\">{formatProgress(progress.current, progress.target)}</span>\r\n                            </div>\r\n                            <div className=\"progress-bar-container\">\r\n                                <div className=\"progress-bar\">\r\n                                    <div \r\n                                        className=\"progress-fill\" \r\n                                        style={{ \r\n                                            width: `${getProgressPercentage(progress.current, progress.target)}%`,\r\n                                            backgroundColor: getRarityColor(achievement.rarity)\r\n                                        }}\r\n                                    ></div>\r\n                                </div>\r\n                                <span className=\"progress-percentage\">\r\n                                    {Math.round(getProgressPercentage(progress.current, progress.target))}%\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"achievement-completed\">\r\n                            <div className=\"completed-info\">\r\n                                <span className=\"completed-icon\">🎉</span>\r\n                                <span className=\"completed-text\">\r\n                                    Completed on {userAchievement?.completedAt ? formatDate(userAchievement.completedAt) : 'Unknown'}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // All achievements display\r\n    if (showAllAchievements) {\r\n        return (\r\n            <div className=\"achievements-container\">\r\n                <div className=\"achievements-header\">\r\n                    <h2>🏆 Your Achievements</h2>\r\n                    <div className=\"achievements-filters\">\r\n                        <button \r\n                            className={`filter-btn ${filter === 'all' ? 'active' : ''}`}\r\n                            onClick={() => setFilter('all')}\r\n                        >\r\n                            All\r\n                        </button>\r\n                        <button \r\n                            className={`filter-btn ${filter === 'completed' ? 'active' : ''}`}\r\n                            onClick={() => setFilter('completed')}\r\n                        >\r\n                            Completed\r\n                        </button>\r\n                        <button \r\n                            className={`filter-btn ${filter === 'in_progress' ? 'active' : ''}`}\r\n                            onClick={() => setFilter('in_progress')}\r\n                        >\r\n                            In Progress\r\n                        </button>\r\n                        <button \r\n                            className={`filter-btn ${filter === 'locked' ? 'active' : ''}`}\r\n                            onClick={() => setFilter('locked')}\r\n                        >\r\n                            Locked\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {loading ? (\r\n                    <div className=\"achievements-loading\">\r\n                        <div className=\"loading-spinner\"></div>\r\n                        <p>Loading achievements...</p>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"achievements-grid\">\r\n                        {achievements.length === 0 ? (\r\n                            <div className=\"no-achievements\">\r\n                                <h3>No achievements found</h3>\r\n                                <p>Start playing games to unlock achievements!</p>\r\n                            </div>\r\n                        ) : (\r\n                            achievements.map((userAch, index) => (\r\n                                <AchievementDisplay\r\n                                    key={userAch.achievement?.id || index}\r\n                                    achievement={userAch.achievement}\r\n                                    userAchievement={userAch}\r\n                                    compact={false}\r\n                                />\r\n                            ))\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nexport default AchievementDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}