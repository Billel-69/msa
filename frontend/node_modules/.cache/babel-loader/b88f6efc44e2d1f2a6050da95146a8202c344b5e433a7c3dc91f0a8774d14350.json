{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\msa\\\\frontend\\\\src\\\\components\\\\QuizGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './QuizGame.css';\nimport { useAuth } from '../context/AuthContext';\nimport { FaTrophy, FaGamepad, FaClock, FaArrowRight, FaRedo } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuizGame = () => {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const [currentQuiz, setCurrentQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [gameState, setGameState] = useState('start'); // start, playing, results\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [answered, setAnswered] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(90); // 90 seconds per quiz\n  const [showExplanation, setShowExplanation] = useState(false);\n  const {\n    token\n  } = useAuth();\n  useEffect(() => {\n    const fetchQuizzes = async () => {\n      if (!token) return;\n      try {\n        const res = await axios.get('http://localhost:5000/api/quizzes', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setQuizzes(res.data);\n        if (res.data.length > 0) {\n          setCurrentQuiz(res.data[0]);\n        }\n      } catch (err) {\n        console.error('Error fetching questions:', err);\n      }\n    };\n    fetchQuizzes();\n  }, [token]);\n  useEffect(() => {\n    let timer;\n    if (gameState === 'playing' && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            endGame();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [gameState, timeLeft]);\n  const startGame = () => {\n    setGameState('playing');\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(90);\n    setShowScore(false);\n    setSelectedAnswer(null);\n    setAnswered(false);\n    setShowExplanation(false);\n  };\n  const handleAnswerOptionClick = selectedIndex => {\n    if (answered) return;\n    setSelectedAnswer(selectedIndex);\n    setAnswered(true);\n\n    // Check if answer is correct and update score\n    if (selectedIndex === currentQuiz.questions[currentQuestionIndex].correctOption) {\n      setScore(score + 1);\n    }\n\n    // Show explanation\n    setShowExplanation(true);\n  };\n  const nextQuestion = () => {\n    const nextIndex = currentQuestionIndex + 1;\n    if (nextIndex < currentQuiz.questions.length) {\n      setCurrentQuestionIndex(nextIndex);\n      setSelectedAnswer(null);\n      setAnswered(false);\n      setShowExplanation(false);\n    } else {\n      endGame();\n    }\n  };\n  const endGame = () => {\n    setGameState('results');\n    setShowScore(true);\n  };\n  const restartGame = () => {\n    setGameState('start');\n  };\n  if (!currentQuiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-game-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-icon\",\n          children: /*#__PURE__*/_jsxDEV(FaGamepad, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chargement du Quiz...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pr\\xE9paration des questions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Score percentage for results page\n  const scorePercentage = score / currentQuiz.questions.length * 100;\n\n  // Progress percentage for progress bar\n  const progressPercentage = currentQuestionIndex / currentQuiz.questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"quiz-title\",\n        children: \"Duel de Connaissances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quiz-subtitle\",\n        children: \"Teste tes connaissances et gagne des r\\xE9compenses !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), gameState === 'start' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-start-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-icon\",\n        children: /*#__PURE__*/_jsxDEV(FaGamepad, {\n          className: \"icon-pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pr\\xEAt pour le d\\xE9fi ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"game-description\",\n        children: [\"Teste tes connaissances avec ce quiz interactif !\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 74\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [currentQuiz.questions.length, \" questions \\u2022 90 secondes \\u2022 Bonne chance !\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        onClick: startGame,\n        children: [\"Commencer l'aventure ! \", /*#__PURE__*/_jsxDEV(FaArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-number\",\n          children: [\"Question \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: currentQuestionIndex + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 38\n          }, this), \"/\", currentQuiz.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz-progress-fill\",\n            style: {\n              width: `${progressPercentage}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `quiz-timer ${timeLeft <= 10 ? 'timer-warning' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(FaClock, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), \" \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-question-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-objective-tag\",\n          children: currentQuiz.questions[currentQuestionIndex].subject || \"Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-question-text\",\n          children: currentQuiz.questions[currentQuestionIndex].questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-options-grid\",\n          children: currentQuiz.questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `quiz-option-button \n                                        ${selectedAnswer === index ? 'selected' : ''}\n                                        ${answered && index === currentQuiz.questions[currentQuestionIndex].correctOption ? 'correct' : ''}\n                                        ${answered && selectedAnswer === index && index !== currentQuiz.questions[currentQuestionIndex].correctOption ? 'incorrect' : ''}\n                                    `,\n            onClick: () => handleAnswerOptionClick(index),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quiz-option-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"quiz-option-label\",\n                children: String.fromCharCode(65 + index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), showExplanation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-explanation\",\n          children: currentQuiz.questions[currentQuestionIndex].explanation || \"La réponse est correcte !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }, this), answered && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"quiz-next-button\",\n          onClick: nextQuestion,\n          children: [currentQuestionIndex < currentQuiz.questions.length - 1 ? 'Question suivante' : 'Voir les résultats', /*#__PURE__*/_jsxDEV(FaArrowRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), gameState === 'results' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-results-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-trophy\",\n        children: /*#__PURE__*/_jsxDEV(FaTrophy, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-final-score\",\n        children: [score, \"/\", currentQuiz.questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-score-message\",\n        children: scorePercentage >= 90 ? 'Extraordinaire ! Tu maîtrises parfaitement le sujet !' : scorePercentage >= 75 ? 'Excellent travail ! Continue comme ça !' : scorePercentage >= 50 ? 'Bon travail ! Il y a encore de la place pour progresser.' : 'Continue à t\\'entraîner, tu t\\'amélioreras !'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"quiz-restart-button\",\n        onClick: restartGame,\n        children: [/*#__PURE__*/_jsxDEV(FaRedo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this), \" Refaire le quiz\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n_s(QuizGame, \"Ur3PKdIdK07BU/IW91Jfn8+m988=\", false, function () {\n  return [useAuth];\n});\n_c = QuizGame;\nexport default QuizGame;\nvar _c;\n$RefreshReg$(_c, \"QuizGame\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","FaTrophy","FaGamepad","FaClock","FaArrowRight","FaRedo","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizGame","_s","quizzes","setQuizzes","currentQuiz","setCurrentQuiz","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showScore","setShowScore","gameState","setGameState","selectedAnswer","setSelectedAnswer","answered","setAnswered","timeLeft","setTimeLeft","showExplanation","setShowExplanation","token","fetchQuizzes","res","get","headers","Authorization","data","length","err","console","error","timer","setInterval","prevTime","clearInterval","endGame","startGame","handleAnswerOptionClick","selectedIndex","questions","correctOption","nextQuestion","nextIndex","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","scorePercentage","progressPercentage","onClick","style","width","subject","questionText","options","map","option","index","String","fromCharCode","explanation","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/msa/frontend/src/components/QuizGame.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './QuizGame.css';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { FaTrophy, FaGamepad, FaClock, FaArrowRight, FaRedo } from 'react-icons/fa';\r\n\r\nconst QuizGame = () => {\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    const [currentQuiz, setCurrentQuiz] = useState(null);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [gameState, setGameState] = useState('start'); // start, playing, results\r\n    const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n    const [answered, setAnswered] = useState(false);\r\n    const [timeLeft, setTimeLeft] = useState(90); // 90 seconds per quiz\r\n    const [showExplanation, setShowExplanation] = useState(false);\r\n    \r\n    const { token } = useAuth();\r\n\r\n    useEffect(() => {\r\n        const fetchQuizzes = async () => {\r\n            if (!token) return;\r\n            try {\r\n                const res = await axios.get('http://localhost:5000/api/quizzes', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n                setQuizzes(res.data);\r\n                if (res.data.length > 0) {\r\n                    setCurrentQuiz(res.data[0]);\r\n                }\r\n            } catch (err) {\r\n                console.error('Error fetching questions:', err);\r\n            }\r\n        };\r\n        fetchQuizzes();\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        let timer;\r\n        if (gameState === 'playing' && timeLeft > 0) {\r\n            timer = setInterval(() => {\r\n                setTimeLeft((prevTime) => {\r\n                    if (prevTime <= 1) {\r\n                        clearInterval(timer);\r\n                        endGame();\r\n                        return 0;\r\n                    }\r\n                    return prevTime - 1;\r\n                });\r\n            }, 1000);\r\n        }\r\n        return () => clearInterval(timer);\r\n    }, [gameState, timeLeft]);\r\n\r\n    const startGame = () => {\r\n        setGameState('playing');\r\n        setCurrentQuestionIndex(0);\r\n        setScore(0);\r\n        setTimeLeft(90);\r\n        setShowScore(false);\r\n        setSelectedAnswer(null);\r\n        setAnswered(false);\r\n        setShowExplanation(false);\r\n    };\r\n\r\n    const handleAnswerOptionClick = (selectedIndex) => {\r\n        if (answered) return;\r\n        \r\n        setSelectedAnswer(selectedIndex);\r\n        setAnswered(true);\r\n        \r\n        // Check if answer is correct and update score\r\n        if (selectedIndex === currentQuiz.questions[currentQuestionIndex].correctOption) {\r\n            setScore(score + 1);\r\n        }\r\n        \r\n        // Show explanation\r\n        setShowExplanation(true);\r\n    };\r\n\r\n    const nextQuestion = () => {\r\n        const nextIndex = currentQuestionIndex + 1;\r\n        if (nextIndex < currentQuiz.questions.length) {\r\n            setCurrentQuestionIndex(nextIndex);\r\n            setSelectedAnswer(null);\r\n            setAnswered(false);\r\n            setShowExplanation(false);\r\n        } else {\r\n            endGame();\r\n        }\r\n    };\r\n\r\n    const endGame = () => {\r\n        setGameState('results');\r\n        setShowScore(true);\r\n    };\r\n\r\n    const restartGame = () => {\r\n        setGameState('start');\r\n    };\r\n\r\n    if (!currentQuiz) {\r\n        return (\r\n            <div className=\"quiz-game-container\">\r\n                <div className=\"loading-state\">\r\n                    <div className=\"loading-icon\">\r\n                        <FaGamepad />\r\n                    </div>\r\n                    <h2>Chargement du Quiz...</h2>\r\n                    <p>Préparation des questions...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Score percentage for results page\r\n    const scorePercentage = (score / currentQuiz.questions.length) * 100;\r\n    \r\n    // Progress percentage for progress bar\r\n    const progressPercentage = ((currentQuestionIndex) / currentQuiz.questions.length) * 100;\r\n\r\n    return (\r\n        <div className=\"quiz-game-container\">\r\n            {/* Header */}\r\n            <div className=\"quiz-header\">\r\n                <h1 className=\"quiz-title\">Duel de Connaissances</h1>\r\n                <p className=\"quiz-subtitle\">Teste tes connaissances et gagne des récompenses !</p>\r\n            </div>\r\n\r\n            {gameState === 'start' && (\r\n                <div className=\"quiz-start-screen\">\r\n                    <div className=\"start-icon\">\r\n                        <FaGamepad className=\"icon-pulse\" />\r\n                    </div>\r\n                    <h2>Prêt pour le défi ?</h2>\r\n                    <p className=\"game-description\">\r\n                        Teste tes connaissances avec ce quiz interactif !<br />\r\n                        <strong>{currentQuiz.questions.length} questions • 90 secondes • Bonne chance !</strong>\r\n                    </p>\r\n                    <button className=\"start-button\" onClick={startGame}>\r\n                        Commencer l'aventure ! <FaArrowRight />\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {gameState === 'playing' && (\r\n                <>\r\n                    {/* Game Info Bar */}\r\n                    <div className=\"quiz-game-info\">\r\n                        <div className=\"question-number\">\r\n                            Question <span>{currentQuestionIndex + 1}</span>/{currentQuiz.questions.length}\r\n                        </div>\r\n                        <div className=\"quiz-progress-bar\">\r\n                            <div \r\n                                className=\"quiz-progress-fill\" \r\n                                style={{ width: `${progressPercentage}%` }}\r\n                            ></div>\r\n                        </div>\r\n                        <div className={`quiz-timer ${timeLeft <= 10 ? 'timer-warning' : ''}`}>\r\n                            <FaClock /> {timeLeft}s\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Question Card */}\r\n                    <div className=\"quiz-question-card\">\r\n                        <div className=\"quiz-objective-tag\">\r\n                            {currentQuiz.questions[currentQuestionIndex].subject || \"Question\"}\r\n                        </div>\r\n                        <div className=\"quiz-question-text\">\r\n                            {currentQuiz.questions[currentQuestionIndex].questionText}\r\n                        </div>\r\n                        <div className=\"quiz-options-grid\">\r\n                            {currentQuiz.questions[currentQuestionIndex].options.map((option, index) => (\r\n                                <button \r\n                                    key={index} \r\n                                    className={`quiz-option-button \r\n                                        ${selectedAnswer === index ? 'selected' : ''}\r\n                                        ${answered && index === currentQuiz.questions[currentQuestionIndex].correctOption ? 'correct' : ''}\r\n                                        ${answered && selectedAnswer === index && index !== currentQuiz.questions[currentQuestionIndex].correctOption ? 'incorrect' : ''}\r\n                                    `}\r\n                                    onClick={() => handleAnswerOptionClick(index)}\r\n                                >\r\n                                    <div className=\"quiz-option-content\">\r\n                                        <div className=\"quiz-option-label\">{String.fromCharCode(65 + index)}</div>\r\n                                        <span>{option}</span>\r\n                                    </div>\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n\r\n                        {showExplanation && (\r\n                            <div className=\"quiz-explanation\">\r\n                                {currentQuiz.questions[currentQuestionIndex].explanation || \"La réponse est correcte !\"}\r\n                            </div>\r\n                        )}\r\n\r\n                        {answered && (\r\n                            <button \r\n                                className=\"quiz-next-button\" \r\n                                onClick={nextQuestion}\r\n                            >\r\n                                {currentQuestionIndex < currentQuiz.questions.length - 1 \r\n                                    ? 'Question suivante' \r\n                                    : 'Voir les résultats'}\r\n                                <FaArrowRight />\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            {gameState === 'results' && (\r\n                <div className=\"quiz-results-screen\">\r\n                    <div className=\"results-trophy\">\r\n                        <FaTrophy />\r\n                    </div>\r\n                    <div className=\"quiz-final-score\">\r\n                        {score}/{currentQuiz.questions.length}\r\n                    </div>\r\n                    <div className=\"quiz-score-message\">\r\n                        {scorePercentage >= 90 ? 'Extraordinaire ! Tu maîtrises parfaitement le sujet !' :\r\n                         scorePercentage >= 75 ? 'Excellent travail ! Continue comme ça !' :\r\n                         scorePercentage >= 50 ? 'Bon travail ! Il y a encore de la place pour progresser.' :\r\n                         'Continue à t\\'entraîner, tu t\\'amélioreras !'}\r\n                    </div>\r\n                    <button className=\"quiz-restart-button\" onClick={restartGame}>\r\n                        <FaRedo /> Refaire le quiz\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuizGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}