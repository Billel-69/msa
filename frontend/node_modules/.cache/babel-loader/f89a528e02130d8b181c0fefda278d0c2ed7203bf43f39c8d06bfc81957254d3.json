{"ast":null,"code":"/**\r\n * @file errorHandler.js\r\n * @description Centralized error handling utilities for the frontend\r\n */\n\n// Standard error message for user display\nexport const DEFAULT_ERROR_MESSAGE = \"Une erreur s'est produite. Veuillez réessayer plus tard.\";\n\n/**\r\n * Parse API error responses and return user-friendly messages\r\n * @param {Error} error - The error object from axios or fetch\r\n * @param {string} fallbackMessage - Optional custom fallback message\r\n * @returns {string} User-friendly error message\r\n */\nexport const parseApiError = (error, fallbackMessage = DEFAULT_ERROR_MESSAGE) => {\n  var _error$response, _error$response$data, _error$response2, _error$response3;\n  // Handle axios error responses\n  if (error !== null && error !== void 0 && (_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n    return error.response.data.error;\n  }\n\n  // Handle network errors\n  if ((error === null || error === void 0 ? void 0 : error.message) === 'Network Error') {\n    return 'Erreur de connexion au serveur. Veuillez vérifier votre connexion internet.';\n  }\n\n  // Handle authentication errors\n  if ((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    return 'Session expirée. Veuillez vous reconnecter.';\n  }\n\n  // Handle permission errors\n  if ((error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 403) {\n    return \"Vous n'avez pas les permissions nécessaires pour effectuer cette action.\";\n  }\n\n  // Log the actual error for debugging but return user-friendly message\n  console.error('Application error:', error);\n  return fallbackMessage;\n};\n\n/**\r\n * Handle session expiration by redirecting to login\r\n * @param {Error} error - The error object from axios or fetch\r\n * @returns {boolean} True if handled as session expiration\r\n */\nexport const handleSessionExpiration = error => {\n  var _error$response4;\n  if ((error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n    // Clear stored authentication data\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Redirect to login page\n    window.location.href = '/connexion';\n    return true;\n  }\n  return false;\n};\n\n/**\r\n * Format validation errors from backend into user-friendly format\r\n * @param {Object} validationErrors - Validation errors object from backend\r\n * @returns {Object} Formatted validation errors\r\n */\nexport const formatValidationErrors = validationErrors => {\n  const formattedErrors = {};\n  if (validationErrors && typeof validationErrors === 'object') {\n    Object.keys(validationErrors).forEach(field => {\n      formattedErrors[field] = validationErrors[field];\n    });\n  }\n  return formattedErrors;\n};","map":{"version":3,"names":["DEFAULT_ERROR_MESSAGE","parseApiError","error","fallbackMessage","_error$response","_error$response$data","_error$response2","_error$response3","response","data","message","status","console","handleSessionExpiration","_error$response4","localStorage","removeItem","window","location","href","formatValidationErrors","validationErrors","formattedErrors","Object","keys","forEach","field"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/msa/frontend/src/utils/errorHandler.js"],"sourcesContent":["/**\r\n * @file errorHandler.js\r\n * @description Centralized error handling utilities for the frontend\r\n */\r\n\r\n// Standard error message for user display\r\nexport const DEFAULT_ERROR_MESSAGE = \"Une erreur s'est produite. Veuillez réessayer plus tard.\";\r\n\r\n/**\r\n * Parse API error responses and return user-friendly messages\r\n * @param {Error} error - The error object from axios or fetch\r\n * @param {string} fallbackMessage - Optional custom fallback message\r\n * @returns {string} User-friendly error message\r\n */\r\nexport const parseApiError = (error, fallbackMessage = DEFAULT_ERROR_MESSAGE) => {\r\n  // Handle axios error responses\r\n  if (error?.response?.data?.error) {\r\n    return error.response.data.error;\r\n  }\r\n  \r\n  // Handle network errors\r\n  if (error?.message === 'Network Error') {\r\n    return 'Erreur de connexion au serveur. Veuillez vérifier votre connexion internet.';\r\n  }\r\n  \r\n  // Handle authentication errors\r\n  if (error?.response?.status === 401) {\r\n    return 'Session expirée. Veuillez vous reconnecter.';\r\n  }\r\n  \r\n  // Handle permission errors\r\n  if (error?.response?.status === 403) {\r\n    return \"Vous n'avez pas les permissions nécessaires pour effectuer cette action.\";\r\n  }\r\n  \r\n  // Log the actual error for debugging but return user-friendly message\r\n  console.error('Application error:', error);\r\n  return fallbackMessage;\r\n};\r\n\r\n/**\r\n * Handle session expiration by redirecting to login\r\n * @param {Error} error - The error object from axios or fetch\r\n * @returns {boolean} True if handled as session expiration\r\n */\r\nexport const handleSessionExpiration = (error) => {\r\n  if (error?.response?.status === 401) {\r\n    // Clear stored authentication data\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    \r\n    // Redirect to login page\r\n    window.location.href = '/connexion';\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Format validation errors from backend into user-friendly format\r\n * @param {Object} validationErrors - Validation errors object from backend\r\n * @returns {Object} Formatted validation errors\r\n */\r\nexport const formatValidationErrors = (validationErrors) => {\r\n  const formattedErrors = {};\r\n  \r\n  if (validationErrors && typeof validationErrors === 'object') {\r\n    Object.keys(validationErrors).forEach(field => {\r\n      formattedErrors[field] = validationErrors[field];\r\n    });\r\n  }\r\n  \r\n  return formattedErrors;\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMA,qBAAqB,GAAG,0DAA0D;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAEC,eAAe,GAAGH,qBAAqB,KAAK;EAAA,IAAAI,eAAA,EAAAC,oBAAA,EAAAC,gBAAA,EAAAC,gBAAA;EAC/E;EACA,IAAIL,KAAK,aAALA,KAAK,gBAAAE,eAAA,GAALF,KAAK,CAAEM,QAAQ,cAAAJ,eAAA,gBAAAC,oBAAA,GAAfD,eAAA,CAAiBK,IAAI,cAAAJ,oBAAA,eAArBA,oBAAA,CAAuBH,KAAK,EAAE;IAChC,OAAOA,KAAK,CAACM,QAAQ,CAACC,IAAI,CAACP,KAAK;EAClC;;EAEA;EACA,IAAI,CAAAA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEQ,OAAO,MAAK,eAAe,EAAE;IACtC,OAAO,6EAA6E;EACtF;;EAEA;EACA,IAAI,CAAAR,KAAK,aAALA,KAAK,wBAAAI,gBAAA,GAALJ,KAAK,CAAEM,QAAQ,cAAAF,gBAAA,uBAAfA,gBAAA,CAAiBK,MAAM,MAAK,GAAG,EAAE;IACnC,OAAO,6CAA6C;EACtD;;EAEA;EACA,IAAI,CAAAT,KAAK,aAALA,KAAK,wBAAAK,gBAAA,GAALL,KAAK,CAAEM,QAAQ,cAAAD,gBAAA,uBAAfA,gBAAA,CAAiBI,MAAM,MAAK,GAAG,EAAE;IACnC,OAAO,0EAA0E;EACnF;;EAEA;EACAC,OAAO,CAACV,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;EAC1C,OAAOC,eAAe;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMU,uBAAuB,GAAIX,KAAK,IAAK;EAAA,IAAAY,gBAAA;EAChD,IAAI,CAAAZ,KAAK,aAALA,KAAK,wBAAAY,gBAAA,GAALZ,KAAK,CAAEM,QAAQ,cAAAM,gBAAA,uBAAfA,gBAAA,CAAiBH,MAAM,MAAK,GAAG,EAAE;IACnC;IACAI,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;;IAE/B;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,YAAY;IACnC,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,sBAAsB,GAAIC,gBAAgB,IAAK;EAC1D,MAAMC,eAAe,GAAG,CAAC,CAAC;EAE1B,IAAID,gBAAgB,IAAI,OAAOA,gBAAgB,KAAK,QAAQ,EAAE;IAC5DE,MAAM,CAACC,IAAI,CAACH,gBAAgB,CAAC,CAACI,OAAO,CAACC,KAAK,IAAI;MAC7CJ,eAAe,CAACI,KAAK,CAAC,GAAGL,gBAAgB,CAACK,KAAK,CAAC;IAClD,CAAC,CAAC;EACJ;EAEA,OAAOJ,eAAe;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}