{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\GitHub\\\\msa\\\\frontend\\\\src\\\\pages\\\\MazeGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nimport { FaArrowLeft, FaPlay } from 'react-icons/fa';\nimport '../styles/MazeGame.css';\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CELL_SIZE = 50;\nconst MAZE_WIDTH = 18;\nconst MAZE_HEIGHT = 10;\nconst MazeGame = () => {\n  _s();\n  var _subjectOptions$find;\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const {\n    token\n  } = useAuth();\n\n  // Canvas refs\n  const canvasRef = useRef(null);\n  const mazeCanvasRef = useRef(null); // Offscreen canvas for static maze\n  const mazeGeneratedRef = useRef(false); // Track if maze has been generated\n\n  // Game state\n  const [gameState, setGameState] = useState('loading'); // loading, playing, challenge, victory, gameover, paused\n  const [selectedSubject, setSelectedSubject] = useState(searchParams.get('subject') || 'maths');\n  const [selectedLevel, setSelectedLevel] = useState(searchParams.get('niveau') || '3e');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Game data\n  const [score, setScore] = useState(0);\n  const [energy, setEnergy] = useState(100);\n  const [level] = useState(1);\n  const [startTime, setStartTime] = useState(null);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [totalAnswers, setTotalAnswers] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showHint, setShowHint] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [xpEarned, setXpEarned] = useState(0);\n\n  // Game objects\n  // Calculate starting position based on cell size\n  const startX = 1.5 * CELL_SIZE; // Column 1, centered\n  const startY = 5 * CELL_SIZE; // Row 5, centered\n\n  const [player, setPlayer] = useState({\n    x: startX,\n    y: startY,\n    width: 30,\n    height: 30,\n    speed: 3,\n    dx: 0,\n    dy: 0,\n    hasShield: false,\n    isSprinting: false\n  });\n  const [maze, setMaze] = useState([]);\n  const [knowledgeGates, setKnowledgeGates] = useState([]);\n  const [collectibles, setCollectibles] = useState([]);\n  const [answeredGates, setAnsweredGates] = useState([]);\n\n  // Abilities\n  const [abilities, setAbilities] = useState({\n    sprint: {\n      cooldown: 0,\n      duration: 0,\n      cost: 10\n    },\n    hint: {\n      cooldown: 0,\n      uses: 3,\n      cost: 0\n    },\n    shield: {\n      cooldown: 0,\n      duration: 0,\n      cost: 20\n    },\n    freeze: {\n      cooldown: 0,\n      duration: 0,\n      cost: 30\n    }\n  });\n\n  // Subject options\n  const subjectOptions = [{\n    value: 'maths',\n    label: 'Mathématiques'\n  }, {\n    value: 'sciences',\n    label: 'Sciences'\n  }, {\n    value: 'francais',\n    label: 'Français'\n  }, {\n    value: 'histoire',\n    label: 'Histoire-Géo'\n  }, {\n    value: 'anglais',\n    label: 'Anglais'\n  }];\n  const levelOptions = [{\n    value: '3e',\n    label: '3e'\n  }, {\n    value: '2nde',\n    label: '2nde'\n  }, {\n    value: '1ere',\n    label: '1ère'\n  }, {\n    value: 'term',\n    label: 'Terminale'\n  }];\n\n  // Generate maze\n  const generateMaze = useCallback(() => {\n    const newMaze = [];\n\n    // Create a simple maze layout\n    for (let y = 0; y < MAZE_HEIGHT; y++) {\n      newMaze[y] = [];\n      for (let x = 0; x < MAZE_WIDTH; x++) {\n        // Create outer walls\n        if (x === 0 || x === MAZE_WIDTH - 1 || y === 0 || y === MAZE_HEIGHT - 1) {\n          newMaze[y][x] = 1; // Wall\n        } else {\n          newMaze[y][x] = 0; // Path by default\n        }\n      }\n    }\n\n    // Add some internal walls to create a maze-like structure\n    // Horizontal walls\n    for (let x = 2; x < MAZE_WIDTH - 2; x++) {\n      if (x !== 8 && x !== 9) {\n        // Leave gaps\n        newMaze[2][x] = 1;\n        newMaze[7][x] = 1;\n      }\n    }\n\n    // Vertical walls\n    for (let y = 2; y < MAZE_HEIGHT - 2; y++) {\n      if (y !== 4 && y !== 5) {\n        // Leave gaps\n        newMaze[y][4] = 1;\n        newMaze[y][13] = 1;\n      }\n    }\n\n    // Add some random walls\n    for (let i = 0; i < 15; i++) {\n      let x = Math.floor(Math.random() * (MAZE_WIDTH - 4)) + 2;\n      let y = Math.floor(Math.random() * (MAZE_HEIGHT - 4)) + 2;\n      if (!(x === 1 && y === 5)) {\n        // Don't block start\n        newMaze[y][x] = 1;\n      }\n    }\n\n    // Ensure start and end are clear\n    newMaze[5][1] = 0; // Start\n    newMaze[5][2] = 0; // Clear path from start\n    newMaze[5][MAZE_WIDTH - 2] = 2; // Exit\n    newMaze[5][MAZE_WIDTH - 3] = 0; // Clear path to exit\n\n    setMaze(newMaze);\n\n    // Generate knowledge gates\n    const gates = [];\n    const gateCount = 3 + level;\n    for (let i = 0; i < gateCount && i < questions.length; i++) {\n      let x, y;\n      let attempts = 0;\n      do {\n        x = Math.floor(Math.random() * (MAZE_WIDTH - 4)) + 2;\n        y = Math.floor(Math.random() * (MAZE_HEIGHT - 4)) + 2;\n        attempts++;\n      } while ((newMaze[y][x] !== 0 || x === 1 && y === 5) && attempts < 100);\n      if (newMaze[y][x] === 0) {\n        gates.push({\n          x: x * CELL_SIZE + CELL_SIZE / 2,\n          y: y * CELL_SIZE + CELL_SIZE / 2,\n          active: true,\n          question: questions[i]\n        });\n      }\n    }\n    setKnowledgeGates(gates);\n\n    // Generate collectibles\n    const items = [];\n    for (let i = 0; i < 5; i++) {\n      let x, y;\n      let attempts = 0;\n      do {\n        x = Math.floor(Math.random() * (MAZE_WIDTH - 4)) + 2;\n        y = Math.floor(Math.random() * (MAZE_HEIGHT - 4)) + 2;\n        attempts++;\n      } while (newMaze[y][x] !== 0 && attempts < 100);\n      if (newMaze[y][x] === 0) {\n        items.push({\n          x: x * CELL_SIZE + CELL_SIZE / 2,\n          y: y * CELL_SIZE + CELL_SIZE / 2,\n          type: 'energy',\n          value: 20,\n          collected: false\n        });\n      }\n    }\n    setCollectibles(items);\n  }, [level, questions]);\n\n  // Load questions from backend\n  const loadQuestions = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:5000/api/games/2`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        params: {\n          subject: selectedSubject,\n          niveau: selectedLevel,\n          count: 6\n        }\n      });\n      if (response.data.game && response.data.game.questions) {\n        setQuestions(response.data.game.questions);\n      } else {\n        // Fallback questions if API fails\n        setQuestions([{\n          question: \"Combien font 2 + 2 ?\",\n          options: [\"3\", \"4\", \"5\", \"6\"],\n          correctAnswer: \"4\",\n          explanation: \"2 + 2 = 4\"\n        }]);\n      }\n    } catch (err) {\n      console.error('Error loading questions:', err);\n      setError('Erreur lors du chargement des questions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initialize game when component mounts\n  useEffect(() => {\n    const initializeGame = async () => {\n      mazeGeneratedRef.current = false; // Reset maze generation flag\n      await loadQuestions();\n      setGameState('playing');\n      setStartTime(Date.now());\n      setScore(0);\n      setEnergy(100);\n      setCorrectAnswers(0);\n      setTotalAnswers(0);\n      setAnsweredGates([]);\n      setXpEarned(0);\n      setPlayer(prev => ({\n        ...prev,\n        x: startX,\n        y: startY,\n        dx: 0,\n        dy: 0,\n        hasShield: false,\n        isSprinting: false\n      }));\n      setAbilities({\n        sprint: {\n          cooldown: 0,\n          duration: 0,\n          cost: 10\n        },\n        hint: {\n          cooldown: 0,\n          uses: 3,\n          cost: 0\n        },\n        shield: {\n          cooldown: 0,\n          duration: 0,\n          cost: 20\n        },\n        freeze: {\n          cooldown: 0,\n          duration: 0,\n          cost: 30\n        }\n      });\n    };\n    initializeGame();\n  }, [startX, startY]);\n\n  // Save game results to backend\n  const saveGameResults = async () => {\n    try {\n      const gameTime = startTime ? Date.now() - startTime : 0;\n      const accuracy = totalAnswers > 0 ? Math.round(correctAnswers / totalAnswers * 100) : 100;\n      const gameData = {\n        score: score,\n        timeSpent: Math.floor(gameTime / 1000),\n        // Convert to seconds\n        accuracy: accuracy,\n        correctAnswers: correctAnswers,\n        totalAnswers: totalAnswers,\n        xpEarned: xpEarned\n      };\n      console.log('Saving maze game results:', gameData);\n\n      // Get the maze game ID from URL params\n      const gameId = window.location.pathname.split('/').pop();\n      const response = await axios.post(`http://localhost:5000/api/games/${gameId}/results`, gameData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.success) {\n        console.log('Game results saved successfully:', response.data.results);\n      }\n    } catch (error) {\n      console.error('Error saving game results:', error);\n      // Don't block the game if saving fails\n    }\n  };\n\n  // Draw maze to offscreen canvas (only once when maze changes)\n  const renderMazeToOffscreen = useCallback(() => {\n    if (!mazeCanvasRef.current) {\n      mazeCanvasRef.current = document.createElement('canvas');\n      mazeCanvasRef.current.width = MAZE_WIDTH * CELL_SIZE;\n      mazeCanvasRef.current.height = MAZE_HEIGHT * CELL_SIZE;\n    }\n    const ctx = mazeCanvasRef.current.getContext('2d');\n    ctx.fillStyle = '#0a0a0a';\n    ctx.fillRect(0, 0, mazeCanvasRef.current.width, mazeCanvasRef.current.height);\n    for (let y = 0; y < MAZE_HEIGHT; y++) {\n      for (let x = 0; x < MAZE_WIDTH; x++) {\n        const cellX = x * CELL_SIZE;\n        const cellY = y * CELL_SIZE;\n        if (maze[y] && maze[y][x] === 1) {\n          // Wall\n          ctx.fillStyle = '#16213e';\n          ctx.fillRect(cellX, cellY, CELL_SIZE, CELL_SIZE);\n          ctx.strokeStyle = '#0f3460';\n          ctx.strokeRect(cellX, cellY, CELL_SIZE, CELL_SIZE);\n        } else if (maze[y] && maze[y][x] === 2) {\n          // Exit\n          ctx.fillStyle = '#4caf50';\n          ctx.fillRect(cellX, cellY, CELL_SIZE, CELL_SIZE);\n          ctx.fillStyle = '#fff';\n          ctx.font = '24px Arial';\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n          ctx.fillText('🏁', cellX + CELL_SIZE / 2, cellY + CELL_SIZE / 2);\n        }\n      }\n    }\n  }, [maze]);\n\n  // Draw functions\n  const drawMaze = useCallback(ctx => {\n    if (mazeCanvasRef.current) {\n      ctx.drawImage(mazeCanvasRef.current, 0, 0);\n    }\n  }, []);\n  const drawPlayer = useCallback(ctx => {\n    ctx.save();\n    ctx.translate(player.x, player.y);\n\n    // Shield effect\n    if (player.hasShield) {\n      ctx.fillStyle = 'rgba(76, 175, 80, 0.3)';\n      ctx.beginPath();\n      ctx.arc(0, 0, player.width, 0, Math.PI * 2);\n      ctx.fill();\n    }\n\n    // Player body\n    ctx.fillStyle = '#e94560';\n    ctx.fillRect(-player.width / 2, -player.height / 2, player.width, player.height);\n\n    // Player face\n    ctx.fillStyle = '#fff';\n    ctx.font = '20px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText('🎓', 0, 0);\n    ctx.restore();\n  }, [player]);\n  const drawKnowledgeGates = useCallback(ctx => {\n    knowledgeGates.forEach(gate => {\n      if (!gate.active) return;\n      ctx.save();\n      ctx.translate(gate.x, gate.y);\n\n      // Gate glow effect\n      const time = Date.now() / 1000;\n      const glowSize = 20 + Math.sin(time * 2) * 5;\n      const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, glowSize);\n      gradient.addColorStop(0, 'rgba(233, 69, 96, 0.5)');\n      gradient.addColorStop(1, 'rgba(233, 69, 96, 0)');\n      ctx.fillStyle = gradient;\n      ctx.beginPath();\n      ctx.arc(0, 0, glowSize, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Gate body\n      ctx.fillStyle = '#e94560';\n      ctx.fillRect(-20, -20, 40, 40);\n\n      // Gate icon\n      ctx.fillStyle = '#fff';\n      ctx.font = 'bold 24px Arial';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText('?', 0, 0);\n      ctx.restore();\n    });\n  }, [knowledgeGates]);\n  const drawCollectibles = useCallback(ctx => {\n    collectibles.forEach(item => {\n      if (item.collected) return;\n      ctx.save();\n      ctx.translate(item.x, item.y);\n\n      // Rotation animation\n      const time = Date.now() / 1000;\n      ctx.rotate(time);\n\n      // Item glow\n      ctx.fillStyle = 'rgba(255, 217, 61, 0.3)';\n      ctx.beginPath();\n      ctx.arc(0, 0, 15, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Item icon\n      ctx.fillStyle = '#FFD93D';\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText('⚡', 0, 0);\n      ctx.restore();\n    });\n  }, [collectibles]);\n\n  // Handle answer selection\n  const handleAnswerSelect = answerIndex => {\n    if (selectedAnswer !== null) return; // Already answered\n\n    setSelectedAnswer(answerIndex);\n    const isCorrect = currentQuestion.options[answerIndex] === currentQuestion.correctAnswer;\n    setTotalAnswers(prev => prev + 1);\n    if (isCorrect) {\n      setCorrectAnswers(prev => prev + 1);\n      setScore(prev => prev + 100);\n      setEnergy(prev => Math.min(100, prev + 10));\n\n      // Award XP for correct answer (5 XP per correct answer like quiz battle)\n      setXpEarned(prev => prev + 5);\n\n      // Deactivate the gate and mark as answered\n      setKnowledgeGates(prev => prev.map((gate, index) => index === currentQuestion.gateIndex ? {\n        ...gate,\n        active: false\n      } : gate));\n      setAnsweredGates(prev => [...prev, currentQuestion.gateIndex]);\n      setTimeout(() => {\n        setGameState('playing');\n        setCurrentQuestion(null);\n        setSelectedAnswer(null);\n        setShowHint(false);\n        // Clear all key states when returning to playing\n        keysRef.current = {};\n        setPlayer(prev => ({\n          ...prev,\n          dx: 0,\n          dy: 0\n        }));\n      }, 1500);\n    } else {\n      if (!player.hasShield) {\n        setEnergy(prev => {\n          const newEnergy = Math.max(0, prev - 20);\n          if (newEnergy === 0) {\n            // Save results before game over\n            saveGameResults();\n            setGameState('gameover');\n          }\n          return newEnergy;\n        });\n      }\n      setTimeout(() => {\n        if (gameState !== 'gameover') {\n          setGameState('playing');\n          setCurrentQuestion(null);\n          setSelectedAnswer(null);\n          setShowHint(false);\n          // Clear all key states when returning to playing\n          keysRef.current = {};\n          setPlayer(prev => ({\n            ...prev,\n            dx: 0,\n            dy: 0\n          }));\n        }\n      }, 2500);\n    }\n  };\n\n  // Use hint ability\n  const activateHint = () => {\n    if (abilities.hint.uses > 0 && gameState === 'challenge') {\n      setShowHint(true);\n      setAbilities(prev => ({\n        ...prev,\n        hint: {\n          ...prev.hint,\n          uses: prev.hint.uses - 1\n        }\n      }));\n    }\n  };\n\n  // Pause/resume game\n  const [isPaused, setIsPaused] = useState(false);\n  const togglePause = useCallback(() => {\n    if (gameState === 'playing') {\n      setIsPaused(prev => {\n        const newPaused = !prev;\n        if (newPaused) {\n          // Clear key states when pausing\n          keysRef.current = {};\n          setPlayer(prev => ({\n            ...prev,\n            dx: 0,\n            dy: 0\n          }));\n        }\n        isRunningRef.current = !newPaused;\n        return newPaused;\n      });\n    }\n  }, [gameState, isPaused]);\n\n  // Activate ability\n  const activateAbility = abilityName => {\n    if (gameState !== 'playing' && gameState !== 'challenge') return;\n    const ability = abilities[abilityName];\n    switch (abilityName) {\n      case 'sprint':\n        if (ability.cooldown <= 0 && energy >= ability.cost) {\n          setPlayer(prev => ({\n            ...prev,\n            isSprinting: true\n          }));\n          setAbilities(prev => ({\n            ...prev,\n            sprint: {\n              ...prev.sprint,\n              duration: 5000,\n              cooldown: 10000\n            }\n          }));\n          setEnergy(prev => prev - ability.cost);\n        }\n        break;\n      case 'hint':\n        activateHint();\n        break;\n      case 'shield':\n        if (ability.cooldown <= 0 && energy >= ability.cost) {\n          setPlayer(prev => ({\n            ...prev,\n            hasShield: true\n          }));\n          setAbilities(prev => ({\n            ...prev,\n            shield: {\n              ...prev.shield,\n              duration: 10000,\n              cooldown: 20000\n            }\n          }));\n          setEnergy(prev => prev - ability.cost);\n        }\n        break;\n      case 'freeze':\n        if (ability.cooldown <= 0 && energy >= ability.cost && gameState === 'challenge') {\n          // Freeze timer implemented as pausing question timer\n          setAbilities(prev => ({\n            ...prev,\n            freeze: {\n              ...prev.freeze,\n              cooldown: 30000,\n              duration: 5000\n            }\n          }));\n          setEnergy(prev => prev - ability.cost);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Update player movement based on current keys\n  const updateMovement = useCallback(() => {\n    if (gameState !== 'playing' || isPaused) return;\n    let dx = 0;\n    let dy = 0;\n    if (keysRef.current['ArrowLeft'] || keysRef.current['a'] || keysRef.current['A']) dx = -1;\n    if (keysRef.current['ArrowRight'] || keysRef.current['d'] || keysRef.current['D']) dx = 1;\n    if (keysRef.current['ArrowUp'] || keysRef.current['w'] || keysRef.current['W']) dy = -1;\n    if (keysRef.current['ArrowDown'] || keysRef.current['s'] || keysRef.current['S']) dy = 1;\n    setPlayer(prev => ({\n      ...prev,\n      dx,\n      dy\n    }));\n  }, [gameState, isPaused]);\n\n  // Update player position with collision detection\n  const updatePlayer = useCallback(() => {\n    if (player.dx === 0 && player.dy === 0) return;\n    const speed = player.isSprinting ? player.speed * 1.5 : player.speed;\n    const nextX = player.x + player.dx * speed;\n    const nextY = player.y + player.dy * speed;\n\n    // Get player boundaries for next position\n    const playerLeft = nextX - player.width / 2;\n    const playerRight = nextX + player.width / 2;\n    const playerTop = nextY - player.height / 2;\n    const playerBottom = nextY + player.height / 2;\n\n    // Check if the new position would be valid\n    let canMove = true;\n\n    // Check all four corners and center of the player\n    const corners = [{\n      x: playerLeft,\n      y: playerTop\n    }, {\n      x: playerRight,\n      y: playerTop\n    }, {\n      x: playerLeft,\n      y: playerBottom\n    }, {\n      x: playerRight,\n      y: playerBottom\n    }, {\n      x: nextX,\n      y: nextY\n    } // Center point\n    ];\n    for (let corner of corners) {\n      const cellX = Math.floor(corner.x / CELL_SIZE);\n      const cellY = Math.floor(corner.y / CELL_SIZE);\n\n      // Check bounds\n      if (cellX < 0 || cellX >= MAZE_WIDTH || cellY < 0 || cellY >= MAZE_HEIGHT) {\n        canMove = false;\n        break;\n      }\n\n      // Check if it's a wall\n      if (maze[cellY] && maze[cellY][cellX] === 1) {\n        canMove = false;\n        break;\n      }\n    }\n    let newX = player.x;\n    let newY = player.y;\n\n    // Update position if movement is valid\n    if (canMove) {\n      newX = nextX;\n      newY = nextY;\n    } else {\n      // Try to move in only one direction if diagonal movement is blocked\n      if (player.dx !== 0 && player.dy !== 0) {\n        // Try horizontal movement only\n        const horizontalX = player.x + player.dx * speed;\n        let canMoveHorizontal = true;\n        const hCorners = [{\n          x: horizontalX - player.width / 2,\n          y: player.y - player.height / 2\n        }, {\n          x: horizontalX + player.width / 2,\n          y: player.y - player.height / 2\n        }, {\n          x: horizontalX - player.width / 2,\n          y: player.y + player.height / 2\n        }, {\n          x: horizontalX + player.width / 2,\n          y: player.y + player.height / 2\n        }];\n        for (let corner of hCorners) {\n          const cellX = Math.floor(corner.x / CELL_SIZE);\n          const cellY = Math.floor(corner.y / CELL_SIZE);\n          if (cellX < 0 || cellX >= MAZE_WIDTH || cellY < 0 || cellY >= MAZE_HEIGHT || maze[cellY] && maze[cellY][cellX] === 1) {\n            canMoveHorizontal = false;\n            break;\n          }\n        }\n        if (canMoveHorizontal) {\n          newX = horizontalX;\n        } else {\n          // Try vertical movement only\n          const verticalY = player.y + player.dy * speed;\n          let canMoveVertical = true;\n          const vCorners = [{\n            x: player.x - player.width / 2,\n            y: verticalY - player.height / 2\n          }, {\n            x: player.x + player.width / 2,\n            y: verticalY - player.height / 2\n          }, {\n            x: player.x - player.width / 2,\n            y: verticalY + player.height / 2\n          }, {\n            x: player.x + player.width / 2,\n            y: verticalY + player.height / 2\n          }];\n          for (let corner of vCorners) {\n            const cellX = Math.floor(corner.x / CELL_SIZE);\n            const cellY = Math.floor(corner.y / CELL_SIZE);\n            if (cellX < 0 || cellX >= MAZE_WIDTH || cellY < 0 || cellY >= MAZE_HEIGHT || maze[cellY] && maze[cellY][cellX] === 1) {\n              canMoveVertical = false;\n              break;\n            }\n          }\n          if (canMoveVertical) {\n            newY = verticalY;\n          }\n        }\n      }\n    }\n\n    // Update player position if it changed\n    if (newX !== player.x || newY !== player.y) {\n      setPlayer(prev => ({\n        ...prev,\n        x: newX,\n        y: newY\n      }));\n\n      // Check for interactions after moving\n      checkInteractions(newX, newY);\n    }\n  }, [player, maze, MAZE_WIDTH, MAZE_HEIGHT, CELL_SIZE]);\n\n  // Check interactions with gates and collectibles\n  const checkInteractions = useCallback((playerX, playerY) => {\n    // Check knowledge gates\n    knowledgeGates.forEach((gate, index) => {\n      if (gate.active && Math.abs(playerX - gate.x) < 30 && Math.abs(playerY - gate.y) < 30) {\n        setCurrentQuestion({\n          ...gate.question,\n          gateIndex: index\n        });\n        setSelectedAnswer(null);\n        setShowHint(false);\n        setGameState('challenge');\n        setPlayer(prev => ({\n          ...prev,\n          dx: 0,\n          dy: 0\n        }));\n        // Clear all key states when entering challenge\n        keysRef.current = {};\n      }\n    });\n\n    // Check collectibles\n    setCollectibles(prev => prev.map(item => {\n      if (!item.collected && Math.abs(playerX - item.x) < 25 && Math.abs(playerY - item.y) < 25) {\n        setEnergy(prev => Math.min(100, prev + item.value));\n        setScore(prev => prev + 50);\n        // Award small XP bonus for collecting items\n        setXpEarned(prev => prev + 1);\n        return {\n          ...item,\n          collected: true\n        };\n      }\n      return item;\n    }));\n\n    // Check exit\n    const exitX = (MAZE_WIDTH - 2) * CELL_SIZE + CELL_SIZE / 2;\n    const exitY = 5 * CELL_SIZE + CELL_SIZE / 2;\n    if (Math.abs(playerX - exitX) < 30 && Math.abs(playerY - exitY) < 30) {\n      // Check if all knowledge gates have been answered (not just deactivated)\n      if (answeredGates.length >= knowledgeGates.length && knowledgeGates.length > 0) {\n        saveGameResults();\n        setGameState('victory');\n      }\n    }\n  }, [knowledgeGates, MAZE_WIDTH, CELL_SIZE]);\n\n  // Main game loop\n  const gameLoopRef = useRef();\n  const isRunningRef = useRef(false);\n  const gameLoop = useCallback(currentTime => {\n    if (gameState === 'playing' && !isPaused) {\n      updateMovement();\n      updatePlayer();\n\n      // Draw everything\n      const canvas = canvasRef.current;\n      if (canvas) {\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        drawMaze(ctx);\n        drawCollectibles(ctx);\n        drawKnowledgeGates(ctx);\n        drawPlayer(ctx);\n      }\n    }\n    if (isRunningRef.current && !isPaused) {\n      gameLoopRef.current = requestAnimationFrame(gameLoop);\n    }\n  }, [gameState, isPaused, updateMovement, updatePlayer, drawMaze, drawCollectibles, drawKnowledgeGates, drawPlayer]);\n\n  // Update ability timers\n  useEffect(() => {\n    if (gameState !== 'playing' || isPaused) return;\n    const interval = setInterval(() => {\n      setAbilities(prev => {\n        const newAbilities = {\n          ...prev\n        };\n        Object.keys(newAbilities).forEach(name => {\n          if (newAbilities[name].cooldown > 0) {\n            newAbilities[name].cooldown = Math.max(0, newAbilities[name].cooldown - 100);\n          }\n          if (newAbilities[name].duration > 0) {\n            newAbilities[name].duration = Math.max(0, newAbilities[name].duration - 100);\n            if (newAbilities[name].duration === 0) {\n              if (name === 'sprint') {\n                setPlayer(prev => ({\n                  ...prev,\n                  isSprinting: false\n                }));\n              } else if (name === 'shield') {\n                setPlayer(prev => ({\n                  ...prev,\n                  hasShield: false\n                }));\n              }\n            }\n          }\n        });\n        return newAbilities;\n      });\n\n      // Sprint energy consumption\n      if (player.isSprinting && energy > 0) {\n        setEnergy(prev => {\n          const newEnergy = Math.max(0, prev - 0.5);\n          if (newEnergy === 0) {\n            setPlayer(prev => ({\n              ...prev,\n              isSprinting: false\n            }));\n          }\n          return newEnergy;\n        });\n      }\n    }, 100);\n    return () => clearInterval(interval);\n  }, [gameState, player.isSprinting, energy]);\n\n  // Setup game loop with requestAnimationFrame\n  useEffect(() => {\n    if (gameState === 'playing') {\n      // Cancel any existing loop before starting new one\n      if (gameLoopRef.current) {\n        cancelAnimationFrame(gameLoopRef.current);\n      }\n      isRunningRef.current = true;\n      gameLoopRef.current = requestAnimationFrame(gameLoop);\n    } else {\n      isRunningRef.current = false;\n      if (gameLoopRef.current) {\n        cancelAnimationFrame(gameLoopRef.current);\n        gameLoopRef.current = null;\n      }\n    }\n    return () => {\n      isRunningRef.current = false;\n      if (gameLoopRef.current) {\n        cancelAnimationFrame(gameLoopRef.current);\n        gameLoopRef.current = null;\n      }\n    };\n  }, [gameState, gameLoop]);\n\n  // Generate maze when questions are loaded (only once per game session)\n  useEffect(() => {\n    if (questions.length > 0 && gameState === 'playing' && !mazeGeneratedRef.current) {\n      generateMaze();\n      mazeGeneratedRef.current = true;\n    }\n  }, [questions, gameState, generateMaze]);\n\n  // Render maze to offscreen canvas when maze changes\n  useEffect(() => {\n    if (maze.length > 0) {\n      renderMazeToOffscreen();\n    }\n  }, [maze, renderMazeToOffscreen]);\n\n  // Keyboard state\n  const keysRef = useRef({});\n\n  // Handle keyboard input\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // Handle pause\n      if ((e.key === 'p' || e.key === 'P' || e.key === 'Escape') && gameState === 'playing') {\n        togglePause();\n        return;\n      }\n      if (gameState !== 'playing' || isPaused) return;\n      keysRef.current[e.key] = true;\n\n      // Prevent default browser behavior for arrow keys and WASD\n      if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'w', 'a', 's', 'd'].includes(e.key)) {\n        e.preventDefault();\n      }\n    };\n    const handleKeyUp = e => {\n      if (gameState !== 'playing' || isPaused) return;\n      keysRef.current[e.key] = false;\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameState, isPaused, togglePause]);\n\n  // Clear movement when game state changes\n  useEffect(() => {\n    if (gameState !== 'playing') {\n      keysRef.current = {};\n      setPlayer(prev => ({\n        ...prev,\n        dx: 0,\n        dy: 0\n      }));\n    }\n  }, [gameState]);\n  const formatTime = time => {\n    const elapsed = Math.floor((time - startTime) / 1000);\n    const minutes = Math.floor(elapsed / 60);\n    const seconds = elapsed % 60;\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"maze-game-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"maze-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"G\\xE9n\\xE9ration du labyrinthe...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"maze-game-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"maze-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Erreur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-retry\",\n            onClick: () => setError(null),\n            children: \"R\\xE9essayer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"maze-game-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"maze-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate('/mini-jeux'),\n        children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 11\n        }, this), \" Retour aux mini-jeux\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 9\n      }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [isPaused && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pause-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pause-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Jeu en Pause\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 926,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Appuyez sur P ou ESC pour reprendre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: togglePause,\n              className: \"menu-button\",\n              children: \"Reprendre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\",\n              children: \"\\uD83C\\uDFAF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 934,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Score: \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\",\n              children: \"\\u26A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 938,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\xC9nergie: \", Math.floor(energy)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\",\n              children: \"\\uD83C\\uDF86\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"XP: +\", xpEarned]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 943,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\",\n              children: \"\\u23F1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 946,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Temps: \", startTime ? formatTime(Date.now()) : '0:00']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-item\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: togglePause,\n              className: \"pause-button\",\n              children: isPaused ? '▶️ Reprendre' : '⏸️ Pause'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 900,\n          height: 500,\n          className: \"game-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-ui\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-subject\",\n            children: [(_subjectOptions$find = subjectOptions.find(s => s.value === selectedSubject)) === null || _subjectOptions$find === void 0 ? void 0 : _subjectOptions$find.label, \" - \", selectedLevel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 964,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"abilities\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `ability ${abilities.sprint.duration > 0 ? 'active' : ''} ${abilities.sprint.cooldown > 0 ? 'cooldown' : ''}`,\n              onClick: () => activateAbility('sprint'),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ability-icon\",\n                children: \"\\uD83C\\uDFC3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Sprint (1)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 974,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ability-desc\",\n                children: \"+50% vitesse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 975,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 969,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `ability ${abilities.hint.uses === 0 ? 'cooldown' : ''}`,\n              onClick: () => activateAbility('hint'),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ability-icon\",\n                children: \"\\uD83D\\uDCA1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Indice (\", abilities.hint.uses, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 982,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ability-desc\",\n                children: \"R\\xE9v\\xE8le indices\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `ability ${abilities.shield.duration > 0 ? 'active' : ''} ${abilities.shield.cooldown > 0 ? 'cooldown' : ''}`,\n              onClick: () => activateAbility('shield'),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ability-icon\",\n                children: \"\\uD83D\\uDEE1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 989,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Bouclier (3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ability-desc\",\n                children: \"Protection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 991,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 985,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `ability ${abilities.freeze.cooldown > 0 ? 'cooldown' : ''}`,\n              onClick: () => activateAbility('freeze'),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ability-icon\",\n                children: \"\\u2744\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Gel (4)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ability-desc\",\n                children: \"Arr\\xEAte le temps\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 11\n      }, this), gameState === 'challenge' && currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"challenge-panel show\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"D\\xE9fi \\xC9ducatif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"challenge-question\",\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"challenge-options\",\n          children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `challenge-option ${selectedAnswer === index ? option === currentQuestion.correctAnswer ? 'correct' : 'incorrect' : ''} ${selectedAnswer !== null && option === currentQuestion.correctAnswer ? 'correct' : ''}`,\n            onClick: () => handleAnswerSelect(index),\n            disabled: selectedAnswer !== null,\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1012,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 13\n        }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"challenge-hint\",\n          children: [\"\\uD83D\\uDCA1 \", currentQuestion.explanation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 11\n      }, this), gameState === 'victory' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"victory-screen show\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDF89 Victoire! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Vous avez termin\\xE9 le labyrinthe!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"victory-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Score Final: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1045,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"XP Gagn\\xE9: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [\"+\", xpEarned, \" XP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1046,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temps: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: startTime ? formatTime(Date.now()) : '0:00'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1047,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1047,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pr\\xE9cision: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [totalAnswers > 0 ? Math.round(correctAnswers / totalAnswers * 100) : 100, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1048,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => {\n            mazeGeneratedRef.current = false;\n            window.location.reload();\n          },\n          children: \"Rejouer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => navigate('/mini-jeux'),\n          children: \"Changer de jeu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 11\n      }, this), gameState === 'gameover' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameover-screen show\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDC80 Game Over! \\uD83D\\uDC80\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Votre \\xE9nergie est \\xE9puis\\xE9e!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameover-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Score: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1063,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"XP Gagn\\xE9: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [\"+\", xpEarned, \" XP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1064,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Questions r\\xE9pondues: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [correctAnswers, \"/\", totalAnswers]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1065,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => {\n            mazeGeneratedRef.current = false;\n            window.location.reload();\n          },\n          children: \"Rejouer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1067,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => navigate('/mini-jeux'),\n          children: \"Retour aux mini-jeux\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1059,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 914,\n    columnNumber: 5\n  }, this);\n};\n_s(MazeGame, \"5G2c1GHWX8OnZDRmq+C+RzzF2oY=\", false, function () {\n  return [useSearchParams, useNavigate, useAuth];\n});\n_c = MazeGame;\nexport default MazeGame;\nvar _c;\n$RefreshReg$(_c, \"MazeGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useNavigate","useSearchParams","axios","useAuth","FaArrowLeft","FaPlay","jsxDEV","_jsxDEV","CELL_SIZE","MAZE_WIDTH","MAZE_HEIGHT","MazeGame","_s","_subjectOptions$find","searchParams","navigate","token","canvasRef","mazeCanvasRef","mazeGeneratedRef","gameState","setGameState","selectedSubject","setSelectedSubject","get","selectedLevel","setSelectedLevel","loading","setLoading","error","setError","score","setScore","energy","setEnergy","level","startTime","setStartTime","correctAnswers","setCorrectAnswers","totalAnswers","setTotalAnswers","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","showHint","setShowHint","questions","setQuestions","xpEarned","setXpEarned","startX","startY","player","setPlayer","x","y","width","height","speed","dx","dy","hasShield","isSprinting","maze","setMaze","knowledgeGates","setKnowledgeGates","collectibles","setCollectibles","answeredGates","setAnsweredGates","abilities","setAbilities","sprint","cooldown","duration","cost","hint","uses","shield","freeze","subjectOptions","value","label","levelOptions","generateMaze","newMaze","i","Math","floor","random","gates","gateCount","length","attempts","push","active","question","items","type","collected","loadQuestions","response","headers","Authorization","params","subject","niveau","count","data","game","options","correctAnswer","explanation","err","console","initializeGame","current","Date","now","prev","saveGameResults","gameTime","accuracy","round","gameData","timeSpent","log","gameId","window","location","pathname","split","pop","post","success","results","renderMazeToOffscreen","document","createElement","ctx","getContext","fillStyle","fillRect","cellX","cellY","strokeStyle","strokeRect","font","textAlign","textBaseline","fillText","drawMaze","drawImage","drawPlayer","save","translate","beginPath","arc","PI","fill","restore","drawKnowledgeGates","forEach","gate","time","glowSize","sin","gradient","createRadialGradient","addColorStop","drawCollectibles","item","rotate","handleAnswerSelect","answerIndex","isCorrect","min","map","index","gateIndex","setTimeout","keysRef","newEnergy","max","activateHint","isPaused","setIsPaused","togglePause","newPaused","isRunningRef","activateAbility","abilityName","ability","updateMovement","updatePlayer","nextX","nextY","playerLeft","playerRight","playerTop","playerBottom","canMove","corners","corner","newX","newY","horizontalX","canMoveHorizontal","hCorners","verticalY","canMoveVertical","vCorners","checkInteractions","playerX","playerY","abs","exitX","exitY","gameLoopRef","gameLoop","currentTime","canvas","clearRect","requestAnimationFrame","interval","setInterval","newAbilities","Object","keys","name","clearInterval","cancelAnimationFrame","handleKeyDown","e","key","includes","preventDefault","handleKeyUp","addEventListener","removeEventListener","formatTime","elapsed","minutes","seconds","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","find","s","option","disabled","reload","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/GitHub/msa/frontend/src/pages/MazeGame.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { FaArrowLeft, FaPlay } from 'react-icons/fa';\r\nimport '../styles/MazeGame.css';\r\n\r\n// Constants\r\nconst CELL_SIZE = 50;\r\nconst MAZE_WIDTH = 18;\r\nconst MAZE_HEIGHT = 10;\r\n\r\nconst MazeGame = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const { token } = useAuth();\r\n  \r\n  // Canvas refs\r\n  const canvasRef = useRef(null);\r\n  const mazeCanvasRef = useRef(null); // Offscreen canvas for static maze\r\n  const mazeGeneratedRef = useRef(false); // Track if maze has been generated\r\n  \r\n  // Game state\r\n  const [gameState, setGameState] = useState('loading'); // loading, playing, challenge, victory, gameover, paused\r\n  const [selectedSubject, setSelectedSubject] = useState(searchParams.get('subject') || 'maths');\r\n  const [selectedLevel, setSelectedLevel] = useState(searchParams.get('niveau') || '3e');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Game data\r\n  const [score, setScore] = useState(0);\r\n  const [energy, setEnergy] = useState(100);\r\n  const [level] = useState(1);\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [totalAnswers, setTotalAnswers] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [showHint, setShowHint] = useState(false);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [xpEarned, setXpEarned] = useState(0);\r\n  \r\n  // Game objects\r\n  // Calculate starting position based on cell size\r\n  const startX = 1.5 * CELL_SIZE; // Column 1, centered\r\n  const startY = 5 * CELL_SIZE; // Row 5, centered\r\n  \r\n  const [player, setPlayer] = useState({\r\n    x: startX,\r\n    y: startY,\r\n    width: 30,\r\n    height: 30,\r\n    speed: 3,\r\n    dx: 0,\r\n    dy: 0,\r\n    hasShield: false,\r\n    isSprinting: false\r\n  });\r\n  \r\n  const [maze, setMaze] = useState([]);\r\n  const [knowledgeGates, setKnowledgeGates] = useState([]);\r\n  const [collectibles, setCollectibles] = useState([]);\r\n  const [answeredGates, setAnsweredGates] = useState([]);\r\n  \r\n  // Abilities\r\n  const [abilities, setAbilities] = useState({\r\n    sprint: { cooldown: 0, duration: 0, cost: 10 },\r\n    hint: { cooldown: 0, uses: 3, cost: 0 },\r\n    shield: { cooldown: 0, duration: 0, cost: 20 },\r\n    freeze: { cooldown: 0, duration: 0, cost: 30 }\r\n  });\r\n  \r\n  // Subject options\r\n  const subjectOptions = [\r\n    { value: 'maths', label: 'Mathématiques' },\r\n    { value: 'sciences', label: 'Sciences' },\r\n    { value: 'francais', label: 'Français' },\r\n    { value: 'histoire', label: 'Histoire-Géo' },\r\n    { value: 'anglais', label: 'Anglais' }\r\n  ];\r\n  \r\n  const levelOptions = [\r\n    { value: '3e', label: '3e' },\r\n    { value: '2nde', label: '2nde' },\r\n    { value: '1ere', label: '1ère' },\r\n    { value: 'term', label: 'Terminale' }\r\n  ];\r\n\r\n  // Generate maze\r\n  const generateMaze = useCallback(() => {\r\n    const newMaze = [];\r\n    \r\n    // Create a simple maze layout\r\n    for (let y = 0; y < MAZE_HEIGHT; y++) {\r\n      newMaze[y] = [];\r\n      for (let x = 0; x < MAZE_WIDTH; x++) {\r\n        // Create outer walls\r\n        if (x === 0 || x === MAZE_WIDTH - 1 || y === 0 || y === MAZE_HEIGHT - 1) {\r\n          newMaze[y][x] = 1; // Wall\r\n        } else {\r\n          newMaze[y][x] = 0; // Path by default\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Add some internal walls to create a maze-like structure\r\n    // Horizontal walls\r\n    for (let x = 2; x < MAZE_WIDTH - 2; x++) {\r\n      if (x !== 8 && x !== 9) { // Leave gaps\r\n        newMaze[2][x] = 1;\r\n        newMaze[7][x] = 1;\r\n      }\r\n    }\r\n    \r\n    // Vertical walls\r\n    for (let y = 2; y < MAZE_HEIGHT - 2; y++) {\r\n      if (y !== 4 && y !== 5) { // Leave gaps\r\n        newMaze[y][4] = 1;\r\n        newMaze[y][13] = 1;\r\n      }\r\n    }\r\n    \r\n    // Add some random walls\r\n    for (let i = 0; i < 15; i++) {\r\n      let x = Math.floor(Math.random() * (MAZE_WIDTH - 4)) + 2;\r\n      let y = Math.floor(Math.random() * (MAZE_HEIGHT - 4)) + 2;\r\n      if (!(x === 1 && y === 5)) { // Don't block start\r\n        newMaze[y][x] = 1;\r\n      }\r\n    }\r\n    \r\n    // Ensure start and end are clear\r\n    newMaze[5][1] = 0; // Start\r\n    newMaze[5][2] = 0; // Clear path from start\r\n    newMaze[5][MAZE_WIDTH - 2] = 2; // Exit\r\n    newMaze[5][MAZE_WIDTH - 3] = 0; // Clear path to exit\r\n    \r\n    setMaze(newMaze);\r\n    \r\n    // Generate knowledge gates\r\n    const gates = [];\r\n    const gateCount = 3 + level;\r\n    for (let i = 0; i < gateCount && i < questions.length; i++) {\r\n      let x, y;\r\n      let attempts = 0;\r\n      do {\r\n        x = Math.floor(Math.random() * (MAZE_WIDTH - 4)) + 2;\r\n        y = Math.floor(Math.random() * (MAZE_HEIGHT - 4)) + 2;\r\n        attempts++;\r\n      } while ((newMaze[y][x] !== 0 || (x === 1 && y === 5)) && attempts < 100);\r\n      \r\n      if (newMaze[y][x] === 0) {\r\n        gates.push({\r\n          x: x * CELL_SIZE + CELL_SIZE / 2,\r\n          y: y * CELL_SIZE + CELL_SIZE / 2,\r\n          active: true,\r\n          question: questions[i]\r\n        });\r\n      }\r\n    }\r\n    setKnowledgeGates(gates);\r\n    \r\n    // Generate collectibles\r\n    const items = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      let x, y;\r\n      let attempts = 0;\r\n      do {\r\n        x = Math.floor(Math.random() * (MAZE_WIDTH - 4)) + 2;\r\n        y = Math.floor(Math.random() * (MAZE_HEIGHT - 4)) + 2;\r\n        attempts++;\r\n      } while (newMaze[y][x] !== 0 && attempts < 100);\r\n      \r\n      if (newMaze[y][x] === 0) {\r\n        items.push({\r\n          x: x * CELL_SIZE + CELL_SIZE / 2,\r\n          y: y * CELL_SIZE + CELL_SIZE / 2,\r\n          type: 'energy',\r\n          value: 20,\r\n          collected: false\r\n        });\r\n      }\r\n    }\r\n    setCollectibles(items);\r\n  }, [level, questions]);\r\n\r\n  // Load questions from backend\r\n  const loadQuestions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`http://localhost:5000/api/games/2`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        params: {\r\n          subject: selectedSubject,\r\n          niveau: selectedLevel,\r\n          count: 6\r\n        }\r\n      });\r\n      \r\n      if (response.data.game && response.data.game.questions) {\r\n        setQuestions(response.data.game.questions);\r\n      } else {\r\n        // Fallback questions if API fails\r\n        setQuestions([\r\n          {\r\n            question: \"Combien font 2 + 2 ?\",\r\n            options: [\"3\", \"4\", \"5\", \"6\"],\r\n            correctAnswer: \"4\",\r\n            explanation: \"2 + 2 = 4\"\r\n          }\r\n        ]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error loading questions:', err);\r\n      setError('Erreur lors du chargement des questions');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Initialize game when component mounts\r\n  useEffect(() => {\r\n    const initializeGame = async () => {\r\n      mazeGeneratedRef.current = false; // Reset maze generation flag\r\n      await loadQuestions();\r\n      setGameState('playing');\r\n      setStartTime(Date.now());\r\n      setScore(0);\r\n      setEnergy(100);\r\n      setCorrectAnswers(0);\r\n      setTotalAnswers(0);\r\n      setAnsweredGates([]);\r\n      setXpEarned(0);\r\n      setPlayer(prev => ({\r\n        ...prev,\r\n        x: startX,\r\n        y: startY,\r\n        dx: 0,\r\n        dy: 0,\r\n        hasShield: false,\r\n        isSprinting: false\r\n      }));\r\n      setAbilities({\r\n        sprint: { cooldown: 0, duration: 0, cost: 10 },\r\n        hint: { cooldown: 0, uses: 3, cost: 0 },\r\n        shield: { cooldown: 0, duration: 0, cost: 20 },\r\n        freeze: { cooldown: 0, duration: 0, cost: 30 }\r\n      });\r\n    };\r\n    \r\n    initializeGame();\r\n  }, [startX, startY]);\r\n  \r\n  // Save game results to backend\r\n  const saveGameResults = async () => {\r\n    try {\r\n      const gameTime = startTime ? Date.now() - startTime : 0;\r\n      const accuracy = totalAnswers > 0 ? Math.round((correctAnswers / totalAnswers) * 100) : 100;\r\n      \r\n      const gameData = {\r\n        score: score,\r\n        timeSpent: Math.floor(gameTime / 1000), // Convert to seconds\r\n        accuracy: accuracy,\r\n        correctAnswers: correctAnswers,\r\n        totalAnswers: totalAnswers,\r\n        xpEarned: xpEarned\r\n      };\r\n      \r\n      console.log('Saving maze game results:', gameData);\r\n      \r\n      // Get the maze game ID from URL params\r\n      const gameId = window.location.pathname.split('/').pop();\r\n      \r\n      const response = await axios.post(\r\n        `http://localhost:5000/api/games/${gameId}/results`,\r\n        gameData,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        }\r\n      );\r\n      \r\n      if (response.data.success) {\r\n        console.log('Game results saved successfully:', response.data.results);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving game results:', error);\r\n      // Don't block the game if saving fails\r\n    }\r\n  };\r\n\r\n  // Draw maze to offscreen canvas (only once when maze changes)\r\n  const renderMazeToOffscreen = useCallback(() => {\r\n    if (!mazeCanvasRef.current) {\r\n      mazeCanvasRef.current = document.createElement('canvas');\r\n      mazeCanvasRef.current.width = MAZE_WIDTH * CELL_SIZE;\r\n      mazeCanvasRef.current.height = MAZE_HEIGHT * CELL_SIZE;\r\n    }\r\n    \r\n    const ctx = mazeCanvasRef.current.getContext('2d');\r\n    ctx.fillStyle = '#0a0a0a';\r\n    ctx.fillRect(0, 0, mazeCanvasRef.current.width, mazeCanvasRef.current.height);\r\n    \r\n    for (let y = 0; y < MAZE_HEIGHT; y++) {\r\n      for (let x = 0; x < MAZE_WIDTH; x++) {\r\n        const cellX = x * CELL_SIZE;\r\n        const cellY = y * CELL_SIZE;\r\n        \r\n        if (maze[y] && maze[y][x] === 1) {\r\n          // Wall\r\n          ctx.fillStyle = '#16213e';\r\n          ctx.fillRect(cellX, cellY, CELL_SIZE, CELL_SIZE);\r\n          ctx.strokeStyle = '#0f3460';\r\n          ctx.strokeRect(cellX, cellY, CELL_SIZE, CELL_SIZE);\r\n        } else if (maze[y] && maze[y][x] === 2) {\r\n          // Exit\r\n          ctx.fillStyle = '#4caf50';\r\n          ctx.fillRect(cellX, cellY, CELL_SIZE, CELL_SIZE);\r\n          ctx.fillStyle = '#fff';\r\n          ctx.font = '24px Arial';\r\n          ctx.textAlign = 'center';\r\n          ctx.textBaseline = 'middle';\r\n          ctx.fillText('🏁', cellX + CELL_SIZE/2, cellY + CELL_SIZE/2);\r\n        }\r\n      }\r\n    }\r\n  }, [maze]);\r\n  \r\n  // Draw functions\r\n  const drawMaze = useCallback((ctx) => {\r\n    if (mazeCanvasRef.current) {\r\n      ctx.drawImage(mazeCanvasRef.current, 0, 0);\r\n    }\r\n  }, []);\r\n\r\n  const drawPlayer = useCallback((ctx) => {\r\n    ctx.save();\r\n    ctx.translate(player.x, player.y);\r\n    \r\n    // Shield effect\r\n    if (player.hasShield) {\r\n      ctx.fillStyle = 'rgba(76, 175, 80, 0.3)';\r\n      ctx.beginPath();\r\n      ctx.arc(0, 0, player.width, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n    \r\n    // Player body\r\n    ctx.fillStyle = '#e94560';\r\n    ctx.fillRect(-player.width/2, -player.height/2, player.width, player.height);\r\n    \r\n    // Player face\r\n    ctx.fillStyle = '#fff';\r\n    ctx.font = '20px Arial';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    ctx.fillText('🎓', 0, 0);\r\n    \r\n    ctx.restore();\r\n  }, [player]);\r\n\r\n  const drawKnowledgeGates = useCallback((ctx) => {\r\n    knowledgeGates.forEach(gate => {\r\n      if (!gate.active) return;\r\n      \r\n      ctx.save();\r\n      ctx.translate(gate.x, gate.y);\r\n      \r\n      // Gate glow effect\r\n      const time = Date.now() / 1000;\r\n      const glowSize = 20 + Math.sin(time * 2) * 5;\r\n      const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, glowSize);\r\n      gradient.addColorStop(0, 'rgba(233, 69, 96, 0.5)');\r\n      gradient.addColorStop(1, 'rgba(233, 69, 96, 0)');\r\n      ctx.fillStyle = gradient;\r\n      ctx.beginPath();\r\n      ctx.arc(0, 0, glowSize, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      \r\n      // Gate body\r\n      ctx.fillStyle = '#e94560';\r\n      ctx.fillRect(-20, -20, 40, 40);\r\n      \r\n      // Gate icon\r\n      ctx.fillStyle = '#fff';\r\n      ctx.font = 'bold 24px Arial';\r\n      ctx.textAlign = 'center';\r\n      ctx.textBaseline = 'middle';\r\n      ctx.fillText('?', 0, 0);\r\n      \r\n      ctx.restore();\r\n    });\r\n  }, [knowledgeGates]);\r\n\r\n  const drawCollectibles = useCallback((ctx) => {\r\n    collectibles.forEach(item => {\r\n      if (item.collected) return;\r\n      \r\n      ctx.save();\r\n      ctx.translate(item.x, item.y);\r\n      \r\n      // Rotation animation\r\n      const time = Date.now() / 1000;\r\n      ctx.rotate(time);\r\n      \r\n      // Item glow\r\n      ctx.fillStyle = 'rgba(255, 217, 61, 0.3)';\r\n      ctx.beginPath();\r\n      ctx.arc(0, 0, 15, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      \r\n      // Item icon\r\n      ctx.fillStyle = '#FFD93D';\r\n      ctx.font = '20px Arial';\r\n      ctx.textAlign = 'center';\r\n      ctx.textBaseline = 'middle';\r\n      ctx.fillText('⚡', 0, 0);\r\n      \r\n      ctx.restore();\r\n    });\r\n  }, [collectibles]);\r\n\r\n  \r\n  // Handle answer selection\r\n  const handleAnswerSelect = (answerIndex) => {\r\n    if (selectedAnswer !== null) return; // Already answered\r\n    \r\n    setSelectedAnswer(answerIndex);\r\n    const isCorrect = currentQuestion.options[answerIndex] === currentQuestion.correctAnswer;\r\n    \r\n    setTotalAnswers(prev => prev + 1);\r\n    \r\n    if (isCorrect) {\r\n      setCorrectAnswers(prev => prev + 1);\r\n      setScore(prev => prev + 100);\r\n      setEnergy(prev => Math.min(100, prev + 10));\r\n      \r\n      // Award XP for correct answer (5 XP per correct answer like quiz battle)\r\n      setXpEarned(prev => prev + 5);\r\n      \r\n      // Deactivate the gate and mark as answered\r\n      setKnowledgeGates(prev => prev.map((gate, index) => \r\n        index === currentQuestion.gateIndex ? { ...gate, active: false } : gate\r\n      ));\r\n      setAnsweredGates(prev => [...prev, currentQuestion.gateIndex]);\r\n      \r\n      setTimeout(() => {\r\n        setGameState('playing');\r\n        setCurrentQuestion(null);\r\n        setSelectedAnswer(null);\r\n        setShowHint(false);\r\n        // Clear all key states when returning to playing\r\n        keysRef.current = {};\r\n        setPlayer(prev => ({ ...prev, dx: 0, dy: 0 }));\r\n      }, 1500);\r\n    } else {\r\n      if (!player.hasShield) {\r\n        setEnergy(prev => {\r\n          const newEnergy = Math.max(0, prev - 20);\r\n          if (newEnergy === 0) {\r\n            // Save results before game over\r\n            saveGameResults();\r\n            setGameState('gameover');\r\n          }\r\n          return newEnergy;\r\n        });\r\n      }\r\n      \r\n      setTimeout(() => {\r\n        if (gameState !== 'gameover') {\r\n          setGameState('playing');\r\n          setCurrentQuestion(null);\r\n          setSelectedAnswer(null);\r\n          setShowHint(false);\r\n          // Clear all key states when returning to playing\r\n          keysRef.current = {};\r\n          setPlayer(prev => ({ ...prev, dx: 0, dy: 0 }));\r\n        }\r\n      }, 2500);\r\n    }\r\n  };\r\n  \r\n  // Use hint ability\r\n  const activateHint = () => {\r\n    if (abilities.hint.uses > 0 && gameState === 'challenge') {\r\n      setShowHint(true);\r\n      setAbilities(prev => ({\r\n        ...prev,\r\n        hint: { ...prev.hint, uses: prev.hint.uses - 1 }\r\n      }));\r\n    }\r\n  };\r\n  \r\n  // Pause/resume game\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const togglePause = useCallback(() => {\r\n    if (gameState === 'playing') {\r\n      setIsPaused(prev => {\r\n        const newPaused = !prev;\r\n        if (newPaused) {\r\n          // Clear key states when pausing\r\n          keysRef.current = {};\r\n          setPlayer(prev => ({ ...prev, dx: 0, dy: 0 }));\r\n        }\r\n        isRunningRef.current = !newPaused;\r\n        return newPaused;\r\n      });\r\n    }\r\n  }, [gameState, isPaused]);\r\n  \r\n  // Activate ability\r\n  const activateAbility = (abilityName) => {\r\n    if (gameState !== 'playing' && gameState !== 'challenge') return;\r\n    \r\n    const ability = abilities[abilityName];\r\n    \r\n    switch(abilityName) {\r\n      case 'sprint':\r\n        if (ability.cooldown <= 0 && energy >= ability.cost) {\r\n          setPlayer(prev => ({ ...prev, isSprinting: true }));\r\n          setAbilities(prev => ({\r\n            ...prev,\r\n            sprint: { ...prev.sprint, duration: 5000, cooldown: 10000 }\r\n          }));\r\n          setEnergy(prev => prev - ability.cost);\r\n        }\r\n        break;\r\n        \r\n      case 'hint':\r\n        activateHint();\r\n        break;\r\n        \r\n      case 'shield':\r\n        if (ability.cooldown <= 0 && energy >= ability.cost) {\r\n          setPlayer(prev => ({ ...prev, hasShield: true }));\r\n          setAbilities(prev => ({\r\n            ...prev,\r\n            shield: { ...prev.shield, duration: 10000, cooldown: 20000 }\r\n          }));\r\n          setEnergy(prev => prev - ability.cost);\r\n        }\r\n        break;\r\n        \r\n      case 'freeze':\r\n        if (ability.cooldown <= 0 && energy >= ability.cost && gameState === 'challenge') {\r\n          // Freeze timer implemented as pausing question timer\r\n          setAbilities(prev => ({\r\n            ...prev,\r\n            freeze: { ...prev.freeze, cooldown: 30000, duration: 5000 }\r\n          }));\r\n          setEnergy(prev => prev - ability.cost);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  \r\n  \r\n  // Update player movement based on current keys\r\n  const updateMovement = useCallback(() => {\r\n    if (gameState !== 'playing' || isPaused) return;\r\n    \r\n    let dx = 0;\r\n    let dy = 0;\r\n    \r\n    if (keysRef.current['ArrowLeft'] || keysRef.current['a'] || keysRef.current['A']) dx = -1;\r\n    if (keysRef.current['ArrowRight'] || keysRef.current['d'] || keysRef.current['D']) dx = 1;\r\n    if (keysRef.current['ArrowUp'] || keysRef.current['w'] || keysRef.current['W']) dy = -1;\r\n    if (keysRef.current['ArrowDown'] || keysRef.current['s'] || keysRef.current['S']) dy = 1;\r\n    \r\n    setPlayer(prev => ({ ...prev, dx, dy }));\r\n  }, [gameState, isPaused]);\r\n  \r\n  // Update player position with collision detection\r\n  const updatePlayer = useCallback(() => {\r\n    if (player.dx === 0 && player.dy === 0) return;\r\n    \r\n    const speed = player.isSprinting ? player.speed * 1.5 : player.speed;\r\n    const nextX = player.x + player.dx * speed;\r\n    const nextY = player.y + player.dy * speed;\r\n    \r\n    // Get player boundaries for next position\r\n    const playerLeft = nextX - player.width / 2;\r\n    const playerRight = nextX + player.width / 2;\r\n    const playerTop = nextY - player.height / 2;\r\n    const playerBottom = nextY + player.height / 2;\r\n    \r\n    // Check if the new position would be valid\r\n    let canMove = true;\r\n    \r\n    // Check all four corners and center of the player\r\n    const corners = [\r\n      { x: playerLeft, y: playerTop },\r\n      { x: playerRight, y: playerTop },\r\n      { x: playerLeft, y: playerBottom },\r\n      { x: playerRight, y: playerBottom },\r\n      { x: nextX, y: nextY } // Center point\r\n    ];\r\n    \r\n    for (let corner of corners) {\r\n      const cellX = Math.floor(corner.x / CELL_SIZE);\r\n      const cellY = Math.floor(corner.y / CELL_SIZE);\r\n      \r\n      // Check bounds\r\n      if (cellX < 0 || cellX >= MAZE_WIDTH || cellY < 0 || cellY >= MAZE_HEIGHT) {\r\n        canMove = false;\r\n        break;\r\n      }\r\n      \r\n      // Check if it's a wall\r\n      if (maze[cellY] && maze[cellY][cellX] === 1) {\r\n        canMove = false;\r\n        break;\r\n      }\r\n    }\r\n    \r\n    let newX = player.x;\r\n    let newY = player.y;\r\n    \r\n    // Update position if movement is valid\r\n    if (canMove) {\r\n      newX = nextX;\r\n      newY = nextY;\r\n    } else {\r\n      // Try to move in only one direction if diagonal movement is blocked\r\n      if (player.dx !== 0 && player.dy !== 0) {\r\n        // Try horizontal movement only\r\n        const horizontalX = player.x + player.dx * speed;\r\n        let canMoveHorizontal = true;\r\n        \r\n        const hCorners = [\r\n          { x: horizontalX - player.width / 2, y: player.y - player.height / 2 },\r\n          { x: horizontalX + player.width / 2, y: player.y - player.height / 2 },\r\n          { x: horizontalX - player.width / 2, y: player.y + player.height / 2 },\r\n          { x: horizontalX + player.width / 2, y: player.y + player.height / 2 }\r\n        ];\r\n        \r\n        for (let corner of hCorners) {\r\n          const cellX = Math.floor(corner.x / CELL_SIZE);\r\n          const cellY = Math.floor(corner.y / CELL_SIZE);\r\n          if (cellX < 0 || cellX >= MAZE_WIDTH || cellY < 0 || cellY >= MAZE_HEIGHT || (maze[cellY] && maze[cellY][cellX] === 1)) {\r\n            canMoveHorizontal = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if (canMoveHorizontal) {\r\n          newX = horizontalX;\r\n        } else {\r\n          // Try vertical movement only\r\n          const verticalY = player.y + player.dy * speed;\r\n          let canMoveVertical = true;\r\n          \r\n          const vCorners = [\r\n            { x: player.x - player.width / 2, y: verticalY - player.height / 2 },\r\n            { x: player.x + player.width / 2, y: verticalY - player.height / 2 },\r\n            { x: player.x - player.width / 2, y: verticalY + player.height / 2 },\r\n            { x: player.x + player.width / 2, y: verticalY + player.height / 2 }\r\n          ];\r\n          \r\n          for (let corner of vCorners) {\r\n            const cellX = Math.floor(corner.x / CELL_SIZE);\r\n            const cellY = Math.floor(corner.y / CELL_SIZE);\r\n            if (cellX < 0 || cellX >= MAZE_WIDTH || cellY < 0 || cellY >= MAZE_HEIGHT || (maze[cellY] && maze[cellY][cellX] === 1)) {\r\n              canMoveVertical = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if (canMoveVertical) {\r\n            newY = verticalY;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Update player position if it changed\r\n    if (newX !== player.x || newY !== player.y) {\r\n      setPlayer(prev => ({ ...prev, x: newX, y: newY }));\r\n      \r\n      // Check for interactions after moving\r\n      checkInteractions(newX, newY);\r\n    }\r\n  }, [player, maze, MAZE_WIDTH, MAZE_HEIGHT, CELL_SIZE]);\r\n  \r\n  // Check interactions with gates and collectibles\r\n  const checkInteractions = useCallback((playerX, playerY) => {\r\n    // Check knowledge gates\r\n    knowledgeGates.forEach((gate, index) => {\r\n      if (gate.active && Math.abs(playerX - gate.x) < 30 && Math.abs(playerY - gate.y) < 30) {\r\n        setCurrentQuestion({...gate.question, gateIndex: index});\r\n        setSelectedAnswer(null);\r\n        setShowHint(false);\r\n        setGameState('challenge');\r\n        setPlayer(prev => ({ ...prev, dx: 0, dy: 0 }));\r\n        // Clear all key states when entering challenge\r\n        keysRef.current = {};\r\n      }\r\n    });\r\n    \r\n    // Check collectibles\r\n    setCollectibles(prev => prev.map(item => {\r\n      if (!item.collected && Math.abs(playerX - item.x) < 25 && Math.abs(playerY - item.y) < 25) {\r\n        setEnergy(prev => Math.min(100, prev + item.value));\r\n        setScore(prev => prev + 50);\r\n        // Award small XP bonus for collecting items\r\n        setXpEarned(prev => prev + 1);\r\n        return { ...item, collected: true };\r\n      }\r\n      return item;\r\n    }));\r\n    \r\n    // Check exit\r\n    const exitX = (MAZE_WIDTH - 2) * CELL_SIZE + CELL_SIZE / 2;\r\n    const exitY = 5 * CELL_SIZE + CELL_SIZE / 2;\r\n    if (Math.abs(playerX - exitX) < 30 && Math.abs(playerY - exitY) < 30) {\r\n      // Check if all knowledge gates have been answered (not just deactivated)\r\n      if (answeredGates.length >= knowledgeGates.length && knowledgeGates.length > 0) {\r\n        saveGameResults();\r\n        setGameState('victory');\r\n      }\r\n    }\r\n  }, [knowledgeGates, MAZE_WIDTH, CELL_SIZE]);\r\n  \r\n  // Main game loop\r\n  const gameLoopRef = useRef();\r\n  const isRunningRef = useRef(false);\r\n  \r\n  const gameLoop = useCallback((currentTime) => {\r\n    if (gameState === 'playing' && !isPaused) {\r\n      updateMovement();\r\n      updatePlayer();\r\n      \r\n      // Draw everything\r\n      const canvas = canvasRef.current;\r\n      if (canvas) {\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        drawMaze(ctx);\r\n        drawCollectibles(ctx);\r\n        drawKnowledgeGates(ctx);\r\n        drawPlayer(ctx);\r\n      }\r\n    }\r\n    \r\n    if (isRunningRef.current && !isPaused) {\r\n      gameLoopRef.current = requestAnimationFrame(gameLoop);\r\n    }\r\n  }, [gameState, isPaused, updateMovement, updatePlayer, drawMaze, drawCollectibles, drawKnowledgeGates, drawPlayer]);\r\n\r\n  // Update ability timers\r\n  useEffect(() => {\r\n    if (gameState !== 'playing' || isPaused) return;\r\n    \r\n    const interval = setInterval(() => {\r\n      setAbilities(prev => {\r\n        const newAbilities = { ...prev };\r\n        \r\n        Object.keys(newAbilities).forEach(name => {\r\n          if (newAbilities[name].cooldown > 0) {\r\n            newAbilities[name].cooldown = Math.max(0, newAbilities[name].cooldown - 100);\r\n          }\r\n          if (newAbilities[name].duration > 0) {\r\n            newAbilities[name].duration = Math.max(0, newAbilities[name].duration - 100);\r\n            if (newAbilities[name].duration === 0) {\r\n              if (name === 'sprint') {\r\n                setPlayer(prev => ({ ...prev, isSprinting: false }));\r\n              } else if (name === 'shield') {\r\n                setPlayer(prev => ({ ...prev, hasShield: false }));\r\n              }\r\n            }\r\n          }\r\n        });\r\n        \r\n        return newAbilities;\r\n      });\r\n      \r\n      // Sprint energy consumption\r\n      if (player.isSprinting && energy > 0) {\r\n        setEnergy(prev => {\r\n          const newEnergy = Math.max(0, prev - 0.5);\r\n          if (newEnergy === 0) {\r\n            setPlayer(prev => ({ ...prev, isSprinting: false }));\r\n          }\r\n          return newEnergy;\r\n        });\r\n      }\r\n    }, 100);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [gameState, player.isSprinting, energy]);\r\n  \r\n  // Setup game loop with requestAnimationFrame\r\n  useEffect(() => {\r\n    if (gameState === 'playing') {\r\n      // Cancel any existing loop before starting new one\r\n      if (gameLoopRef.current) {\r\n        cancelAnimationFrame(gameLoopRef.current);\r\n      }\r\n      isRunningRef.current = true;\r\n      gameLoopRef.current = requestAnimationFrame(gameLoop);\r\n    } else {\r\n      isRunningRef.current = false;\r\n      if (gameLoopRef.current) {\r\n        cancelAnimationFrame(gameLoopRef.current);\r\n        gameLoopRef.current = null;\r\n      }\r\n    }\r\n    \r\n    return () => {\r\n      isRunningRef.current = false;\r\n      if (gameLoopRef.current) {\r\n        cancelAnimationFrame(gameLoopRef.current);\r\n        gameLoopRef.current = null;\r\n      }\r\n    };\r\n  }, [gameState, gameLoop]);\r\n\r\n  // Generate maze when questions are loaded (only once per game session)\r\n  useEffect(() => {\r\n    if (questions.length > 0 && gameState === 'playing' && !mazeGeneratedRef.current) {\r\n      generateMaze();\r\n      mazeGeneratedRef.current = true;\r\n    }\r\n  }, [questions, gameState, generateMaze]);\r\n  \r\n  // Render maze to offscreen canvas when maze changes\r\n  useEffect(() => {\r\n    if (maze.length > 0) {\r\n      renderMazeToOffscreen();\r\n    }\r\n  }, [maze, renderMazeToOffscreen]);\r\n\r\n  // Keyboard state\r\n  const keysRef = useRef({});\r\n  \r\n  // Handle keyboard input\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      // Handle pause\r\n      if ((e.key === 'p' || e.key === 'P' || e.key === 'Escape') && gameState === 'playing') {\r\n        togglePause();\r\n        return;\r\n      }\r\n      \r\n      if (gameState !== 'playing' || isPaused) return;\r\n      keysRef.current[e.key] = true;\r\n      \r\n      // Prevent default browser behavior for arrow keys and WASD\r\n      if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'w', 'a', 's', 'd'].includes(e.key)) {\r\n        e.preventDefault();\r\n      }\r\n    };\r\n\r\n    const handleKeyUp = (e) => {\r\n      if (gameState !== 'playing' || isPaused) return;\r\n      keysRef.current[e.key] = false;\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n    \r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n    };\r\n  }, [gameState, isPaused, togglePause]);\r\n  \r\n  // Clear movement when game state changes\r\n  useEffect(() => {\r\n    if (gameState !== 'playing') {\r\n      keysRef.current = {};\r\n      setPlayer(prev => ({ ...prev, dx: 0, dy: 0 }));\r\n    }\r\n  }, [gameState]);\r\n  \r\n\r\n  const formatTime = (time) => {\r\n    const elapsed = Math.floor((time - startTime) / 1000);\r\n    const minutes = Math.floor(elapsed / 60);\r\n    const seconds = elapsed % 60;\r\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"maze-game-page\">\r\n        <div className=\"maze-container\">\r\n          <div className=\"loading-state\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <p>Génération du labyrinthe...</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"maze-game-page\">\r\n        <div className=\"maze-container\">\r\n          <div className=\"error-state\">\r\n            <h2>Erreur</h2>\r\n            <p>{error}</p>\r\n            <button className=\"btn-retry\" onClick={() => setError(null)}>Réessayer</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"maze-game-page\">\r\n      <div className=\"maze-container\">\r\n        <button className=\"back-button\" onClick={() => navigate('/mini-jeux')}>\r\n          <FaArrowLeft /> Retour aux mini-jeux\r\n        </button>\r\n\r\n\r\n        {gameState === 'playing' && (\r\n          <div className=\"game-container\">\r\n            {isPaused && (\r\n              <div className=\"pause-overlay\">\r\n                <div className=\"pause-content\">\r\n                  <h2>Jeu en Pause</h2>\r\n                  <p>Appuyez sur P ou ESC pour reprendre</p>\r\n                  <button onClick={togglePause} className=\"menu-button\">Reprendre</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className=\"game-header\">\r\n              <div className=\"header-item\">\r\n                <span className=\"icon\">🎯</span>\r\n                <span>Score: {score}</span>\r\n              </div>\r\n              <div className=\"header-item\">\r\n                <span className=\"icon\">⚡</span>\r\n                <span>Énergie: {Math.floor(energy)}</span>\r\n              </div>\r\n              <div className=\"header-item\">\r\n                <span className=\"icon\">🎆</span>\r\n                <span>XP: +{xpEarned}</span>\r\n              </div>\r\n              <div className=\"header-item\">\r\n                <span className=\"icon\">⏱️</span>\r\n                <span>Temps: {startTime ? formatTime(Date.now()) : '0:00'}</span>\r\n              </div>\r\n              <div className=\"header-item\">\r\n                <button onClick={togglePause} className=\"pause-button\">\r\n                  {isPaused ? '▶️ Reprendre' : '⏸️ Pause'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <canvas \r\n              ref={canvasRef}\r\n              width={900}\r\n              height={500}\r\n              className=\"game-canvas\"\r\n            />\r\n\r\n            <div className=\"game-ui\">\r\n              <div className=\"current-subject\">\r\n                {subjectOptions.find(s => s.value === selectedSubject)?.label} - {selectedLevel}\r\n              </div>\r\n              \r\n              <div className=\"abilities\">\r\n                <div \r\n                  className={`ability ${abilities.sprint.duration > 0 ? 'active' : ''} ${abilities.sprint.cooldown > 0 ? 'cooldown' : ''}`}\r\n                  onClick={() => activateAbility('sprint')}\r\n                >\r\n                  <div className=\"ability-icon\">🏃</div>\r\n                  <div>Sprint (1)</div>\r\n                  <div className=\"ability-desc\">+50% vitesse</div>\r\n                </div>\r\n                <div \r\n                  className={`ability ${abilities.hint.uses === 0 ? 'cooldown' : ''}`}\r\n                  onClick={() => activateAbility('hint')}\r\n                >\r\n                  <div className=\"ability-icon\">💡</div>\r\n                  <div>Indice ({abilities.hint.uses})</div>\r\n                  <div className=\"ability-desc\">Révèle indices</div>\r\n                </div>\r\n                <div \r\n                  className={`ability ${abilities.shield.duration > 0 ? 'active' : ''} ${abilities.shield.cooldown > 0 ? 'cooldown' : ''}`}\r\n                  onClick={() => activateAbility('shield')}\r\n                >\r\n                  <div className=\"ability-icon\">🛡️</div>\r\n                  <div>Bouclier (3)</div>\r\n                  <div className=\"ability-desc\">Protection</div>\r\n                </div>\r\n                <div \r\n                  className={`ability ${abilities.freeze.cooldown > 0 ? 'cooldown' : ''}`}\r\n                  onClick={() => activateAbility('freeze')}\r\n                >\r\n                  <div className=\"ability-icon\">❄️</div>\r\n                  <div>Gel (4)</div>\r\n                  <div className=\"ability-desc\">Arrête le temps</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {gameState === 'challenge' && currentQuestion && (\r\n          <div className=\"challenge-panel show\">\r\n            <h3>Défi Éducatif</h3>\r\n            <p className=\"challenge-question\">{currentQuestion.question}</p>\r\n            <div className=\"challenge-options\">\r\n              {currentQuestion.options.map((option, index) => (\r\n                <button\r\n                  key={index}\r\n                  className={`challenge-option ${\r\n                    selectedAnswer === index\r\n                      ? option === currentQuestion.correctAnswer\r\n                        ? 'correct'\r\n                        : 'incorrect'\r\n                      : ''\r\n                  } ${\r\n                    selectedAnswer !== null && option === currentQuestion.correctAnswer\r\n                      ? 'correct'\r\n                      : ''\r\n                  }`}\r\n                  onClick={() => handleAnswerSelect(index)}\r\n                  disabled={selectedAnswer !== null}\r\n                >\r\n                  {option}\r\n                </button>\r\n              ))}\r\n            </div>\r\n            {showHint && (\r\n              <div className=\"challenge-hint\">\r\n                💡 {currentQuestion.explanation}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        {gameState === 'victory' && (\r\n          <div className=\"victory-screen show\">\r\n            <h2>🎉 Victoire! 🎉</h2>\r\n            <p>Vous avez terminé le labyrinthe!</p>\r\n            <div className=\"victory-stats\">\r\n              <p>Score Final: <span className=\"stat-value\">{score}</span></p>\r\n              <p>XP Gagné: <span className=\"stat-value\">+{xpEarned} XP</span></p>\r\n              <p>Temps: <span className=\"stat-value\">{startTime ? formatTime(Date.now()) : '0:00'}</span></p>\r\n              <p>Précision: <span className=\"stat-value\">{totalAnswers > 0 ? Math.round((correctAnswers / totalAnswers) * 100) : 100}%</span></p>\r\n            </div>\r\n            <button className=\"menu-button\" onClick={() => {\r\n              mazeGeneratedRef.current = false;\r\n              window.location.reload();\r\n            }}>Rejouer</button>\r\n            <button className=\"menu-button\" onClick={() => navigate('/mini-jeux')}>Changer de jeu</button>\r\n          </div>\r\n        )}\r\n        \r\n        {gameState === 'gameover' && (\r\n          <div className=\"gameover-screen show\">\r\n            <h2>💀 Game Over! 💀</h2>\r\n            <p>Votre énergie est épuisée!</p>\r\n            <div className=\"gameover-stats\">\r\n              <p>Score: <span className=\"stat-value\">{score}</span></p>\r\n              <p>XP Gagné: <span className=\"stat-value\">+{xpEarned} XP</span></p>\r\n              <p>Questions répondues: <span className=\"stat-value\">{correctAnswers}/{totalAnswers}</span></p>\r\n            </div>\r\n            <button className=\"menu-button\" onClick={() => {\r\n              mazeGeneratedRef.current = false;\r\n              window.location.reload();\r\n            }}>Rejouer</button>\r\n            <button className=\"menu-button\" onClick={() => navigate('/mini-jeux')}>Retour aux mini-jeux</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MazeGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}