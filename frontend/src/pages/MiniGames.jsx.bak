import React, { useState, useEffect, useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';
import {
  FaGamepad, FaRocket, FaTrophy, FaStar, FaBolt, FaPlay, FaChartLine, FaRegLightbulb,
  FaArrowRight, FaCheckCircle, FaCrown
} from 'react-icons/fa';
import './MiniGamesPlatform.css';

const MiniGames = () => {
    const [games, setGames] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [hoveredCard, setHoveredCard] = useState(null);
    const { token } = useAuth();
    const navigate = useNavigate();
      const handlePlayFlashCards = (e) => {
        e.preventDefault();
        e.stopPropagation();
        console.log('Button clicked! Navigating to /flash-cards...');
        try {
            navigate('/flash-cards');
            console.log('Navigation called successfully');
        } catch (error) {
            console.error('Navigation error:', error);
        }
    };

    const fetchAvailableGames = useCallback(async () => {
        try {
            const response = await fetch('http://localhost:5000/api/games/available', {
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                const data = await response.json();
                setGames(data.games || []);
            } else {
                setError('Erreur lors du chargement des mini-jeux');
            }
        } catch (err) {
            setError('Erreur de connexion au serveur');
        } finally {
            setLoading(false);
        }
    }, [token]);
    
    useEffect(() => {
        fetchAvailableGames();
    }, [fetchAvailableGames]);
    
    if (loading) {
        return (
            <div className="minigames-page">
                <div className="minigames-container">
                    <div className="loading-state">
                        <div className="loading-spinner"></div>
                        <p>Chargement des mini-jeux magiques...</p>
                        <div className="loading-dots">
                            <span></span>
                            <span></span>
                            <span></span>
                        </div>
                    </div>
                </div>
            </div>
        );
    }

    if (error) {
        return (
            <div className="minigames-page">
                <div className="minigames-container">
                    <div className="error-state">
                        <h2>üòï Oups!</h2>
                        <p>{error}</p>
                        <button onClick={fetchAvailableGames} className="btn-primary">
                            <FaRocket /> R√©essayer
                        </button>
                    </div>
                </div>
            </div>
        );
    }
    
    return (
        <div className="minigames-page">
            <div className="minigames-container">
                <div className="minigames-hero">
                    <div className="minigames-hero-content">
                        <h1><FaGamepad /> Mini-Jeux √âducatifs</h1>
                        <p>Choisis un mini-jeu pour tester tes connaissances et gagner de l'XP magique! üåü</p>
                        <div className="hero-stats">
                            <div className="stat-bubble">
                                <FaStar />
                                <span>+{games.length * 50} XP possible</span>
                            </div>
                            <div className="stat-bubble">
                                <FaTrophy />
                                <span>4 r√©compenses</span>
                            </div>
                            <div className="stat-bubble">
                                <FaRegLightbulb />
                                <span>Am√©liore tes comp√©tences</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div className="minigames-grid">
                    {/* Flash Cards Game Card - Featured */}
                    <div 
                        className="minigames-card featured"
                    onMouseEnter={() => setHoveredCard('flash-cards')}
                    onMouseLeave={() => setHoveredCard(null)}
                >
                    <div className="card-glow"></div>
                    <div className="featured-badge">
                        <FaBolt />
                        Populaire
                    </div>
                    <div className="minigames-card-icon">üÉè</div>
                    <h3>Cartes M√©moire</h3>
                    <p>R√©ponds rapidement aux questions de math√©matiques, sciences, histoire et g√©ographie!</p>
                    <div className="minigames-card-stats">
                        <div className="minigames-stat">
                            <strong>Sujets</strong>
                            <div className="stat-value">
                                <span>4</span>
                            </div>
                        </div>
                        <div className="minigames-stat">
                            <strong>XP par question</strong>
                            <div className="stat-value">
                                <span>10</span>
                            </div>
                        </div>
                    </div>
                    <button 
                        onClick={handlePlayFlashCards}
                        className="minigames-play-btn"
                        aria-label="Lancer le jeu Cartes M√©moire"
                    >                        <FaPlay />
                        <span>Jouer Maintenant</span>
                        {hoveredCard === 'flash-cards' && <span className="btn-sparkle"></span>}
                    </button>
                </div>
                
                {/* Show available games from backend */}
                {games.map((game) => (
                    <div 
                        key={game.id} 
                        className="minigames-card"
                        onMouseEnter={() => setHoveredCard(game.id)}
                        onMouseLeave={() => setHoveredCard(null)}
                    >
                        <div className="card-glow"></div>
                        <div className="minigames-card-icon">üéØ</div>
                        <h3>{game.name}</h3>
                        <p>{game.description}</p>
                        <div className="minigames-card-stats">
                            <div className="minigames-stat">
                                <strong>Score Max</strong>
                                <div className="stat-value">
                                    <span>{game.max_score}</span>
                                </div>
                            </div>
                            <div className="minigames-stat">
                                <strong>XP par question</strong>
                                <div className="stat-value">
                                    <span>{game.xp_per_question}</span>
                                </div>
                            </div>
                        </div>
                        <div className="minigames-soon">
                            üîß Bient√¥t disponible
                        </div>                    </div>
                ))}
                
                {/* Enhanced placeholder cards */}
                <div
                    className="minigames-card upcoming"
                    onMouseEnter={() => setHoveredCard('quiz')}
                    onMouseLeave={() => setHoveredCard(null)}
                >
                    <div className="card-glow"></div>
                    <div className="minigames-card-icon">üß©</div>
                    <h3>Quiz Interactif</h3>
                    <p>Questions √† choix multiple avec timer et classements en temps r√©el</p>
                    <div className="minigames-features">
                        <span>‚Ä¢ Timer en temps r√©el</span>
                        <span>‚Ä¢ Classements</span>
                        <span>‚Ä¢ Mode multijoueur</span>
                    </div>
                    <div className="minigames-soon">
                        üîß En d√©veloppement
                    </div>
                </div>

                <div 
                    className="minigames-card upcoming"
                    onMouseEnter={() => setHoveredCard('math')}
                    onMouseLeave={() => setHoveredCard(null)}
                >
                    <div className="card-glow"></div>
                    <div className="minigames-card-icon">üé≤</div>
                    <h3>D√©fi Math√©matique</h3>
                    <p>R√©sous des √©quations et des probl√®mes de logique contre la montre</p>
                    <div className="minigames-features">
                        <span>‚Ä¢ √âquations dynamiques</span>
                        <span>‚Ä¢ Niveaux adaptatifs</span>
                        <span>‚Ä¢ Bonus de vitesse</span>
                    </div>
                    <div className="minigames-soon">
                        üîß En d√©veloppement
                    </div>
                </div>
                
                <div 
                    className="minigames-card upcoming"
                    onMouseEnter={() => setHoveredCard('geo')}
                    onMouseLeave={() => setHoveredCard(null)}
                >
                    <div className="card-glow"></div>
                    <div className="minigames-card-icon">üó∫Ô∏è</div>
                    <h3>Explorateur G√©ographique</h3>
                    <p>D√©couvre le monde √† travers des cartes interactives et des d√©fis</p>
                    <div className="minigames-features">
                        <span>‚Ä¢ Cartes interactives</span>
                        <span>‚Ä¢ Mode exploration</span>
                        <span>‚Ä¢ D√©fis g√©ographiques</span>
                    </div>
                    <div className="minigames-soon">
                        üîß En d√©veloppement
                    </div>
                </div>

                <div 
                    className="minigames-card upcoming"
                    onMouseEnter={() => setHoveredCard('memory')}
                    onMouseLeave={() => setHoveredCard(null)}
                >
                    <div className="card-glow"></div>
                    <div className="minigames-card-icon">üß†</div>
                    <h3>Ma√Ætre de la M√©moire</h3>
                    <p>Entra√Æne ta m√©moire avec des s√©quences, patterns et associations</p>
                    <div className="minigames-features">
                        <span>‚Ä¢ Jeux de s√©quences</span>
                        <span>‚Ä¢ Memory cards</span>
                        <span>‚Ä¢ Exercices d'association</span>
                    </div>
                    <div className="minigames-soon">
                        üîß En d√©veloppement
                    </div>
                </div>
                </div>

                <div className="minigames-section">
                    <h2 className="section-title"><FaChartLine /> Ton √âvolution</h2>
                    <p className="section-desc">Suis ton √©volution et d√©bloque des r√©compenses en jouant r√©guli√®rement</p>
                    
                    <div className="minigames-stats-summary">
                        <div className="stat-card">
                            <div className="stat-circle">
                                <span>0</span>
                            </div>
                            <p>Sessions termin√©es</p>
                        </div>
                        <div className="stat-card">
                            <div className="stat-circle">
                                <span>0</span>
                            </div>
                            <p>XP gagn√©e</p>
                        </div>
                        <div className="stat-card">
                            <div className="stat-circle">
                                <span>0%</span>
                            </div>
                            <p>Score moyen</p>
                        </div>
                        <div className="stat-card">
                            <div className="stat-circle">
                                <span>0</span>
                            </div>
                            <p>Succ√®s d√©bloqu√©s</p>
                        </div>
                    </div>

                    <div className="minigames-achievements">
                        <h3><FaCrown /> Succ√®s √† D√©bloquer</h3>
                        <div className="achievement-item bronze">
                            <span className="achievement-badge">ü•â</span>
                            <span className="achievement-title">Premi√®re Victoire</span>
                            <div className="achievement-progress">
                                <div className="progress-bar">
                                    <div className="progress-fill" style={{width: '0%'}}></div>
                                </div>
                                <span className="progress-text">0/1</span>
                            </div>
                        </div>
                        <div className="achievement-item silver">
                            <span className="achievement-badge">ü•à</span>
                            <span className="achievement-title">Ma√Ætre des Sessions</span>
                            <div className="achievement-progress">
                                <div className="progress-bar">
                                    <div className="progress-fill" style={{width: '0%'}}></div>
                                </div>
                                <span className="progress-text">0/10</span>
                            </div>
                        </div>                        <div className="achievement-item gold">
                            <span className="achievement-badge">ü•á</span>
                            <span className="achievement-title">Score Parfait</span>
                            <div className="achievement-progress">
                                <div className="progress-bar">
                                    <div className="progress-fill" style={{width: '0%'}}></div>
                                </div>
                                <span className="progress-text">0/1</span>
                            </div>
                        </div>
                        <div className="achievement-item legendary">
                            <span className="achievement-badge">üëë</span>
                            <span className="achievement-title">Champion des Mini-Jeux</span>
                            <div className="achievement-progress">
                                <div className="progress-bar">
                                    <div className="progress-fill" style={{width: '0%'}}></div>
                                </div>
                                <span className="progress-text">0/100</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div className="minigames-goals">
                    <h3><FaStar /> Tes Prochains Objectifs</h3>
                    <div className="goals-grid">
                        <div className="goal-item">
                            <FaBolt />
                            <span>Compl√©ter ta premi√®re session Flash Cards</span>
                        </div>
                        <div className="goal-item">
                            <FaTrophy />
                            <span>Atteindre un score de 80% ou plus</span>
                        </div>
                        <div className="goal-item">
                            <FaStar />
                            <span>Gagner 100 XP dans les mini-jeux</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default MiniGames;
